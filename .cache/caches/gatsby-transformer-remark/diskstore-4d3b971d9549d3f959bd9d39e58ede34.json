{"expireTime":9007200860997566000,"key":"transformer-remark-markdown-ast-e34dd156281aef8f4ebc00576e5b6aae-gatsby-remark-graphgatsby-remark-prismjsgatsby-remark-katex-","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"DynamoDB Local Secondary Index","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":33,"offset":33},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":33,"offset":33},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A ","position":{"start":{"line":4,"column":1,"offset":35},"end":{"line":4,"column":3,"offset":37},"indent":[]}},{"type":"link","title":null,"url":"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LSI.html","children":[{"type":"text","value":"local secondary index","position":{"start":{"line":4,"column":4,"offset":38},"end":{"line":4,"column":25,"offset":59},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":37},"end":{"line":4,"column":101,"offset":135},"indent":[]}},{"type":"text","value":" essentially gives DynamoDB tables an additional sort key by which to query data. I recently needed to add a local secondary index to an existing DynamoDB table through CloudFormation so that I could query objects by the ","position":{"start":{"line":4,"column":101,"offset":135},"end":{"line":4,"column":322,"offset":356},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">modified</code>","position":{"start":{"line":4,"column":322,"offset":356},"end":{"line":4,"column":332,"offset":366},"indent":[]}},{"type":"text","value":" column value without scanning. Unfortunately, this isn't as easy as simply adding the ","position":{"start":{"line":4,"column":332,"offset":366},"end":{"line":4,"column":419,"offset":453},"indent":[]}},{"type":"link","title":null,"url":"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-lsi.html","children":[{"type":"html","value":"<code class=\"language-text\">LocalSecondaryIndexes</code>","position":{"start":{"line":4,"column":420,"offset":454},"end":{"line":4,"column":443,"offset":477},"indent":[]}},{"type":"text","value":" element","position":{"start":{"line":4,"column":443,"offset":477},"end":{"line":4,"column":451,"offset":485},"indent":[]}}],"position":{"start":{"line":4,"column":419,"offset":453},"end":{"line":4,"column":549,"offset":583},"indent":[]}},{"type":"text","value":" to the CloudFormation script.","position":{"start":{"line":4,"column":549,"offset":583},"end":{"line":4,"column":579,"offset":613},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":35},"end":{"line":4,"column":579,"offset":613},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Adding a local secondary index requires replacing the table, which creates the challenge of preserving the table data during the upgrade.","position":{"start":{"line":6,"column":1,"offset":615},"end":{"line":6,"column":138,"offset":752},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":615},"end":{"line":6,"column":138,"offset":752},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Here's what I learned:","position":{"start":{"line":8,"column":3,"offset":756},"end":{"line":8,"column":25,"offset":778},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":754},"end":{"line":8,"column":27,"offset":780},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":754},"end":{"line":8,"column":27,"offset":780},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"LocalSecondaryIndex CloudFormation YAML Syntax","position":{"start":{"line":10,"column":3,"offset":784},"end":{"line":10,"column":49,"offset":830},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":784},"end":{"line":10,"column":49,"offset":830},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":782},"end":{"line":10,"column":49,"offset":830},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"How to troubleshoot the error ","position":{"start":{"line":11,"column":3,"offset":833},"end":{"line":11,"column":33,"offset":863},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Property AttributeDefinitions is inconsistent with the KeySchema of the table and the secondary indexes</code>","position":{"start":{"line":11,"column":33,"offset":863},"end":{"line":11,"column":138,"offset":968},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":11,"column":138,"offset":968},"end":{"line":11,"column":139,"offset":969},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":833},"end":{"line":11,"column":139,"offset":969},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":831},"end":{"line":11,"column":139,"offset":969},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"How to take DynamoDB table backups with the AWS CLI","position":{"start":{"line":12,"column":3,"offset":972},"end":{"line":12,"column":54,"offset":1023},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":972},"end":{"line":12,"column":54,"offset":1023},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":970},"end":{"line":12,"column":54,"offset":1023},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A work-around to prevent the error ","position":{"start":{"line":13,"column":3,"offset":1026},"end":{"line":13,"column":38,"offset":1061},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">CloudFormation cannot update a stack when a custom-named resource requires replacing...</code>","position":{"start":{"line":13,"column":38,"offset":1061},"end":{"line":13,"column":127,"offset":1150},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":13,"column":127,"offset":1150},"end":{"line":13,"column":128,"offset":1151},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":1026},"end":{"line":13,"column":128,"offset":1151},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":1024},"end":{"line":13,"column":128,"offset":1151},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Basic JSON parsing with ","position":{"start":{"line":14,"column":3,"offset":1154},"end":{"line":14,"column":27,"offset":1178},"indent":[]}},{"type":"link","title":null,"url":"https://stedolan.github.io/jq/","children":[{"type":"html","value":"<code class=\"language-text\">jq</code>","position":{"start":{"line":14,"column":28,"offset":1179},"end":{"line":14,"column":32,"offset":1183},"indent":[]}}],"position":{"start":{"line":14,"column":27,"offset":1178},"end":{"line":14,"column":65,"offset":1216},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":1154},"end":{"line":14,"column":65,"offset":1216},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":1152},"end":{"line":14,"column":65,"offset":1216},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":782},"end":{"line":14,"column":65,"offset":1216},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Initial Table Schema: ","position":{"start":{"line":16,"column":4,"offset":1221},"end":{"line":16,"column":26,"offset":1243},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Jobs</code>","position":{"start":{"line":16,"column":26,"offset":1243},"end":{"line":16,"column":32,"offset":1249},"indent":[]}},{"type":"text","value":" Table","position":{"start":{"line":16,"column":32,"offset":1249},"end":{"line":16,"column":38,"offset":1255},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":1218},"end":{"line":16,"column":38,"offset":1255},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The original schema for the ","position":{"start":{"line":18,"column":1,"offset":1257},"end":{"line":18,"column":29,"offset":1285},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Jobs</code>","position":{"start":{"line":18,"column":29,"offset":1285},"end":{"line":18,"column":35,"offset":1291},"indent":[]}},{"type":"text","value":" table consisted of a generated ","position":{"start":{"line":18,"column":35,"offset":1291},"end":{"line":18,"column":67,"offset":1323},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">jobId</code>","position":{"start":{"line":18,"column":67,"offset":1323},"end":{"line":18,"column":74,"offset":1330},"indent":[]}},{"type":"text","value":" partition key and ","position":{"start":{"line":18,"column":74,"offset":1330},"end":{"line":18,"column":93,"offset":1349},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">jobName</code>","position":{"start":{"line":18,"column":93,"offset":1349},"end":{"line":18,"column":102,"offset":1358},"indent":[]}},{"type":"text","value":" sort key. The system is used for invoicing, so its important for users to quickly find a Job by its ID or name so they made a good choice fot they key schema.","position":{"start":{"line":18,"column":102,"offset":1358},"end":{"line":18,"column":261,"offset":1517},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":1257},"end":{"line":18,"column":261,"offset":1517},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the CloudFormation code that originally defined the ","position":{"start":{"line":20,"column":1,"offset":1519},"end":{"line":20,"column":61,"offset":1579},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Jobs</code>","position":{"start":{"line":20,"column":61,"offset":1579},"end":{"line":20,"column":67,"offset":1585},"indent":[]}},{"type":"text","value":" table","position":{"start":{"line":20,"column":67,"offset":1585},"end":{"line":20,"column":73,"offset":1591},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1519},"end":{"line":20,"column":73,"offset":1591},"indent":[]}},{"type":"html","lang":"yaml","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># app.cloudformation.yaml</span>\n<span class=\"token key atrule\">JobsDynamoDBTable</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token key atrule\">Type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'AWS::DynamoDB::Table'</span>\n\t<span class=\"token key atrule\">Properties</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token key atrule\">TableName</span><span class=\"token punctuation\">:</span> Jobs\n\t\t<span class=\"token key atrule\">AttributeDefinitions</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token punctuation\">-</span>\n\t\t\t\t<span class=\"token key atrule\">AttributeName</span><span class=\"token punctuation\">:</span> jobId\n\t\t\t\t<span class=\"token key atrule\">AttributeType</span><span class=\"token punctuation\">:</span> S\n\t\t\t<span class=\"token punctuation\">-</span>\n\t\t\t\t<span class=\"token key atrule\">AttributeName</span><span class=\"token punctuation\">:</span> name\n\t\t\t\t<span class=\"token key atrule\">AttributeType</span><span class=\"token punctuation\">:</span> S\n\t\t<span class=\"token key atrule\">KeySchema</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token punctuation\">-</span>\n\t\t\t\t<span class=\"token key atrule\">AttributeName</span><span class=\"token punctuation\">:</span> jobId\n\t\t\t\t<span class=\"token key atrule\">KeyType</span><span class=\"token punctuation\">:</span> HASH\n\t\t\t<span class=\"token punctuation\">-</span>\n\t\t\t\t<span class=\"token key atrule\">AttributeName</span><span class=\"token punctuation\">:</span> name\n\t\t\t\t<span class=\"token key atrule\">KeyType</span><span class=\"token punctuation\">:</span> RANGE\n\t\t<span class=\"token key atrule\">ProvisionedThroughput</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token key atrule\">ReadCapacityUnits</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n\t\t\t<span class=\"token key atrule\">WriteCapacityUnits</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span></code></pre></div>","position":{"start":{"line":22,"column":1,"offset":1593},"end":{"line":45,"column":4,"offset":2018},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Recently, the client asked for some reporting to be added to the application that requires querying jobs by their last modified date. No problem, that's what local secondary indexes were built for.","position":{"start":{"line":47,"column":1,"offset":2020},"end":{"line":47,"column":198,"offset":2217},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":2020},"end":{"line":47,"column":198,"offset":2217},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Add the LocalSecondaryIndex to the CloudFormation Script","position":{"start":{"line":49,"column":4,"offset":2222},"end":{"line":49,"column":60,"offset":2278},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":2219},"end":{"line":49,"column":60,"offset":2278},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":51,"column":1,"offset":2280},"end":{"line":51,"column":5,"offset":2284},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">LocalSecondaryIndexes</code>","position":{"start":{"line":51,"column":5,"offset":2284},"end":{"line":51,"column":28,"offset":2307},"indent":[]}},{"type":"text","value":" element for DynamoDB in CloudFormation is straight-forward. Provide a descriptive key name, alternate key schema, and Projection (columns that should be available in the index).","position":{"start":{"line":51,"column":28,"offset":2307},"end":{"line":51,"column":206,"offset":2485},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":2280},"end":{"line":51,"column":206,"offset":2485},"indent":[]}},{"type":"html","lang":"yaml","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">LocalSecondaryIndexes</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span>\n    <span class=\"token key atrule\">IndexName</span><span class=\"token punctuation\">:</span> jobId<span class=\"token punctuation\">-</span>modified<span class=\"token punctuation\">-</span>index\n    <span class=\"token key atrule\">KeySchema</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span>\n        <span class=\"token key atrule\">AttributeName</span><span class=\"token punctuation\">:</span> jobId\n        <span class=\"token key atrule\">KeyType</span><span class=\"token punctuation\">:</span> HASH\n      <span class=\"token punctuation\">-</span>\n        <span class=\"token key atrule\">AttributeName</span><span class=\"token punctuation\">:</span> modified\n        <span class=\"token key atrule\">KeyType</span><span class=\"token punctuation\">:</span> RANGE\n    <span class=\"token key atrule\">Projection</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">ProjectionType</span><span class=\"token punctuation\">:</span> ALL</code></pre></div>","position":{"start":{"line":53,"column":1,"offset":2487},"end":{"line":66,"column":4,"offset":2740},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"An attempt to deploy this change will result in an error:","position":{"start":{"line":68,"column":1,"offset":2742},"end":{"line":68,"column":58,"offset":2799},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":2742},"end":{"line":68,"column":58,"offset":2799},"indent":[]}},{"type":"html","lang":"bash","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">An error occurred: JobsDynamoDBTable - Property AttributeDefinitions is inconsistent with the KeySchema of the table and the secondary indexes.</code></pre></div>","position":{"start":{"line":70,"column":1,"offset":2801},"end":{"line":72,"column":4,"offset":2956},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Of course! The ","position":{"start":{"line":74,"column":1,"offset":2958},"end":{"line":74,"column":16,"offset":2973},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">AttributeDefinitions</code>","position":{"start":{"line":74,"column":16,"offset":2973},"end":{"line":74,"column":38,"offset":2995},"indent":[]}},{"type":"text","value":" must be updated to include the ","position":{"start":{"line":74,"column":38,"offset":2995},"end":{"line":74,"column":70,"offset":3027},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">modified</code>","position":{"start":{"line":74,"column":70,"offset":3027},"end":{"line":74,"column":80,"offset":3037},"indent":[]}},{"type":"text","value":" property. Once updated, the entire ","position":{"start":{"line":74,"column":80,"offset":3037},"end":{"line":74,"column":116,"offset":3073},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">JobsDynamoDBTable</code>","position":{"start":{"line":74,"column":116,"offset":3073},"end":{"line":74,"column":135,"offset":3092},"indent":[]}},{"type":"text","value":" CloudFormation resource element now looked like this:","position":{"start":{"line":74,"column":135,"offset":3092},"end":{"line":74,"column":189,"offset":3146},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":2958},"end":{"line":74,"column":189,"offset":3146},"indent":[]}},{"type":"html","lang":"yaml","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># app.cloudformation.yaml</span>\n<span class=\"token key atrule\">JobsDynamoDBTable</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token key atrule\">Type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'AWS::DynamoDB::Table'</span>\n\t<span class=\"token key atrule\">Properties</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token key atrule\">TableName</span><span class=\"token punctuation\">:</span> Jobs\n\t\t<span class=\"token key atrule\">AttributeDefinitions</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token punctuation\">-</span>\n\t\t\t\t<span class=\"token key atrule\">AttributeName</span><span class=\"token punctuation\">:</span> jobId\n\t\t\t\t<span class=\"token key atrule\">AttributeType</span><span class=\"token punctuation\">:</span> S\n\t\t\t<span class=\"token punctuation\">-</span>\n\t\t\t\t<span class=\"token key atrule\">AttributeName</span><span class=\"token punctuation\">:</span> name\n\t\t\t\t<span class=\"token key atrule\">AttributeType</span><span class=\"token punctuation\">:</span> S\n\t\t\t<span class=\"token comment\"># Required for LocalSecondaryIndex</span>\n\t\t\t<span class=\"token punctuation\">-</span>\n\t\t\t\t<span class=\"token key atrule\">AttributeName</span><span class=\"token punctuation\">:</span> modified\n\t\t\t\t<span class=\"token key atrule\">AttributeType</span><span class=\"token punctuation\">:</span> N\n\t\t<span class=\"token key atrule\">KeySchema</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token punctuation\">-</span>\n\t\t\t\t<span class=\"token key atrule\">AttributeName</span><span class=\"token punctuation\">:</span> jobId\n\t\t\t\t<span class=\"token key atrule\">KeyType</span><span class=\"token punctuation\">:</span> HASH\n\t\t\t<span class=\"token punctuation\">-</span>\n\t\t\t\t<span class=\"token key atrule\">AttributeName</span><span class=\"token punctuation\">:</span> name\n\t\t\t\t<span class=\"token key atrule\">KeyType</span><span class=\"token punctuation\">:</span> RANGE\n\t\t<span class=\"token comment\"># Make modified available as a sort key</span>\n\t\t<span class=\"token key atrule\">LocalSecondaryIndexes</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token punctuation\">-</span>\n\t\t\t\t<span class=\"token key atrule\">IndexName</span><span class=\"token punctuation\">:</span> jobId<span class=\"token punctuation\">-</span>modified<span class=\"token punctuation\">-</span>index\n\t\t\t\t<span class=\"token key atrule\">KeySchema</span><span class=\"token punctuation\">:</span>\n\t\t\t\t\t<span class=\"token punctuation\">-</span>\n\t\t\t\t\t\t<span class=\"token key atrule\">AttributeName</span><span class=\"token punctuation\">:</span> jobId\n\t\t\t\t\t\t<span class=\"token key atrule\">KeyType</span><span class=\"token punctuation\">:</span> HASH\n\t\t\t\t\t<span class=\"token punctuation\">-</span>\n\t\t\t\t\t\t<span class=\"token key atrule\">AttributeName</span><span class=\"token punctuation\">:</span> modified\n\t\t\t\t\t\t<span class=\"token key atrule\">KeyType</span><span class=\"token punctuation\">:</span> RANGE\n\t\t\t\t<span class=\"token key atrule\">Projection</span><span class=\"token punctuation\">:</span>\n\t\t\t\t\t<span class=\"token key atrule\">ProjectionType</span><span class=\"token punctuation\">:</span> ALL <span class=\"token comment\"># Make All columns available in index</span>\n\t\t<span class=\"token key atrule\">ProvisionedThroughput</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token key atrule\">ReadCapacityUnits</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n\t\t\t<span class=\"token key atrule\">WriteCapacityUnits</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span></code></pre></div>","position":{"start":{"line":76,"column":1,"offset":3148},"end":{"line":116,"column":4,"offset":3979},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Though the CloudFormation template now seems complete, deploying fails:","position":{"start":{"line":118,"column":1,"offset":3981},"end":{"line":118,"column":72,"offset":4052},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":3981},"end":{"line":118,"column":72,"offset":4052},"indent":[]}},{"type":"html","lang":"bash","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">An error occurred: JobsDynamoDBTable - CloudFormation cannot update a stack when a custom-named resource requires replacing. Rename Jobs and update the stack again.</code></pre></div>","position":{"start":{"line":120,"column":1,"offset":4054},"end":{"line":122,"column":4,"offset":4230},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Replace the a DynamoDB Resource","position":{"start":{"line":124,"column":4,"offset":4235},"end":{"line":124,"column":35,"offset":4266},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":4232},"end":{"line":124,"column":35,"offset":4266},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"CloudFormation refuses to add the index to the DynamoDB table, so it must be replaced with a new table. However, with application data in the table, it can't simply be deleted. The plan, then, is to create a new table called ","position":{"start":{"line":126,"column":1,"offset":4268},"end":{"line":126,"column":226,"offset":4493},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Jobs.v1</code>","position":{"start":{"line":126,"column":226,"offset":4493},"end":{"line":126,"column":235,"offset":4502},"indent":[]}},{"type":"text","value":" with the index, then to move data from ","position":{"start":{"line":126,"column":235,"offset":4502},"end":{"line":126,"column":275,"offset":4542},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Jobs</code>","position":{"start":{"line":126,"column":275,"offset":4542},"end":{"line":126,"column":281,"offset":4548},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":126,"column":281,"offset":4548},"end":{"line":126,"column":285,"offset":4552},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Jobs.v1</code>","position":{"start":{"line":126,"column":285,"offset":4552},"end":{"line":126,"column":294,"offset":4561},"indent":[]}},{"type":"text","value":" and finally (optionally) delete the original ","position":{"start":{"line":126,"column":294,"offset":4561},"end":{"line":126,"column":340,"offset":4607},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Jobs</code>","position":{"start":{"line":126,"column":340,"offset":4607},"end":{"line":126,"column":346,"offset":4613},"indent":[]}},{"type":"text","value":" table.","position":{"start":{"line":126,"column":346,"offset":4613},"end":{"line":126,"column":353,"offset":4620},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":4268},"end":{"line":126,"column":353,"offset":4620},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Retain the Original Table","position":{"start":{"line":128,"column":5,"offset":4626},"end":{"line":128,"column":30,"offset":4651},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":4622},"end":{"line":128,"column":30,"offset":4651},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A rename of the table will result in the original ","position":{"start":{"line":130,"column":1,"offset":4653},"end":{"line":130,"column":51,"offset":4703},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Jobs</code>","position":{"start":{"line":130,"column":51,"offset":4703},"end":{"line":130,"column":57,"offset":4709},"indent":[]}},{"type":"text","value":" table being deleted. To prevent this, add ","position":{"start":{"line":130,"column":57,"offset":4709},"end":{"line":130,"column":100,"offset":4752},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">DeletionPolicy: Retain</code>","position":{"start":{"line":130,"column":100,"offset":4752},"end":{"line":130,"column":124,"offset":4776},"indent":[]}},{"type":"text","value":" to table object in your CloudFormation script and deploy. For safety sake, make a backup as well. Backups can be created in the AWS Console or via the CLI.","position":{"start":{"line":130,"column":124,"offset":4776},"end":{"line":130,"column":280,"offset":4932},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":4653},"end":{"line":130,"column":280,"offset":4932},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Create a DynamoDB Backup with the AWS CLI","position":{"start":{"line":132,"column":6,"offset":4939},"end":{"line":132,"column":47,"offset":4980},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":4934},"end":{"line":132,"column":47,"offset":4980},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here's an example of how to create a backup using the AWS CLI:","position":{"start":{"line":134,"column":1,"offset":4982},"end":{"line":134,"column":63,"offset":5044},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":4982},"end":{"line":134,"column":63,"offset":5044},"indent":[]}},{"type":"html","lang":"bash","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws dynamodb create-backup <span class=\"token punctuation\">\\</span>\n  --region<span class=\"token operator\">=</span>YOUR_REGION_HERE <span class=\"token punctuation\">\\</span>\n  --table-name Jobs <span class=\"token punctuation\">\\</span>\n  --backup-name Jobs-<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> <span class=\"token string\">'+%Y%m%d_%H%M%S'</span><span class=\"token variable\">)</span></span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"BackupDetails\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"BackupCreationDateTime\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">1548578121.641</span>,\n    <span class=\"token string\">\"BackupName\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"Jobs-20190127_033734\"</span>,\n    <span class=\"token string\">\"BackupStatus\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"CREATING\"</span>,\n    <span class=\"token string\">\"BackupType\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"USER\"</span>,\n    <span class=\"token string\">\"BackupSizeBytes\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">123456</span>,\n    <span class=\"token string\">\"BackupArn\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"arn:aws:dynamodb:us-east-1:123456789012:table/Jobs/backup/01548578121641-f46bes63\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":136,"column":1,"offset":5046},"end":{"line":151,"column":4,"offset":5493},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It's important to let the backup finish before proceeding with further changes, but the ","position":{"start":{"line":153,"column":1,"offset":5495},"end":{"line":153,"column":89,"offset":5583},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">aws dynamodb backup</code>","position":{"start":{"line":153,"column":89,"offset":5583},"end":{"line":153,"column":110,"offset":5604},"indent":[]}},{"type":"text","value":" command returns almost instantly because the backup operation is asynchronous. ","position":{"start":{"line":153,"column":110,"offset":5604},"end":{"line":153,"column":190,"offset":5684},"indent":[]}}],"position":{"start":{"line":153,"column":1,"offset":5495},"end":{"line":153,"column":190,"offset":5684},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Waiting on the backup to complete can be done with a simple script and a little help from the ","position":{"start":{"line":155,"column":1,"offset":5686},"end":{"line":155,"column":95,"offset":5780},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">jq</code>","position":{"start":{"line":155,"column":95,"offset":5780},"end":{"line":155,"column":99,"offset":5784},"indent":[]}},{"type":"text","value":" utility.","position":{"start":{"line":155,"column":99,"offset":5784},"end":{"line":155,"column":108,"offset":5793},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":5686},"end":{"line":155,"column":108,"offset":5793},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"First, parse out the ARN using ","position":{"start":{"line":157,"column":1,"offset":5795},"end":{"line":157,"column":32,"offset":5826},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">jq</code>","position":{"start":{"line":157,"column":32,"offset":5826},"end":{"line":157,"column":36,"offset":5830},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":157,"column":36,"offset":5830},"end":{"line":157,"column":37,"offset":5831},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":5795},"end":{"line":157,"column":37,"offset":5831},"indent":[]}},{"type":"html","lang":"bash","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token assign-left variable\">backup_arn</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>aws dynamodb create-backup <span class=\"token punctuation\">\\</span>\n  --region<span class=\"token operator\">=</span>YOUR_REGION_HERE <span class=\"token punctuation\">\\</span>\n  --table-name Jobs <span class=\"token punctuation\">\\</span>\n  --backup-name Jobs-<span class=\"token punctuation\">$(</span>date <span class=\"token string\">'+%Y%m%d_%H%M%S'</span><span class=\"token punctuation\">)</span><span class=\"token variable\">)</span></span> <span class=\"token punctuation\">\\</span>\n<span class=\"token operator\">|</span> jq <span class=\"token string\">'.BackupDetails.BackupArn'</span> -r<span class=\"token punctuation\">)</span> <span class=\"token comment\"># -r for \"raw\" returns value w/ out quotes</span></code></pre></div>","position":{"start":{"line":159,"column":1,"offset":5833},"end":{"line":165,"column":4,"offset":6068},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Next, loop until the backup is no longer in a ","position":{"start":{"line":167,"column":1,"offset":6070},"end":{"line":167,"column":47,"offset":6116},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">CREATING</code>","position":{"start":{"line":167,"column":47,"offset":6116},"end":{"line":167,"column":57,"offset":6126},"indent":[]}},{"type":"text","value":" state:","position":{"start":{"line":167,"column":57,"offset":6126},"end":{"line":167,"column":64,"offset":6133},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":6070},"end":{"line":167,"column":64,"offset":6133},"indent":[]}},{"type":"html","lang":"bash","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token assign-left variable\">backup_status</span><span class=\"token operator\">=</span><span class=\"token string\">\"CREATING\"</span>\n$ <span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$backup_status</span>\"</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"CREATING\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"... Waiting for backup to complete, backup_status=\"</span><span class=\"token variable\">$backup_status</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token assign-left variable\">backup_status</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>aws dynamodb describe-backup <span class=\"token punctuation\">\\</span>\n    --backup-arn $backup_arn <span class=\"token punctuation\">\\</span>\n    --region<span class=\"token operator\">=</span>YOUR_REGION_HERE <span class=\"token punctuation\">\\</span>\n  <span class=\"token operator\">|</span> jq <span class=\"token string\">'.BackupDescription.BackupDetails.BackupStatus'</span> -r<span class=\"token variable\">)</span></span><span class=\"token punctuation\">\\</span>\n  <span class=\"token function\">sleep</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">\\</span>\n<span class=\"token keyword\">done</span> <span class=\"token punctuation\">\\</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Backup complete\"</span>\n<span class=\"token punctuation\">..</span>. Waiting <span class=\"token keyword\">for</span> backup to complete, <span class=\"token assign-left variable\">backup_status</span><span class=\"token operator\">=</span>CREATING\n<span class=\"token punctuation\">..</span>. Waiting <span class=\"token keyword\">for</span> backup to complete, <span class=\"token assign-left variable\">backup_status</span><span class=\"token operator\">=</span>CREATING\n<span class=\"token punctuation\">..</span>. Waiting <span class=\"token keyword\">for</span> backup to complete, <span class=\"token assign-left variable\">backup_status</span><span class=\"token operator\">=</span>CREATING\nBackup complete\n\n$</code></pre></div>","position":{"start":{"line":169,"column":1,"offset":6135},"end":{"line":186,"column":4,"offset":6707},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Rename the Table","position":{"start":{"line":188,"column":5,"offset":6713},"end":{"line":188,"column":21,"offset":6729},"indent":[]}}],"position":{"start":{"line":188,"column":1,"offset":6709},"end":{"line":188,"column":21,"offset":6729},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the ","position":{"start":{"line":190,"column":1,"offset":6731},"end":{"line":190,"column":10,"offset":6740},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Retain</code>","position":{"start":{"line":190,"column":10,"offset":6740},"end":{"line":190,"column":18,"offset":6748},"indent":[]}},{"type":"text","value":" policy and backup in place it's safe to rename the Jobs table and deploy. The first time I did this, I had forgotten to deploy the ","position":{"start":{"line":190,"column":18,"offset":6748},"end":{"line":190,"column":150,"offset":6880},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">DeletionPolicy: Retain</code>","position":{"start":{"line":190,"column":150,"offset":6880},"end":{"line":190,"column":174,"offset":6904},"indent":[]}},{"type":"text","value":" change in my CloudFormation and deleted the original table, along with all the data. ","position":{"start":{"line":190,"column":174,"offset":6904},"end":{"line":190,"column":260,"offset":6990},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Take backups!","position":{"start":{"line":190,"column":262,"offset":6992},"end":{"line":190,"column":275,"offset":7005},"indent":[]}}],"position":{"start":{"line":190,"column":260,"offset":6990},"end":{"line":190,"column":277,"offset":7007},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":6731},"end":{"line":190,"column":277,"offset":7007},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The entire table definition now looks like this:","position":{"start":{"line":192,"column":1,"offset":7009},"end":{"line":192,"column":49,"offset":7057},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":7009},"end":{"line":192,"column":49,"offset":7057},"indent":[]}},{"type":"html","lang":"yaml","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># app.cloudformation.yaml</span>\n<span class=\"token key atrule\">JobsDynamoDBTableV1</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># Renamed</span>\n\t<span class=\"token key atrule\">Type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'AWS::DynamoDB::Table'</span>\n\t<span class=\"token comment\"># Retain the table when deleting from CF Stack!</span>\n\t<span class=\"token key atrule\">DeletionPolicy</span><span class=\"token punctuation\">:</span> Retain\n\t<span class=\"token key atrule\">Properties</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token key atrule\">TableName</span><span class=\"token punctuation\">:</span> Jobs.v1 <span class=\"token comment\"># Renamed</span>\n\t\t<span class=\"token key atrule\">AttributeDefinitions</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token punctuation\">-</span>\n\t\t\t\t<span class=\"token key atrule\">AttributeName</span><span class=\"token punctuation\">:</span> jobId\n\t\t\t\t<span class=\"token key atrule\">AttributeType</span><span class=\"token punctuation\">:</span> S\n\t\t\t<span class=\"token punctuation\">-</span>\n\t\t\t\t<span class=\"token key atrule\">AttributeName</span><span class=\"token punctuation\">:</span> name\n\t\t\t\t<span class=\"token key atrule\">AttributeType</span><span class=\"token punctuation\">:</span> S\n\t\t\t<span class=\"token comment\"># Required for LocalSecondaryIndex</span>\n\t\t\t<span class=\"token punctuation\">-</span>\n\t\t\t\t<span class=\"token key atrule\">AttributeName</span><span class=\"token punctuation\">:</span> modified\n\t\t\t\t<span class=\"token key atrule\">AttributeType</span><span class=\"token punctuation\">:</span> N\n\t\t<span class=\"token key atrule\">KeySchema</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token punctuation\">-</span>\n\t\t\t\t<span class=\"token key atrule\">AttributeName</span><span class=\"token punctuation\">:</span> jobId\n\t\t\t\t<span class=\"token key atrule\">KeyType</span><span class=\"token punctuation\">:</span> HASH\n\t\t\t<span class=\"token punctuation\">-</span>\n\t\t\t\t<span class=\"token key atrule\">AttributeName</span><span class=\"token punctuation\">:</span> name\n\t\t\t\t<span class=\"token key atrule\">KeyType</span><span class=\"token punctuation\">:</span> RANGE\n\t\t<span class=\"token comment\"># Make modified available as a sort key</span>\n\t\t<span class=\"token key atrule\">LocalSecondaryIndexes</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token punctuation\">-</span>\n\t\t\t\t<span class=\"token key atrule\">IndexName</span><span class=\"token punctuation\">:</span> jobId<span class=\"token punctuation\">-</span>modified<span class=\"token punctuation\">-</span>index\n\t\t\t\t<span class=\"token key atrule\">KeySchema</span><span class=\"token punctuation\">:</span>\n\t\t\t\t\t<span class=\"token punctuation\">-</span>\n\t\t\t\t\t\t<span class=\"token key atrule\">AttributeName</span><span class=\"token punctuation\">:</span> jobId\n\t\t\t\t\t\t<span class=\"token key atrule\">KeyType</span><span class=\"token punctuation\">:</span> HASH\n\t\t\t\t\t<span class=\"token punctuation\">-</span>\n\t\t\t\t\t\t<span class=\"token key atrule\">AttributeName</span><span class=\"token punctuation\">:</span> modified\n\t\t\t\t\t\t<span class=\"token key atrule\">KeyType</span><span class=\"token punctuation\">:</span> RANGE\n\t\t\t\t<span class=\"token key atrule\">Projection</span><span class=\"token punctuation\">:</span> \n\t\t\t\t\t<span class=\"token key atrule\">ProjectionType</span><span class=\"token punctuation\">:</span> ALL\n\t\t<span class=\"token key atrule\">ProvisionedThroughput</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token key atrule\">ReadCapacityUnits</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n\t\t\t<span class=\"token key atrule\">WriteCapacityUnits</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span></code></pre></div>","position":{"start":{"line":194,"column":1,"offset":7059},"end":{"line":236,"column":4,"offset":7951},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Before deploying, update references to the ","position":{"start":{"line":238,"column":1,"offset":7953},"end":{"line":238,"column":44,"offset":7996},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Jobs</code>","position":{"start":{"line":238,"column":44,"offset":7996},"end":{"line":238,"column":50,"offset":8002},"indent":[]}},{"type":"text","value":" table and ","position":{"start":{"line":238,"column":50,"offset":8002},"end":{"line":238,"column":61,"offset":8013},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">JobsDynamoDBTable</code>","position":{"start":{"line":238,"column":61,"offset":8013},"end":{"line":238,"column":80,"offset":8032},"indent":[]}},{"type":"text","value":" resource to ","position":{"start":{"line":238,"column":80,"offset":8032},"end":{"line":238,"column":93,"offset":8045},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Jobs.v1</code>","position":{"start":{"line":238,"column":93,"offset":8045},"end":{"line":238,"column":102,"offset":8054},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":238,"column":102,"offset":8054},"end":{"line":238,"column":107,"offset":8059},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">JobsDynamoDBTableV1</code>","position":{"start":{"line":238,"column":107,"offset":8059},"end":{"line":238,"column":128,"offset":8080},"indent":[]}},{"type":"text","value":", respectively throughout your application and CloudFormation script.","position":{"start":{"line":238,"column":128,"offset":8080},"end":{"line":238,"column":197,"offset":8149},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":7953},"end":{"line":238,"column":197,"offset":8149},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Deploy and Migrate","position":{"start":{"line":240,"column":4,"offset":8154},"end":{"line":240,"column":22,"offset":8172},"indent":[]}}],"position":{"start":{"line":240,"column":1,"offset":8151},"end":{"line":240,"column":22,"offset":8172},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The deployment will consist of two steps: The deployment its self, then the migration of the Jobs DynamoDB table to the Jobs.v1 table.","position":{"start":{"line":242,"column":1,"offset":8174},"end":{"line":242,"column":135,"offset":8308},"indent":[]}}],"position":{"start":{"line":242,"column":1,"offset":8174},"end":{"line":242,"column":135,"offset":8308},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The deployment of the CloudFormation template is simple:","position":{"start":{"line":244,"column":1,"offset":8310},"end":{"line":244,"column":57,"offset":8366},"indent":[]}}],"position":{"start":{"line":244,"column":1,"offset":8310},"end":{"line":244,"column":57,"offset":8366},"indent":[]}},{"type":"html","lang":"bash","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">aws cloudformation deploy --template-file app.cloudformation.yaml --stack-name app</code></pre></div>","position":{"start":{"line":246,"column":1,"offset":8368},"end":{"line":248,"column":4,"offset":8462},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Once completed, the migration from the ","position":{"start":{"line":250,"column":1,"offset":8464},"end":{"line":250,"column":40,"offset":8503},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Jobs</code>","position":{"start":{"line":250,"column":40,"offset":8503},"end":{"line":250,"column":46,"offset":8509},"indent":[]}},{"type":"text","value":" table to ","position":{"start":{"line":250,"column":46,"offset":8509},"end":{"line":250,"column":56,"offset":8519},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Jobs.v1</code>","position":{"start":{"line":250,"column":56,"offset":8519},"end":{"line":250,"column":65,"offset":8528},"indent":[]}},{"type":"text","value":" can begin.","position":{"start":{"line":250,"column":65,"offset":8528},"end":{"line":250,"column":76,"offset":8539},"indent":[]}}],"position":{"start":{"line":250,"column":1,"offset":8464},"end":{"line":250,"column":76,"offset":8539},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Copy All Rows from one DynamoDB Table to Another via CLI","position":{"start":{"line":252,"column":5,"offset":8545},"end":{"line":252,"column":61,"offset":8601},"indent":[]}}],"position":{"start":{"line":252,"column":1,"offset":8541},"end":{"line":252,"column":61,"offset":8601},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To copy all the rows from one DynamoDB table to another uses two primary commands with the AWS CLI: ","position":{"start":{"line":254,"column":1,"offset":8603},"end":{"line":254,"column":101,"offset":8703},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">aws dynamodb scan</code>","position":{"start":{"line":254,"column":101,"offset":8703},"end":{"line":254,"column":120,"offset":8722},"indent":[]}},{"type":"text","value":" to retrieve rows from the source table and ","position":{"start":{"line":254,"column":120,"offset":8722},"end":{"line":254,"column":164,"offset":8766},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">aws dynamodb batch-write-item</code>","position":{"start":{"line":254,"column":164,"offset":8766},"end":{"line":254,"column":195,"offset":8797},"indent":[]}},{"type":"text","value":" to write records to the destination.","position":{"start":{"line":254,"column":195,"offset":8797},"end":{"line":254,"column":232,"offset":8834},"indent":[]}}],"position":{"start":{"line":254,"column":1,"offset":8603},"end":{"line":254,"column":232,"offset":8834},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Limitations of ","position":{"start":{"line":256,"column":6,"offset":8841},"end":{"line":256,"column":21,"offset":8856},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">batch-write-item</code>","position":{"start":{"line":256,"column":21,"offset":8856},"end":{"line":256,"column":39,"offset":8874},"indent":[]}}],"position":{"start":{"line":256,"column":1,"offset":8836},"end":{"line":256,"column":39,"offset":8874},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Complicating matters is that ","position":{"start":{"line":258,"column":1,"offset":8876},"end":{"line":258,"column":30,"offset":8905},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">batch-write-item</code>","position":{"start":{"line":258,"column":30,"offset":8905},"end":{"line":258,"column":48,"offset":8923},"indent":[]}},{"type":"text","value":" can perform a maximum of 25 operations per call. Since the source table contains more than 25 records, we'll have to loop through.","position":{"start":{"line":258,"column":48,"offset":8923},"end":{"line":258,"column":179,"offset":9054},"indent":[]}}],"position":{"start":{"line":258,"column":1,"offset":8876},"end":{"line":258,"column":179,"offset":9054},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Paginating Reads, 25 at a Time","position":{"start":{"line":260,"column":6,"offset":9061},"end":{"line":260,"column":36,"offset":9091},"indent":[]}}],"position":{"start":{"line":260,"column":1,"offset":9056},"end":{"line":260,"column":36,"offset":9091},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Our migration script will retrieve 25 items at a time, write them to a file, then use ","position":{"start":{"line":262,"column":1,"offset":9093},"end":{"line":262,"column":87,"offset":9179},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">batch-write-item</code>","position":{"start":{"line":262,"column":87,"offset":9179},"end":{"line":262,"column":105,"offset":9197},"indent":[]}},{"type":"text","value":" to copy them to the destination. To ","position":{"start":{"line":262,"column":105,"offset":9197},"end":{"line":262,"column":142,"offset":9234},"indent":[]}},{"type":"link","title":null,"url":"https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-pagination.html","children":[{"type":"text","value":"paginate","position":{"start":{"line":262,"column":143,"offset":9235},"end":{"line":262,"column":151,"offset":9243},"indent":[]}}],"position":{"start":{"line":262,"column":142,"offset":9234},"end":{"line":262,"column":228,"offset":9320},"indent":[]}},{"type":"text","value":" through the data, both the ","position":{"start":{"line":262,"column":228,"offset":9320},"end":{"line":262,"column":256,"offset":9348},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">--page-size</code>","position":{"start":{"line":262,"column":256,"offset":9348},"end":{"line":262,"column":269,"offset":9361},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":262,"column":269,"offset":9361},"end":{"line":262,"column":274,"offset":9366},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">--max-items</code>","position":{"start":{"line":262,"column":274,"offset":9366},"end":{"line":262,"column":287,"offset":9379},"indent":[]}},{"type":"text","value":" commands must be set to 25:","position":{"start":{"line":262,"column":287,"offset":9379},"end":{"line":262,"column":315,"offset":9407},"indent":[]}}],"position":{"start":{"line":262,"column":1,"offset":9093},"end":{"line":262,"column":315,"offset":9407},"indent":[]}},{"type":"html","lang":"bash","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">aws dynamodb scan --profile hvh --region<span class=\"token operator\">=</span>us-east-1 <span class=\"token punctuation\">\\</span>\n  --table-name Jobs <span class=\"token punctuation\">\\</span>\n  --page-size <span class=\"token number\">25</span> <span class=\"token punctuation\">\\</span>\n  --max-items <span class=\"token number\">25</span></code></pre></div>","position":{"start":{"line":264,"column":1,"offset":9409},"end":{"line":269,"column":4,"offset":9531},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This call can be wrapped in a loop to page through the data and the variables needed parsed using ","position":{"start":{"line":271,"column":1,"offset":9533},"end":{"line":271,"column":99,"offset":9631},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">jq</code>","position":{"start":{"line":271,"column":99,"offset":9631},"end":{"line":271,"column":103,"offset":9635},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":271,"column":103,"offset":9635},"end":{"line":271,"column":104,"offset":9636},"indent":[]}}],"position":{"start":{"line":271,"column":1,"offset":9533},"end":{"line":271,"column":104,"offset":9636},"indent":[]}},{"type":"html","lang":"bash","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># migrate.sh</span>\n<span class=\"token builtin class-name\">set</span> -e\n<span class=\"token assign-left variable\">page</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token comment\"># do .. while equivalent</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"  Scanning page <span class=\"token variable\">$page</span>, up to 25 records in Jobs table\"</span>\n  <span class=\"token assign-left variable\">scan_result</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>aws dynamodb scan --profile hvh --region<span class=\"token operator\">=</span>us-east-1 <span class=\"token punctuation\">\\</span>\n    --table-name Jobs <span class=\"token punctuation\">\\</span>\n    --page-size <span class=\"token number\">25</span> <span class=\"token punctuation\">\\</span>\n    --max-items <span class=\"token number\">25</span> <span class=\"token punctuation\">\\</span>\n    $starting_token<span class=\"token variable\">)</span></span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$scan_result</span>\"</span>\n\n  <span class=\"token comment\"># Get pagination token:</span>\n  <span class=\"token assign-left variable\">next_token</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$scan_result</span>\"</span> <span class=\"token operator\">|</span> jq <span class=\"token string\">'.NextToken'</span> -r<span class=\"token variable\">)</span></span>\n  <span class=\"token comment\"># Set starting_token for next iteration (blank on first iteration)</span>\n  <span class=\"token assign-left variable\">starting_token</span><span class=\"token operator\">=</span><span class=\"token string\">\"--starting-token <span class=\"token variable\">$next_token</span>\"</span>\n\n  <span class=\"token comment\"># Break loop, if no more pages</span>\n  <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$next_token</span>\"</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"null\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token builtin class-name\">break</span>\n  <span class=\"token comment\"># Increment page count</span>\n  <span class=\"token variable\"><span class=\"token punctuation\">((</span>page<span class=\"token operator\">++</span><span class=\"token punctuation\">))</span></span>\n<span class=\"token keyword\">done</span></code></pre></div>","position":{"start":{"line":273,"column":1,"offset":9638},"end":{"line":296,"column":4,"offset":10274},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Transforming DynamoDB Scan Results to ","position":{"start":{"line":298,"column":6,"offset":10281},"end":{"line":298,"column":44,"offset":10319},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">PutRequest</code>","position":{"start":{"line":298,"column":44,"offset":10319},"end":{"line":298,"column":56,"offset":10331},"indent":[]}},{"type":"text","value":" Elements","position":{"start":{"line":298,"column":56,"offset":10331},"end":{"line":298,"column":65,"offset":10340},"indent":[]}}],"position":{"start":{"line":298,"column":1,"offset":10276},"end":{"line":298,"column":65,"offset":10340},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Each item returned from ","position":{"start":{"line":300,"column":1,"offset":10342},"end":{"line":300,"column":25,"offset":10366},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">aws dynamodb scan</code>","position":{"start":{"line":300,"column":25,"offset":10366},"end":{"line":300,"column":44,"offset":10385},"indent":[]}},{"type":"text","value":" must be transformed into a ","position":{"start":{"line":300,"column":44,"offset":10385},"end":{"line":300,"column":72,"offset":10413},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">PutRequest</code>","position":{"start":{"line":300,"column":72,"offset":10413},"end":{"line":300,"column":84,"offset":10425},"indent":[]}},{"type":"text","value":" element for compatibility with ","position":{"start":{"line":300,"column":84,"offset":10425},"end":{"line":300,"column":116,"offset":10457},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">batch-write-item</code>","position":{"start":{"line":300,"column":116,"offset":10457},"end":{"line":300,"column":134,"offset":10475},"indent":[]}},{"type":"text","value":". Each set of 25 scan results can be written to a temporary file then passed to ","position":{"start":{"line":300,"column":134,"offset":10475},"end":{"line":300,"column":214,"offset":10555},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">batch-write-item</code>","position":{"start":{"line":300,"column":214,"offset":10555},"end":{"line":300,"column":232,"offset":10573},"indent":[]}},{"type":"text","value":" to perform the insert. The entire, finished script now looks like this:","position":{"start":{"line":300,"column":232,"offset":10573},"end":{"line":300,"column":304,"offset":10645},"indent":[]}}],"position":{"start":{"line":300,"column":1,"offset":10342},"end":{"line":300,"column":304,"offset":10645},"indent":[]}},{"type":"html","lang":"bash","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># migrate.sh</span>\n<span class=\"token builtin class-name\">set</span> -e\n<span class=\"token assign-left variable\">page</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Copying all rows from Jobs to Jobs.v1, 25 rows at a time\"</span>\n<span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token comment\"># do .. while equivalent</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"  Scanning page <span class=\"token variable\">$page</span>, up to 25 records in Jobs table\"</span>\n    <span class=\"token assign-left variable\">scan_result</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>aws dynamodb scan --profile hvh --region<span class=\"token operator\">=</span>us-east-1 <span class=\"token punctuation\">\\</span>\n        --table-name Jobs <span class=\"token punctuation\">\\</span>\n        --page-size <span class=\"token number\">25</span> <span class=\"token punctuation\">\\</span>\n        --max-items <span class=\"token number\">25</span> <span class=\"token punctuation\">\\</span>\n        $starting_token<span class=\"token variable\">)</span></span>\n\n    <span class=\"token comment\"># Transform the scan result to a PutRequest:</span>\n    <span class=\"token assign-left variable\">put_req_json</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $scan_result <span class=\"token operator\">|</span> jq <span class=\"token string\">'[.Items | .[] | { PutRequest: { Item: . } }]'</span><span class=\"token variable\">)</span></span>\n    <span class=\"token comment\"># Get number of records:</span>\n    <span class=\"token assign-left variable\">rec_count</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $put_req_json <span class=\"token operator\">|</span> jq <span class=\"token string\">'length'</span><span class=\"token variable\">)</span></span>\n    <span class=\"token comment\"># Get pagination token:</span>\n    <span class=\"token assign-left variable\">next_token</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$scan_result</span>\"</span> <span class=\"token operator\">|</span> jq <span class=\"token string\">'.NextToken'</span> -r<span class=\"token variable\">)</span></span>\n    <span class=\"token comment\"># Set starting_token for next iteration (blank on first iteration)</span>\n    <span class=\"token assign-left variable\">starting_token</span><span class=\"token operator\">=</span><span class=\"token string\">\"--starting-token <span class=\"token variable\">$next_token</span>\"</span>\n\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"  Writing <span class=\"token variable\">$rec_count</span> records to temporary file\"</span>\n    <span class=\"token assign-left variable\">tmp_file_name</span><span class=\"token operator\">=</span><span class=\"token string\">\"Jobs.v1.<span class=\"token variable\">$page</span>.json\"</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'{\n        \"Jobs.v1\": '</span>\"<span class=\"token variable\">${put_req_json}</span><span class=\"token string\">\"'\n    }' > \"</span>Jobs.v1.<span class=\"token variable\">$page</span>.json<span class=\"token string\">\"\n\n    echo \"</span>  Writing <span class=\"token variable\">$rec_count</span> to Jobs.v1<span class=\"token string\">\"\n    aws dynamodb batch-write-item \\\n        --region=YOUR_REGION_HERE \\\n        --request-items file://\"</span><span class=\"token variable\">$tmp_file_name</span><span class=\"token string\">\" \\\n    | sed 's/^/  /' # Indent output\n\n    echo \"</span>  Deleting temporary <span class=\"token function\">file</span><span class=\"token string\">\"\n    rm \"</span><span class=\"token variable\">$tmp_file_name</span><span class=\"token string\">\"\n\n    # Break loop, if no more pages\n    [[ \"</span><span class=\"token variable\">$next_token</span><span class=\"token string\">\" != \"</span>null<span class=\"token string\">\" ]] || break\n    # Increment page count\n    <span class=\"token variable\"><span class=\"token punctuation\">((</span>page<span class=\"token operator\">++</span><span class=\"token punctuation\">))</span></span>\ndone\n\necho \"</span>Copied all rows from Jobs to Jobs.v1\"</code></pre></div>","position":{"start":{"line":302,"column":1,"offset":10647},"end":{"line":347,"column":4,"offset":12068},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Clean Up: Delete the Original Table (optional)","position":{"start":{"line":349,"column":4,"offset":12073},"end":{"line":349,"column":50,"offset":12119},"indent":[]}}],"position":{"start":{"line":349,"column":1,"offset":12070},"end":{"line":349,"column":50,"offset":12119},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The original ","position":{"start":{"line":351,"column":1,"offset":12121},"end":{"line":351,"column":14,"offset":12134},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Job</code>","position":{"start":{"line":351,"column":14,"offset":12134},"end":{"line":351,"column":19,"offset":12139},"indent":[]}},{"type":"text","value":" table is no longer in use, and may be deleted safely at this point:","position":{"start":{"line":351,"column":19,"offset":12139},"end":{"line":351,"column":87,"offset":12207},"indent":[]}}],"position":{"start":{"line":351,"column":1,"offset":12121},"end":{"line":351,"column":87,"offset":12207},"indent":[]}},{"type":"html","lang":"bash","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">aws dynamodb delete-table <span class=\"token punctuation\">\\</span>\n  --region<span class=\"token operator\">=</span>YOUR_REGION_HERE <span class=\"token punctuation\">\\</span>\n  --table-name Jobs</code></pre></div>","position":{"start":{"line":353,"column":1,"offset":12209},"end":{"line":357,"column":4,"offset":12298},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"That's it! The original ","position":{"start":{"line":359,"column":1,"offset":12300},"end":{"line":359,"column":25,"offset":12324},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Jobs</code>","position":{"start":{"line":359,"column":25,"offset":12324},"end":{"line":359,"column":31,"offset":12330},"indent":[]}},{"type":"text","value":" table has been migrated to ","position":{"start":{"line":359,"column":31,"offset":12330},"end":{"line":359,"column":59,"offset":12358},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Jobs.v1</code>","position":{"start":{"line":359,"column":59,"offset":12358},"end":{"line":359,"column":68,"offset":12367},"indent":[]}},{"type":"text","value":" with a Local Secondary Index applied and the original table removed.","position":{"start":{"line":359,"column":68,"offset":12367},"end":{"line":359,"column":137,"offset":12436},"indent":[]}}],"position":{"start":{"line":359,"column":1,"offset":12300},"end":{"line":359,"column":137,"offset":12436},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":360,"column":1,"offset":12437}}}}