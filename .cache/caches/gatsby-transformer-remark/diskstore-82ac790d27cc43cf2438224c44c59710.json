{"expireTime":9007200860997566000,"key":"transformer-remark-markdown-ast-37ed4577f57147a9f026ee974f9c293c-gatsby-remark-graphgatsby-remark-prismjsgatsby-remark-katex-","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Recipe: Create, Retrieve, Update, and Delete with Spring MVC","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":63,"offset":63},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":63,"offset":63},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This recipe is based on the ","position":{"start":{"line":4,"column":1,"offset":65},"end":{"line":4,"column":29,"offset":93},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/jamestharpe/pal-tracker","children":[{"type":"text","value":"PAL Tracker","position":{"start":{"line":4,"column":30,"offset":94},"end":{"line":4,"column":41,"offset":105},"indent":[]}}],"position":{"start":{"line":4,"column":29,"offset":93},"end":{"line":4,"column":86,"offset":150},"indent":[]}},{"type":"text","value":" example project.","position":{"start":{"line":4,"column":86,"offset":150},"end":{"line":4,"column":103,"offset":167},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":65},"end":{"line":4,"column":103,"offset":167},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"1. Create the Model","position":{"start":{"line":6,"column":4,"offset":172},"end":{"line":6,"column":23,"offset":191},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":169},"end":{"line":6,"column":23,"offset":191},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We'll stick with the ","position":{"start":{"line":8,"column":1,"offset":193},"end":{"line":8,"column":22,"offset":214},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/jamestharpe/pal-tracker","children":[{"type":"text","value":"PAL Tracker","position":{"start":{"line":8,"column":23,"offset":215},"end":{"line":8,"column":34,"offset":226},"indent":[]}}],"position":{"start":{"line":8,"column":22,"offset":214},"end":{"line":8,"column":79,"offset":271},"indent":[]}},{"type":"text","value":" example and create a simple ","position":{"start":{"line":8,"column":79,"offset":271},"end":{"line":8,"column":108,"offset":300},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">TimeEntry</code>","position":{"start":{"line":8,"column":108,"offset":300},"end":{"line":8,"column":119,"offset":311},"indent":[]}},{"type":"text","value":" class to be serialized for CRUD operations:","position":{"start":{"line":8,"column":119,"offset":311},"end":{"line":8,"column":163,"offset":355},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":193},"end":{"line":8,"column":163,"offset":355},"indent":[]}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>pivotal<span class=\"token punctuation\">.</span>pal<span class=\"token punctuation\">.</span>tracker</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LocalDate</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TimeEntry</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">long</span> id<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">long</span> projectId<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">long</span> userId<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> hours<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDate</span> date<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> projectId<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> userId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">LocalDate</span> date<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> hours<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>projectId <span class=\"token operator\">=</span> projectId<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>userId <span class=\"token operator\">=</span> userId<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>date <span class=\"token operator\">=</span> date<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hours <span class=\"token operator\">=</span> hours<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> projectId<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> userId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">LocalDate</span> date<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> hours<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>projectId <span class=\"token operator\">=</span> projectId<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>userId <span class=\"token operator\">=</span> userId<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>date <span class=\"token operator\">=</span> date<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hours <span class=\"token operator\">=</span> hours<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">long</span> <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> id<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">long</span> <span class=\"token function\">getProjectId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> projectId<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">long</span> <span class=\"token function\">getUserId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> userId<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">LocalDate</span> <span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> date<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> hours<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// Required for equality comparisons</span>\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">==</span> o<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> <span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">TimeEntry</span> timeEntry <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">)</span> o<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">!=</span> timeEntry<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>projectId <span class=\"token operator\">!=</span> timeEntry<span class=\"token punctuation\">.</span>projectId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>userId <span class=\"token operator\">!=</span> timeEntry<span class=\"token punctuation\">.</span>userId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hours <span class=\"token operator\">!=</span> timeEntry<span class=\"token punctuation\">.</span>hours<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> date <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>timeEntry<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> timeEntry<span class=\"token punctuation\">.</span>date <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// Required for equality comparisons</span>\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">>>></span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tresult <span class=\"token operator\">=</span> <span class=\"token number\">31</span> <span class=\"token operator\">*</span> result <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>projectId <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>projectId <span class=\"token operator\">>>></span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tresult <span class=\"token operator\">=</span> <span class=\"token number\">31</span> <span class=\"token operator\">*</span> result <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>userId <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>userId <span class=\"token operator\">>>></span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tresult <span class=\"token operator\">=</span> <span class=\"token number\">31</span> <span class=\"token operator\">*</span> result <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>date <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tresult <span class=\"token operator\">=</span> <span class=\"token number\">31</span> <span class=\"token operator\">*</span> result <span class=\"token operator\">+</span> hours<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"TimeEntry{\"</span> <span class=\"token operator\">+</span>\n\t\t\t<span class=\"token string\">\"id=\"</span> <span class=\"token operator\">+</span> id <span class=\"token operator\">+</span>\n\t\t\t<span class=\"token string\">\", projectId=\"</span> <span class=\"token operator\">+</span> projectId <span class=\"token operator\">+</span>\n\t\t\t<span class=\"token string\">\", userId=\"</span> <span class=\"token operator\">+</span> userId <span class=\"token operator\">+</span>\n\t\t\t<span class=\"token string\">\", date='\"</span> <span class=\"token operator\">+</span> date <span class=\"token operator\">+</span> <span class=\"token string\">'\\''</span> <span class=\"token operator\">+</span>\n\t\t\t<span class=\"token string\">\", hours=\"</span> <span class=\"token operator\">+</span> hours <span class=\"token operator\">+</span>\n\t\t\t<span class=\"token string\">'}'</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":10,"column":1,"offset":357},"end":{"line":101,"column":4,"offset":2300},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"2. Create an in-memory Repository","position":{"start":{"line":103,"column":4,"offset":2305},"end":{"line":103,"column":37,"offset":2338},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":2302},"end":{"line":103,"column":37,"offset":2338},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I'll cover using JDBC in my next article. For now, create an in-memory repository for time entries by implementing a ","position":{"start":{"line":105,"column":1,"offset":2340},"end":{"line":105,"column":118,"offset":2457},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">TimeEntryRepository</code>","position":{"start":{"line":105,"column":118,"offset":2457},"end":{"line":105,"column":139,"offset":2478},"indent":[]}},{"type":"text","value":" interface. Using an interface will make it easy to swap out later.","position":{"start":{"line":105,"column":139,"offset":2478},"end":{"line":105,"column":206,"offset":2545},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":2340},"end":{"line":105,"column":206,"offset":2545},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"First, create the ","position":{"start":{"line":107,"column":1,"offset":2547},"end":{"line":107,"column":19,"offset":2565},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">TimeEntryRepository</code>","position":{"start":{"line":107,"column":19,"offset":2565},"end":{"line":107,"column":40,"offset":2586},"indent":[]}},{"type":"text","value":" interface:","position":{"start":{"line":107,"column":40,"offset":2586},"end":{"line":107,"column":51,"offset":2597},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":2547},"end":{"line":107,"column":51,"offset":2597},"indent":[]}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>pivotal<span class=\"token punctuation\">.</span>pal<span class=\"token punctuation\">.</span>tracker</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">TimeEntryRepository</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">TimeEntry</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TimeEntry</span> timeEntry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">TimeEntry</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">TimeEntry</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeEntry</span> timeEntry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":109,"column":1,"offset":2599},"end":{"line":121,"column":4,"offset":2871},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Next, implement it by storing ","position":{"start":{"line":123,"column":1,"offset":2873},"end":{"line":123,"column":31,"offset":2903},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">TimeEntry</code>","position":{"start":{"line":123,"column":31,"offset":2903},"end":{"line":123,"column":42,"offset":2914},"indent":[]}},{"type":"text","value":" objects in a ","position":{"start":{"line":123,"column":42,"offset":2914},"end":{"line":123,"column":56,"offset":2928},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">HashMap</code>","position":{"start":{"line":123,"column":56,"offset":2928},"end":{"line":123,"column":65,"offset":2937},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":123,"column":65,"offset":2937},"end":{"line":123,"column":66,"offset":2938},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":2873},"end":{"line":123,"column":66,"offset":2938},"indent":[]}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>pivotal<span class=\"token punctuation\">.</span>pal<span class=\"token punctuation\">.</span>tracker</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">InMemoryTimeEntryRepository</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">TimeEntryRepository</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Store entries in a HashMap for onw</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">></span></span> timeEntries <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">long</span> currentId <span class=\"token operator\">=</span> <span class=\"token number\">1L</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">TimeEntry</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TimeEntry</span> timeEntry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">Long</span> id <span class=\"token operator\">=</span> currentId<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">TimeEntry</span> newTimeEntry <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">(</span>\n\t\t\tid<span class=\"token punctuation\">,</span>\n\t\t\ttimeEntry<span class=\"token punctuation\">.</span><span class=\"token function\">getProjectId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\ttimeEntry<span class=\"token punctuation\">.</span><span class=\"token function\">getUserId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\ttimeEntry<span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\ttimeEntry<span class=\"token punctuation\">.</span><span class=\"token function\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\ttimeEntries<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> newTimeEntry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> newTimeEntry<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">TimeEntry</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> timeEntries<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>timeEntries<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">TimeEntry</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeEntry</span> timeEntry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">TimeEntry</span> updatedEntry <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">(</span>\n\t\t\tid<span class=\"token punctuation\">,</span>\n\t\t\ttimeEntry<span class=\"token punctuation\">.</span><span class=\"token function\">getProjectId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\ttimeEntry<span class=\"token punctuation\">.</span><span class=\"token function\">getUserId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\ttimeEntry<span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\ttimeEntry<span class=\"token punctuation\">.</span><span class=\"token function\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\ttimeEntries<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> updatedEntry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> updatedEntry<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\ttimeEntries<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":125,"column":1,"offset":2940},"end":{"line":183,"column":4,"offset":4121},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Wire up the ","position":{"start":{"line":185,"column":4,"offset":4126},"end":{"line":185,"column":16,"offset":4138},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">TimeEntryRepository</code>","position":{"start":{"line":185,"column":16,"offset":4138},"end":{"line":185,"column":37,"offset":4159},"indent":[]}},{"type":"text","value":" Bean","position":{"start":{"line":185,"column":37,"offset":4159},"end":{"line":185,"column":42,"offset":4164},"indent":[]}}],"position":{"start":{"line":185,"column":1,"offset":4123},"end":{"line":185,"column":42,"offset":4164},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":187,"column":1,"offset":4166},"end":{"line":187,"column":5,"offset":4170},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">@Bean</code>","position":{"start":{"line":187,"column":5,"offset":4170},"end":{"line":187,"column":12,"offset":4177},"indent":[]}},{"type":"text","value":" annotation allows an application to provide an implementation of a class or interface at run-time. To supply a ","position":{"start":{"line":187,"column":12,"offset":4177},"end":{"line":187,"column":124,"offset":4289},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">TimeEntryRepository</code>","position":{"start":{"line":187,"column":124,"offset":4289},"end":{"line":187,"column":145,"offset":4310},"indent":[]}},{"type":"text","value":", update the ","position":{"start":{"line":187,"column":145,"offset":4310},"end":{"line":187,"column":158,"offset":4323},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">PalTrackerApplication</code>","position":{"start":{"line":187,"column":158,"offset":4323},"end":{"line":187,"column":181,"offset":4346},"indent":[]}},{"type":"text","value":" class:","position":{"start":{"line":187,"column":181,"offset":4346},"end":{"line":187,"column":188,"offset":4353},"indent":[]}}],"position":{"start":{"line":187,"column":1,"offset":4166},"end":{"line":187,"column":188,"offset":4353},"indent":[]}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">\t<span class=\"token annotation punctuation\">@Bean</span>\n\t<span class=\"token class-name\">TimeEntryRepository</span> <span class=\"token function\">timeEntryRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InMemoryTimeEntryRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":189,"column":1,"offset":4355},"end":{"line":194,"column":4,"offset":4465},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":196,"column":1,"offset":4467},"end":{"line":196,"column":11,"offset":4477},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">TimeEntry</code>","position":{"start":{"line":196,"column":11,"offset":4477},"end":{"line":196,"column":22,"offset":4488},"indent":[]}},{"type":"text","value":" class contains a ","position":{"start":{"line":196,"column":22,"offset":4488},"end":{"line":196,"column":40,"offset":4506},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">LocalDate</code>","position":{"start":{"line":196,"column":40,"offset":4506},"end":{"line":196,"column":51,"offset":4517},"indent":[]}},{"type":"text","value":", we also need to supply an ","position":{"start":{"line":196,"column":51,"offset":4517},"end":{"line":196,"column":79,"offset":4545},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">ObjectMapper</code>","position":{"start":{"line":196,"column":79,"offset":4545},"end":{"line":196,"column":93,"offset":4559},"indent":[]}},{"type":"text","value":" which can properly serialize dates into ","position":{"start":{"line":196,"column":93,"offset":4559},"end":{"line":196,"column":134,"offset":4600},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">LocalDate</code>","position":{"start":{"line":196,"column":134,"offset":4600},"end":{"line":196,"column":145,"offset":4611},"indent":[]}},{"type":"text","value":" objects, so add another ","position":{"start":{"line":196,"column":145,"offset":4611},"end":{"line":196,"column":170,"offset":4636},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">@Bean</code>","position":{"start":{"line":196,"column":170,"offset":4636},"end":{"line":196,"column":177,"offset":4643},"indent":[]}},{"type":"text","value":" to supply a ","position":{"start":{"line":196,"column":177,"offset":4643},"end":{"line":196,"column":190,"offset":4656},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Jackson2ObjectMapperBuilder</code>","position":{"start":{"line":196,"column":190,"offset":4656},"end":{"line":196,"column":219,"offset":4685},"indent":[]}},{"type":"text","value":" instance:","position":{"start":{"line":196,"column":219,"offset":4685},"end":{"line":196,"column":229,"offset":4695},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":4467},"end":{"line":196,"column":229,"offset":4695},"indent":[]}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">\t<span class=\"token annotation punctuation\">@Bean</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">ObjectMapper</span> <span class=\"token function\">jsonObjectMapper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token class-name\">Jackson2ObjectMapperBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">serializationInclusion</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JsonInclude</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Include</span><span class=\"token punctuation\">.</span>NON_NULL<span class=\"token punctuation\">)</span> <span class=\"token comment\">// Don’t include null values</span>\n\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">featuresToDisable</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SerializationFeature</span><span class=\"token punctuation\">.</span>WRITE_DATES_AS_TIMESTAMPS<span class=\"token punctuation\">)</span> <span class=\"token comment\">//ISODate</span>\n\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">modules</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">JavaTimeModule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":198,"column":1,"offset":4697},"end":{"line":207,"column":4,"offset":5017},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For this to build, the Jackson dependency must be added to the ","position":{"start":{"line":209,"column":1,"offset":5019},"end":{"line":209,"column":64,"offset":5082},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">dependencies</code>","position":{"start":{"line":209,"column":64,"offset":5082},"end":{"line":209,"column":78,"offset":5096},"indent":[]}},{"type":"text","value":" closure in ","position":{"start":{"line":209,"column":78,"offset":5096},"end":{"line":209,"column":90,"offset":5108},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"build.gradle","position":{"start":{"line":209,"column":92,"offset":5110},"end":{"line":209,"column":104,"offset":5122},"indent":[]}}],"position":{"start":{"line":209,"column":90,"offset":5108},"end":{"line":209,"column":106,"offset":5124},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":209,"column":106,"offset":5124},"end":{"line":209,"column":107,"offset":5125},"indent":[]}}],"position":{"start":{"line":209,"column":1,"offset":5019},"end":{"line":209,"column":107,"offset":5125},"indent":[]}},{"type":"html","lang":"groovy","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"groovy\"><pre class=\"language-groovy\"><code class=\"language-groovy\"><span class=\"token function\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string gstring\">\"com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.7\"</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":211,"column":1,"offset":5127},"end":{"line":213,"column":4,"offset":5212},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"3. Create a Controller for CRUD Operations","position":{"start":{"line":215,"column":4,"offset":5217},"end":{"line":215,"column":46,"offset":5259},"indent":[]}}],"position":{"start":{"line":215,"column":1,"offset":5214},"end":{"line":215,"column":46,"offset":5259},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The controller is a simple Java class with the appropriate annotations: ","position":{"start":{"line":217,"column":1,"offset":5261},"end":{"line":217,"column":73,"offset":5333},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">@PostMapping</code>","position":{"start":{"line":217,"column":73,"offset":5333},"end":{"line":217,"column":87,"offset":5347},"indent":[]}},{"type":"text","value":" for POST requests that will handle Create operation, ","position":{"start":{"line":217,"column":87,"offset":5347},"end":{"line":217,"column":141,"offset":5401},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">@GetMapping</code>","position":{"start":{"line":217,"column":141,"offset":5401},"end":{"line":217,"column":154,"offset":5414},"indent":[]}},{"type":"text","value":" for GET requests to handle Retrieve operations, ","position":{"start":{"line":217,"column":154,"offset":5414},"end":{"line":217,"column":203,"offset":5463},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">@PutMapping</code>","position":{"start":{"line":217,"column":203,"offset":5463},"end":{"line":217,"column":216,"offset":5476},"indent":[]}},{"type":"text","value":" for PUT requests that will handle Update operations, and ","position":{"start":{"line":217,"column":216,"offset":5476},"end":{"line":217,"column":274,"offset":5534},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">@DeleteMapping</code>","position":{"start":{"line":217,"column":274,"offset":5534},"end":{"line":217,"column":290,"offset":5550},"indent":[]}},{"type":"text","value":" for DELETE requests to handle Delete operations.","position":{"start":{"line":217,"column":290,"offset":5550},"end":{"line":217,"column":339,"offset":5599},"indent":[]}}],"position":{"start":{"line":217,"column":1,"offset":5261},"end":{"line":217,"column":339,"offset":5599},"indent":[]}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>pivotal<span class=\"token punctuation\">.</span>pal<span class=\"token punctuation\">.</span>tracker</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token comment\">// Sets the \"root\" for all TimeEntryController end-points</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/time-entries\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TimeEntryController</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">TimeEntryRepository</span> timeEntriesRepo<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">TimeEntryController</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TimeEntryRepository</span> timeEntriesRepo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timeEntriesRepo <span class=\"token operator\">=</span> timeEntriesRepo<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// Create</span>\n\t<span class=\"token annotation punctuation\">@PostMapping</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">TimeEntry</span> timeEntry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">TimeEntry</span> createdTimeEntry <span class=\"token operator\">=</span> timeEntriesRepo<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>timeEntry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\">// Returning a ResponseEntity allows us to control the resulting HTTP status code</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>createdTimeEntry<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>CREATED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// Retrieve a single record</span>\n\t<span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{id}\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">TimeEntry</span> timeEntry <span class=\"token operator\">=</span> timeEntriesRepo<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>timeEntry <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>timeEntry<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>NOT_FOUND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// Retrieve all records</span>\n\t<span class=\"token annotation punctuation\">@GetMapping</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>timeEntriesRepo<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// Update</span>\n\t<span class=\"token annotation punctuation\">@PutMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{id}\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">TimeEntry</span> timeEntry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">TimeEntry</span> updatedTimeEntry <span class=\"token operator\">=</span> timeEntriesRepo<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> timeEntry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>updatedTimeEntry <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>updatedTimeEntry<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>NOT_FOUND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// Delete</span>\n\t<span class=\"token annotation punctuation\">@DeleteMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{id}\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\ttimeEntriesRepo<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>NO_CONTENT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":219,"column":1,"offset":5601},"end":{"line":283,"column":4,"offset":7488},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Returning a ","position":{"start":{"line":285,"column":1,"offset":7490},"end":{"line":285,"column":13,"offset":7502},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">ResponseEntity</code>","position":{"start":{"line":285,"column":13,"offset":7502},"end":{"line":285,"column":29,"offset":7518},"indent":[]}},{"type":"text","value":" allows us to control the resulting HTTP status code.","position":{"start":{"line":285,"column":29,"offset":7518},"end":{"line":285,"column":82,"offset":7571},"indent":[]}}],"position":{"start":{"line":285,"column":1,"offset":7490},"end":{"line":285,"column":82,"offset":7571},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"4. Test and Deploy the Changes","position":{"start":{"line":287,"column":4,"offset":7576},"end":{"line":287,"column":34,"offset":7606},"indent":[]}}],"position":{"start":{"line":287,"column":1,"offset":7573},"end":{"line":287,"column":34,"offset":7606},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use PostMan, curl, or unit tests to test the end-points. Here's a sample set of end-to-end tests for the TimeEntryController:","position":{"start":{"line":289,"column":1,"offset":7608},"end":{"line":289,"column":126,"offset":7733},"indent":[]}}],"position":{"start":{"line":289,"column":1,"offset":7608},"end":{"line":289,"column":126,"offset":7733},"indent":[]}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">test<span class=\"token punctuation\">.</span>pivotal<span class=\"token punctuation\">.</span>pal<span class=\"token punctuation\">.</span>trackerapi</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>jayway<span class=\"token punctuation\">.</span>jsonpath<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DocumentContext</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>pivotal<span class=\"token punctuation\">.</span>pal<span class=\"token punctuation\">.</span>tracker<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PalTrackerApplication</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>pivotal<span class=\"token punctuation\">.</span>pal<span class=\"token punctuation\">.</span>tracker<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span>runner<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RunWith</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootTest</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TestRestTemplate</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpEntity</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>junit4<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringRunner</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LocalDate</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collection</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">static</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>jayway<span class=\"token punctuation\">.</span>jsonpath<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JsonPath</span><span class=\"token punctuation\">.</span>parse<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">static</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>assertj<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Assertions</span><span class=\"token punctuation\">.</span>assertThat<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">static</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootTest</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">WebEnvironment</span><span class=\"token punctuation\">.</span>RANDOM_PORT<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Wire up the Spring application</span>\n<span class=\"token annotation punctuation\">@RunWith</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringRunner</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@SpringBootTest</span><span class=\"token punctuation\">(</span>classes <span class=\"token operator\">=</span> <span class=\"token class-name\">PalTrackerApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> webEnvironment <span class=\"token operator\">=</span> RANDOM_PORT<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TimeEntryApiTest</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\">// Use to call the TimeEntryController end-points</span>\n\t<span class=\"token annotation punctuation\">@Autowired</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">TestRestTemplate</span> restTemplate<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Sample/test data</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> projectId <span class=\"token operator\">=</span> <span class=\"token number\">123L</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> userId <span class=\"token operator\">=</span> <span class=\"token number\">456L</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">TimeEntry</span> timeEntry <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">(</span>projectId<span class=\"token punctuation\">,</span> userId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">LocalDate</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2017-01-08\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token annotation punctuation\">@Test</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testCreate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> createResponse <span class=\"token operator\">=</span> restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">postForEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/time-entries\"</span><span class=\"token punctuation\">,</span> timeEntry<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>createResponse<span class=\"token punctuation\">.</span><span class=\"token function\">getStatusCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>CREATED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\">// com.jayway.jsonpath.JsonPath.parse makes it easy to read JSON</span>\n\t\t<span class=\"token class-name\">DocumentContext</span> createJson <span class=\"token operator\">=</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>createResponse<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>createJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.id\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isGreaterThan</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>createJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.projectId\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span>projectId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>createJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.userId\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>createJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.date\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2017-01-08\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>createJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.hours\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token annotation punctuation\">@Test</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">Long</span> id <span class=\"token operator\">=</span> <span class=\"token function\">createTimeEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> listResponse <span class=\"token operator\">=</span> restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">getForEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/time-entries\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>listResponse<span class=\"token punctuation\">.</span><span class=\"token function\">getStatusCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">DocumentContext</span> listJson <span class=\"token operator\">=</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>listResponse<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">Collection</span> timeEntries <span class=\"token operator\">=</span> listJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$[*]\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Collection</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>timeEntries<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">Long</span> readId <span class=\"token operator\">=</span> listJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$[0].id\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>readId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token annotation punctuation\">@Test</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testRead</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">Long</span> id <span class=\"token operator\">=</span> <span class=\"token function\">createTimeEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> readResponse <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">getForEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/time-entries/\"</span> <span class=\"token operator\">+</span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>readResponse<span class=\"token punctuation\">.</span><span class=\"token function\">getStatusCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">DocumentContext</span> readJson <span class=\"token operator\">=</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>readResponse<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>readJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.id\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>readJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.projectId\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span>projectId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>readJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.userId\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>readJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.date\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2017-01-08\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>readJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.hours\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token annotation punctuation\">@Test</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">Long</span> id <span class=\"token operator\">=</span> <span class=\"token function\">createTimeEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">long</span> projectId <span class=\"token operator\">=</span> <span class=\"token number\">2L</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">long</span> userId <span class=\"token operator\">=</span> <span class=\"token number\">3L</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">TimeEntry</span> updatedTimeEntry <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">(</span>projectId<span class=\"token punctuation\">,</span> userId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">LocalDate</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2017-01-09\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> updateResponse <span class=\"token operator\">=</span> restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">exchange</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/time-entries/\"</span> <span class=\"token operator\">+</span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span>PUT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>updatedTimeEntry<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>updateResponse<span class=\"token punctuation\">.</span><span class=\"token function\">getStatusCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">DocumentContext</span> updateJson <span class=\"token operator\">=</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>updateResponse<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>updateJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.id\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>updateJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.projectId\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span>projectId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>updateJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.userId\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>updateJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.date\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2017-01-09\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>updateJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.hours\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token annotation punctuation\">@Test</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testDelete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">Long</span> id <span class=\"token operator\">=</span> <span class=\"token function\">createTimeEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t\t<span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> deleteResponse <span class=\"token operator\">=</span> restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">exchange</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/time-entries/\"</span> <span class=\"token operator\">+</span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span>DELETE<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>deleteResponse<span class=\"token punctuation\">.</span><span class=\"token function\">getStatusCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>NO_CONTENT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> deletedReadResponse <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">getForEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/time-entries/\"</span> <span class=\"token operator\">+</span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>deletedReadResponse<span class=\"token punctuation\">.</span><span class=\"token function\">getStatusCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>NOT_FOUND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> <span class=\"token function\">createTimeEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">HttpEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">></span></span> entity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>timeEntry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">></span></span> response <span class=\"token operator\">=</span> restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">exchange</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/time-entries\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span>POST<span class=\"token punctuation\">,</span> entity<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">getStatusCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>CREATED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":291,"column":1,"offset":7735},"end":{"line":419,"column":4,"offset":12813},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now that basic CRUD operations are complete, they can be deployed to Cloud Foundry:","position":{"start":{"line":421,"column":1,"offset":12815},"end":{"line":421,"column":84,"offset":12898},"indent":[]}}],"position":{"start":{"line":421,"column":1,"offset":12815},"end":{"line":421,"column":84,"offset":12898},"indent":[]}},{"type":"html","lang":"bash","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">./gradlew build <span class=\"token comment\"># build the JAR</span>\ncf push -p build/libs/pal-tracker.jar <span class=\"token comment\"># deploy to CF</span></code></pre></div>","position":{"start":{"line":423,"column":1,"offset":12900},"end":{"line":426,"column":4,"offset":12996},"indent":[1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":427,"column":1,"offset":12997}}}}