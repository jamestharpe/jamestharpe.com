{"expireTime":9007200860997567000,"key":"transformer-remark-markdown-html-fa8c558540756b51f08e0fe94cab4869-gatsby-remark-graphgatsby-remark-prismjsgatsby-remark-katex-","val":"<h1>\"Forbidden path outside the build context\"</h1>\n<p>I was recently attempting to Dockerize a Node project, so I added a <code class=\"language-text\">docker</code> folder to the project and created a simple <code class=\"language-text\">Dockerfile</code> to get started:</p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token keyword\">FROM</span>  node<span class=\"token punctuation\">:</span>alpine\n<span class=\"token keyword\">WORKDIR</span> /app\n<span class=\"token keyword\">COPY</span> ../ ./\n<span class=\"token keyword\">RUN</span> npm install\n<span class=\"token keyword\">EXPOSE</span> 80\n<span class=\"token keyword\">ENTRYPOINT</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"npm\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"start\"</span> <span class=\"token punctuation\">]</span></code></pre></div>\n<p>However, when I tried to build the image, I got the following output:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker build -t node-app <span class=\"token builtin class-name\">.</span>\nSending build context to Docker daemon  <span class=\"token number\">53</span>.76kB\nStep <span class=\"token number\">1</span>/6 <span class=\"token builtin class-name\">:</span> FROM node:alpine\n ---<span class=\"token operator\">></span> 04a3ba95f191\nStep <span class=\"token number\">2</span>/6 <span class=\"token builtin class-name\">:</span> WORKDIR /app\n ---<span class=\"token operator\">></span> 85fff9a66b84\nRemoving intermediate container e2c838595c90\nStep <span class=\"token number\">3</span>/6 <span class=\"token builtin class-name\">:</span> COPY <span class=\"token punctuation\">..</span>/ ./\nCOPY failed: Forbidden path outside the build context: <span class=\"token punctuation\">..</span>/ <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Note the error: <strong>COPY failed: Forbidden path outside the build context: ../ ()</strong></p>\n<p>According to Docker's <a href=\"https://docs.docker.com/engine/reference/builder/#copy\"><code class=\"language-text\">COPY</code> documentation</a>:</p>\n<blockquote>\n<p><code class=\"language-text\">COPY</code> obeys the following rules:</p>\n<ul>\n<li>The <code class=\"language-text\">&lt;src&gt;</code> path must be inside the context of the build; you cannot <code class=\"language-text\">COPY ../something /something</code>, because the first step of a <code class=\"language-text\">docker build</code> is to send the context directory (and subdirectories) to the docker daemon.</li>\n</ul>\n</blockquote>\n<p>It turns out that <strong>you cannot include files outside Docker's build context</strong>. However, you <em>can</em> copy files from the Dockerfile's parent directory.</p>\n<h2>How to <code class=\"language-text\">COPY</code> Files from the Dockerfile Parent Directory</h2>\n<p>I tried several combinations of command line arguments to include the parent directory in the context, and finally landed on the solution: start from the parent directory, and pass the Dockerfile as an argument.</p>\n<p>To do this, first update the <code class=\"language-text\">COPY</code> command to use the current (<code class=\"language-text\">./</code>) directory:</p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token keyword\">FROM</span>  node<span class=\"token punctuation\">:</span>alpine\n<span class=\"token keyword\">WORKDIR</span> /app\n<span class=\"token keyword\">COPY</span> ./ ./\n<span class=\"token keyword\">RUN</span> npm install\n<span class=\"token keyword\">EXPOSE</span> 80\n<span class=\"token keyword\">ENTRYPOINT</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"npm\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"start\"</span> <span class=\"token punctuation\">]</span></code></pre></div>\n<p>Next, <code class=\"language-text\">cd ..</code> into the parent directory and run <code class=\"language-text\">docker build</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">~/Code/node-app/docker\n$ <span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>\n\n~/Code/node-app\n$ docker build -t node-app -f docker/Dockerfile <span class=\"token builtin class-name\">.</span>\nSending build context to Docker daemon  <span class=\"token number\">263</span>.7MB\n<span class=\"token punctuation\">..</span>.\nSuccessfully built d296bf765369\nSuccessfully tagged node-app:latest</code></pre></div>\n<p>Success!</p>"}