{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["query","IndexPage","data","location","title","description","allMarkdownRemark","totalCount","nodes","map","node","key","id","to","fields","slug","frontmatter","date","excerpt"],"mappings":"2FAAA,0GA6CaA,EAAQ,aAwBNC,UA/CiC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OAC/C,kBAAC,IAAD,CAAQA,SAAUA,GACjB,kBAAC,IAAD,CAAKC,MAAM,gBAAgBC,YAAY,iCACvC,wCACA,oRAMA,yDAA+BH,EAAKI,kBAAkBC,WAAtD,WACCL,EAAKI,kBAAkBE,MAAMC,KAAI,SAACC,GAAD,OACjC,yBAAKC,IAAKD,EAAKE,IACd,4BACC,kBAAC,OAAD,CAAMC,GAAIH,EAAKI,OAAOC,MAAOL,EAAKM,YAAYZ,MAA9C,KADD,IAC+D,IAC7DM,EAAKM,YAAYC,MAEnB,2BAAIP,EAAKQ","file":"component---src-pages-index-tsx-fe9e46b90d97996bee68.js","sourcesContent":["import { graphql, Link, PageProps } from \"gatsby\";\nimport React, { FC } from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\ntype IndexPageData = {\n\tallMarkdownRemark: {\n\t\ttotalCount: number;\n\t\tnodes: {\n\t\t\tid: number;\n\t\t\texcerpt: string;\n\t\t\tfields: {\n\t\t\t\tslug: string;\n\t\t\t};\n\t\t\tfrontmatter: {\n\t\t\t\tdate: string;\n\t\t\t\ttitle: string;\n\t\t\t};\n\t\t}[];\n\t};\n};\n\nconst IndexPage: FC<PageProps<IndexPageData>> = ({ data, location }) => (\n\t<Layout location={location}>\n\t\t<SEO title=\"Knowledge Log\" description=\"James Tharpe's Knowledge Log\" />\n\t\t<h1>Welcome!</h1>\n\t\t<p>\n\t\t\tThis is my knowledge log. When I learn something, I log it here so that I can\n\t\t\treference it later. I publish it freely online so it's easily accessible; if\n\t\t\tfolks other than myself find it useful, that's great! If it's not useful,\n\t\t\tthat's fine too.\n\t\t</p>\n\t\t<h2>Ten Most Recent Posts (of {data.allMarkdownRemark.totalCount} Total)</h2>\n\t\t{data.allMarkdownRemark.nodes.map((node) => (\n\t\t\t<div key={node.id}>\n\t\t\t\t<h3>\n\t\t\t\t\t<Link to={node.fields.slug}>{node.frontmatter.title} </Link>â€”{\" \"}\n\t\t\t\t\t{node.frontmatter.date}\n\t\t\t\t</h3>\n\t\t\t\t<p>{node.excerpt}</p>\n\t\t\t</div>\n\t\t))}\n\t</Layout>\n);\n\nexport const query = graphql`\n\tquery {\n\t\tallMarkdownRemark(\n\t\t\tlimit: 10\n\t\t\tsort: { fields: frontmatter___date, order: DESC }\n\t\t\tfilter: { frontmatter: { draft: { ne: false } } }\n\t\t) {\n\t\t\ttotalCount\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\texcerpt\n\t\t\t\tfields {\n\t\t\t\t\tslug\n\t\t\t\t}\n\t\t\t\tfrontmatter {\n\t\t\t\t\ttitle\n\t\t\t\t\tdescription\n\t\t\t\t\tdate(formatString: \"YYYY-MM-DD\")\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport default IndexPage;\n"],"sourceRoot":""}