{"componentChunkName":"component---src-templates-article-tsx","path":"/star-schemas/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"date\": \"2021-12-22T12:54:25.000Z\",\n  \"description\": \"Schemas to organize data by facts and dimensions for analysis\",\n  \"tags\": [\"dimensional-modeling\", \"olap\"],\n  \"title\": \"Star Schemas\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Star schemas\"), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"star schemas\"), \" is a specific implementation of a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../dimensional-modeling/\"\n  }, \"dimensional model\"), \" that organizes \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../relational-databases/\"\n  }, \"relational data\"), \" into fact and dimension tables, typically to store data in a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../data-warehouses/\"\n  }, \"data warehouse\"), \".  In a typical star schema, there is one central \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fact table\"), \" that contains all of the data related to a particular business process (such as sales, support request, defect reports, etc.), and several \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dimension tables\"), \" that contain descriptive information about the various dimensions that are used to analyze that process (such as time, location, and product). The fact table and dimension tables are joined together using foreign keys to create a complete picture of the data.\"), mdx(\"h2\", null, \"Example start schema for Sales\"), mdx(\"p\", null, \"Here's a simple example of a star schema, organized around sales:\"), mdx(\"div\", {\n    \"className\": \"mermaid\"\n  }, \"erDiagram\\n\\tsales_facts {\\n\\t\\tint DateId\\n\\t\\tint StoreId\\n\\t\\tint ProductId\\n\\t\\tint UnitCount\\n\\t\\tfloat Total\\n\\t}\\n\\n    date_dims ||--o{ sales_facts : DateId\\n\\tstore_dims ||--o{ sales_facts : StoreId\\n\\tproduct_dims ||--o{ sales_facts : ProductId\\n\\n\\tdate_dims {\\n\\t\\tint DateId\\n\\t\\tDatetime Date\\n\\t\\tint Day\\n\\t\\tstring DayOfWeek\\n\\t\\tint Month\\n\\t\\tstring MonthName\\n\\t\\tint Year\\n\\t}\\n\\n\\tstore_dims {\\n\\t\\tint StoreId\\n\\t\\tint StoreNumber\\n\\t\\tstring State\\n\\t}\\n\\n\\tproduct_dims {\\n\\t\\tint ProductId\\n\\t\\tstring Sku\\n\\t\\tstring Name\\n\\t\\tstring Category\\n\\t}\"), mdx(\"p\", null, \"This allows reports to be easily built. For example, to calculate TV sales by brand and year using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../sql/\"\n  }, \"SQL\"), \":\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"sql\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-sql\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"SELECT\"), \"\\n\\tdate_dims\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"Year\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n\\tproduct_dims\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"Brand\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n\\t\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"SUM\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"sales_facts\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"UnitCount\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"as\"), \" TotalUnitsSold\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"FROM\"), \" sales_facts\\n\\t\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"INNER\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"JOIN\"), \" date_dims \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"ON\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"sales_facts\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"DateId \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" date_dims\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"DateId\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \"\\n\\t\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"INNER\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"JOIN\"), \" store_dims \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"ON\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"sales_facts\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"StoreId \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" store_dims\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"StoreId\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \"\\n\\t\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"INNER\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"JOIN\"), \" product_dims \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"ON\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"sales_facts\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"ProductId \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" product_dims\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"ProductId\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"WHERE\"), \" \\n\\tproduct_dims\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"Category \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'TV'\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"GROUP\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"BY\"), \"\\n\\tproduct_dims\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"Brand\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n\\tdate_dims\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"Year\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"ORDER\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"BY\"), \"\\n\\tdate_dims\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"Year\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n\\tproduct_dims\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"Brand\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"-- Sample output -- \"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"/*\\nYear\\t| Brand \\t| TotalUnitsSold\\n---------------------------------------\\n2020\\t| Panasonic\\t| 123\\n2020\\t| Samsung\\t| 121\\n2020\\t| Sony\\t\\t| 234\\n2021\\t| Panasonic\\t| 271\\n2021\\t| Samsung\\t| 90\\n2021\\t| Sony\\t\\t| 115\\n*/\")))), mdx(\"h2\", null, \"Types of fact tables\"), mdx(\"h3\", null, \"Transaction Fact Tables\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Transaction fact tables\"), \" contain the lowest level of detail available and are the most common type of fact table. Each row in a transaction fact table captures a single event (e.g., a click on a web page) and link to all available dimensions for that event.\"), mdx(\"h3\", null, \"Periodic snapshot fact tables\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Periodic snapshot fact tables\"), \", or simply \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"snapshot fact tables\"), \", summarize measurements for a given time period (e.g. hourly, daily, etc.). Snapshot fact tables contain pre-aggregated measures that can be derived from transaction fact tables. Examples of periodic snapshot fact tables include hourly snapshots of clicks on a webpage, daily sales, and monthly account balances.\"), mdx(\"h3\", null, \"Accumulating snapshot fact tables\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Accumulating snapshot fact tables\"), \" capture key milestones in a given \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../business-operations/\"\n  }, \"business process\"), \" to simplify \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../data-analysis/\"\n  }, \"analysis\"), \" of time between each step of the process. For example, an accumulating snapshot fact table for the checkout process of an e-commerce website might store one row for every user and mark the key steps (when the cart was reviewed, when shipment information was provided, when payment was provided, etc.).\"), mdx(\"h2\", null, \"Star schema modeling resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.kimballgroup.com/data-warehouse-business-intelligence-resources/kimball-techniques/dimensional-modeling-techniques/\"\n  }, \"Kimball Dimensional Modeling Techniques\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://about.gitlab.com/handbook/business-technology/data-team/platform/edw/\"\n  }, \"GitLab Enterprise Dimensional Model\"))));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/star-schemas/"},"frontmatter":{"description":"Schemas to organize data by facts and dimensions for analysis","tags":["dimensional-modeling","olap"],"title":"Star Schemas"}}},"pageContext":{"slug":"/star-schemas/"}},"staticQueryHashes":["1957148337","3794076007","80858887"]}