{"componentChunkName":"component---src-templates-article-tsx","path":"/jwt/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2021-09-05T12:09:27.000Z\",\n  \"description\": \"A method to represent claims based security values, defined by RFC 7519\",\n  \"tags\": [\"json\", \"jws\", \"base64url\", \"jose\", \"ietf-standards\"],\n  \"title\": \"JSON Web Tokens (JWT)\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"JSON Web Tokens (JWT)\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"JSON Web Token (JWT)\"), \" is an open standard for representing passing claims securely between two parties as three concatenated base64url-encoded strings of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../json/\"\n  }, \"JSON\"), \" data, joined by dots (\", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \".\"), \"). JWTs are used for authentication, authorization, and information exchange.\"), mdx(\"p\", null, \"The first string is the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"../jose/\"\n  }, \"JOSE\"), \" Header\"), \", which describes the digital signature or \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../hmacs/\"\n  }, \"HMAC\"), \" applied to the second string. The second string is a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../jws/\"\n  }, \"JWS\"), \" payload, which contains JSON-encoded \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"claims\"), \" which are the information to be exchanged. Finally, the third string is a JWS signature that can be used to validate that the header and payload segments were not altered.\"), mdx(\"h2\", null, \"JWT Resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://datatracker.ietf.org/doc/html/rfc7519\"\n  }, \"JSON Web Token (JWT), RFC 7519\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://jwt.io/\"\n  }, \"JWT Decoder and Debugger\"))));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/jwt/"},"frontmatter":{"description":"A method to represent claims based security values, defined by RFC 7519","tags":["json","jws","base64url","jose","ietf-standards"],"title":"JSON Web Tokens (JWT)"}}},"pageContext":{"slug":"/jwt/"}},"staticQueryHashes":["1957148337","3794076007","80858887"]}