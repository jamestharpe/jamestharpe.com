{"componentChunkName":"component---src-templates-article-tsx","path":"/xstate/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"date\": \"2020-12-30T18:03:46.000Z\",\n  \"description\": \"A library to create state machines and state charts written in JavaScript\",\n  \"tags\": [\"js-libs\", \"state-machines\", \"statecharts\", \"actor-model\"],\n  \"title\": \"XState JavaScript Library\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"XState\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://xstate.js.org/\"\n  }, \"XState\"), \" is an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../open-source-software/\"\n  }, \"open-source\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../javascript/\"\n  }, \"JavaScript\"), \"/\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../typescript/\"\n  }, \"TypeScript\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../js-libs/\"\n  }, \"framework\"), \" by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://stately.ai/\"\n  }, \"Stately\"), \" for managing \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../state-machines/\"\n  }, \"state machines\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../statecharts/\"\n  }, \"statecharts\"), \" and includes the ability to treat them as \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../actor-model/\"\n  }, \"actors\"), \".\"), mdx(\"h2\", null, \"Using XState with \", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"../typescript/\"\n  }, \"TypeScript\")), mdx(\"p\", null, \"XState can enforce type safety through automatic type generation. For an overview, see \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Is XState good with TypeScript?\"), \" in the following video.\"), mdx(\"iframe\", {\n    width: \"560\",\n    height: \"315\",\n    src: \"https://www.youtube.com/embed/EIi6CV4Bc_Q\",\n    title: \"YouTube video player\",\n    frameBorder: \"0\",\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: true\n  }), mdx(\"h2\", null, \"XState Resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://xstate.js.org/docs/\"\n  }, \"XState Documentation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://xstate.js.org/viz/\"\n  }, \"XState Visualizer\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://statecharts.io/\"\n  }, \"XState Statecharts Tools\"))), mdx(\"h3\", null, \"XState Tutorials and Presentations\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://medium.com/angular-athens/working-with-state-machines-in-angular-2817441e26bf\"\n  }, \"Working with State Machines in Angular\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.youtube.com/watch?v=hiT4Q1ntvzg&list=WL&index=8\"\n  }, \"Formal Forms with State Machines by David Khourshid | React Next 2019\"))));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/xstate/"},"frontmatter":{"description":"A library to create state machines and state charts written in JavaScript","tags":["js-libs","state-machines","statecharts","actor-model"],"title":"XState JavaScript Library"}}},"pageContext":{"slug":"/xstate/"}},"staticQueryHashes":["3794076007","4068398115","80858887"]}