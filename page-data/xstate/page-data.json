{"componentChunkName":"component---src-templates-article-tsx","path":"/xstate/","result":{"data":{"markdownRemark":{"html":"<h1>XState</h1>\n<p><a href=\"https://xstate.js.org/\">XState</a> is a JavaScript framework for managing <a href=\"../state-machines/\">state machines</a> and <a href=\"../statecharts/\">statecharts</a>.</p>\n<h2>Example XState Project: Gas Pump</h2>\n<p>The <a href=\"https://codesandbox.io/s/fervent-noyce-yhnrc\"><strong>gas pump example project</strong></a> uses XState to implement a basic gas pump as if it were an integration of three separate applications, each using a statechart unknown to the other applications, but potentially dependent on them. This was important to prove conceptually for potential use in a multi-team enterprise setting.</p>\n<p>This was accomplished by using two separate registries:</p>\n<ol>\n<li>A Statechart Registry for each application's statecharts</li>\n<li>A UI Component Registry to map UI Components (plain HTML &#x26; JS - no framework) to available actions</li>\n</ol>\n<p>The Statechart Registry is used to assemble a \"Super Statechart\" to manage shared context and cross-statechart communication. This was easily achieved by virtue of each application's statechart being subjugated to the Super Statechart, which gave each app's statechart a shared context and enabled communication via the <a href=\"https://xstate.js.org/docs/guides/actions.html#send-action\"><code class=\"language-text\">send</code> action</a>.</p>\n<p>It was also necessary to merge the configuration options, which also provided a rudimentary opportunity to detect conflicts. For example, if two independent statecharts defined a <code class=\"language-text\">hasCredit</code> <a href=\"https://xstate.js.org/docs/guides/guards.html#guarded-transitions\">guard</a>, the conflict needed to be detected to fail the formation of the Super Statechart.</p>\n<h2>XState Resources</h2>\n<ul>\n<li><a href=\"https://xstate.js.org/docs/\">XState Documentation</a></li>\n<li><a href=\"https://xstate.js.org/viz/\">XState Visualizer</a></li>\n<li><a href=\"https://statecharts.io/\">XState Statecharts Tools</a></li>\n</ul>","fields":{"slug":"/xstate/"},"frontmatter":{"title":"XState (JavaScript Library)","tags":["javascript","state-machines","statecharts"]}}},"pageContext":{"slug":"/xstate/"}},"staticQueryHashes":["2270328656","3794076007","80858887"]}