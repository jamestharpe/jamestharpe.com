{"componentChunkName":"component---src-templates-article-tsx","path":"/arduino-tone/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"date\": \"2021-01-03T18:45:11.000Z\",\n  \"description\": \"Use the Arduino tone() function to play a song\",\n  \"tags\": [\"arduino-programming\"],\n  \"title\": \"Arduino tone() Function\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Arduino \", mdx(\"code\", {\n    parentName: \"h1\",\n    \"className\": \"language-text\"\n  }, \"tone()\"), \" function\"), mdx(\"p\", null, \"The \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.arduino.cc/reference/en/language/functions/advanced-io/tone/\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"Arduino \", mdx(\"code\", {\n    parentName: \"strong\",\n    \"className\": \"language-text\"\n  }, \"tone()\"), \" function\")), \" generates a square wave of the specified frequency on a pin, which can be used to emit a tone.\"), mdx(\"h2\", null, \"Use \", mdx(\"code\", {\n    parentName: \"h2\",\n    \"className\": \"language-text\"\n  }, \"tone()\"), \" to Play a Melody\"), mdx(\"p\", null, \"The following code was adapted from the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.arduino.cc/en/Tutorial/BuiltInExamples/toneMelody\"\n  }, \"Play a Melody using the tone() function\"), \" Built-In Example tutorial.\"), mdx(\"iframe\", {\n    src: \"https://create.arduino.cc/editor/jamestharpe/3ef73b15-330f-4a70-ab8f-b24697ef66d5/preview?F=pitches.h?embed\",\n    style: {\n      \"height\": \"510px\",\n      \"width\": \"100%\",\n      \"margin\": \"10px 0\"\n    },\n    frameBorder: \"0\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/arduino-tone/"},"frontmatter":{"description":"Use the Arduino tone() function to play a song","tags":["arduino-programming"],"title":"Arduino tone() Function"}}},"pageContext":{"slug":"/arduino-tone/"}},"staticQueryHashes":["1957148337","3794076007","80858887"]}