{"componentChunkName":"component---src-templates-article-tsx","path":"/cloud-foundry-spring-mvc-crud-operations/","result":{"data":{"markdownRemark":{"html":"<h1>Recipe: Create, Retrieve, Update, and Delete with Spring MVC</h1>\n<p>This recipe is based on the <a href=\"https://github.com/jamestharpe/pal-tracker\">PAL Tracker</a> example project.</p>\n<h2>1. Create the Model</h2>\n<p>We'll stick with the <a href=\"https://github.com/jamestharpe/pal-tracker\">PAL Tracker</a> example and create a simple <code class=\"language-text\">TimeEntry</code> class to be serialized for CRUD operations:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>pivotal<span class=\"token punctuation\">.</span>pal<span class=\"token punctuation\">.</span>tracker</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LocalDate</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TimeEntry</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">long</span> id<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">long</span> projectId<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">long</span> userId<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> hours<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDate</span> date<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> projectId<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> userId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">LocalDate</span> date<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> hours<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>projectId <span class=\"token operator\">=</span> projectId<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>userId <span class=\"token operator\">=</span> userId<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>date <span class=\"token operator\">=</span> date<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hours <span class=\"token operator\">=</span> hours<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> projectId<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> userId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">LocalDate</span> date<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> hours<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>projectId <span class=\"token operator\">=</span> projectId<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>userId <span class=\"token operator\">=</span> userId<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>date <span class=\"token operator\">=</span> date<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hours <span class=\"token operator\">=</span> hours<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">long</span> <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> id<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">long</span> <span class=\"token function\">getProjectId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> projectId<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">long</span> <span class=\"token function\">getUserId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> userId<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">LocalDate</span> <span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> date<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> hours<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// Required for equality comparisons</span>\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">==</span> o<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> <span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">TimeEntry</span> timeEntry <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">)</span> o<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">!=</span> timeEntry<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>projectId <span class=\"token operator\">!=</span> timeEntry<span class=\"token punctuation\">.</span>projectId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>userId <span class=\"token operator\">!=</span> timeEntry<span class=\"token punctuation\">.</span>userId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hours <span class=\"token operator\">!=</span> timeEntry<span class=\"token punctuation\">.</span>hours<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> date <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>timeEntry<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> timeEntry<span class=\"token punctuation\">.</span>date <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// Required for equality comparisons</span>\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">>>></span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tresult <span class=\"token operator\">=</span> <span class=\"token number\">31</span> <span class=\"token operator\">*</span> result <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>projectId <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>projectId <span class=\"token operator\">>>></span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tresult <span class=\"token operator\">=</span> <span class=\"token number\">31</span> <span class=\"token operator\">*</span> result <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>userId <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>userId <span class=\"token operator\">>>></span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tresult <span class=\"token operator\">=</span> <span class=\"token number\">31</span> <span class=\"token operator\">*</span> result <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>date <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tresult <span class=\"token operator\">=</span> <span class=\"token number\">31</span> <span class=\"token operator\">*</span> result <span class=\"token operator\">+</span> hours<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"TimeEntry{\"</span> <span class=\"token operator\">+</span>\n\t\t\t<span class=\"token string\">\"id=\"</span> <span class=\"token operator\">+</span> id <span class=\"token operator\">+</span>\n\t\t\t<span class=\"token string\">\", projectId=\"</span> <span class=\"token operator\">+</span> projectId <span class=\"token operator\">+</span>\n\t\t\t<span class=\"token string\">\", userId=\"</span> <span class=\"token operator\">+</span> userId <span class=\"token operator\">+</span>\n\t\t\t<span class=\"token string\">\", date='\"</span> <span class=\"token operator\">+</span> date <span class=\"token operator\">+</span> <span class=\"token string\">'\\''</span> <span class=\"token operator\">+</span>\n\t\t\t<span class=\"token string\">\", hours=\"</span> <span class=\"token operator\">+</span> hours <span class=\"token operator\">+</span>\n\t\t\t<span class=\"token string\">'}'</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>2. Create an in-memory Repository</h2>\n<p>I'll cover using JDBC in my next article. For now, create an in-memory repository for time entries by implementing a <code class=\"language-text\">TimeEntryRepository</code> interface. Using an interface will make it easy to swap out later.</p>\n<p>First, create the <code class=\"language-text\">TimeEntryRepository</code> interface:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>pivotal<span class=\"token punctuation\">.</span>pal<span class=\"token punctuation\">.</span>tracker</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">TimeEntryRepository</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">TimeEntry</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TimeEntry</span> timeEntry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">TimeEntry</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">TimeEntry</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeEntry</span> timeEntry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, implement it by storing <code class=\"language-text\">TimeEntry</code> objects in a <code class=\"language-text\">HashMap</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>pivotal<span class=\"token punctuation\">.</span>pal<span class=\"token punctuation\">.</span>tracker</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">InMemoryTimeEntryRepository</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">TimeEntryRepository</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Store entries in a HashMap for onw</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">></span></span> timeEntries <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">long</span> currentId <span class=\"token operator\">=</span> <span class=\"token number\">1L</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">TimeEntry</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TimeEntry</span> timeEntry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">Long</span> id <span class=\"token operator\">=</span> currentId<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">TimeEntry</span> newTimeEntry <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">(</span>\n\t\t\tid<span class=\"token punctuation\">,</span>\n\t\t\ttimeEntry<span class=\"token punctuation\">.</span><span class=\"token function\">getProjectId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\ttimeEntry<span class=\"token punctuation\">.</span><span class=\"token function\">getUserId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\ttimeEntry<span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\ttimeEntry<span class=\"token punctuation\">.</span><span class=\"token function\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\ttimeEntries<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> newTimeEntry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> newTimeEntry<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">TimeEntry</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> timeEntries<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>timeEntries<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">TimeEntry</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeEntry</span> timeEntry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">TimeEntry</span> updatedEntry <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">(</span>\n\t\t\tid<span class=\"token punctuation\">,</span>\n\t\t\ttimeEntry<span class=\"token punctuation\">.</span><span class=\"token function\">getProjectId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\ttimeEntry<span class=\"token punctuation\">.</span><span class=\"token function\">getUserId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\ttimeEntry<span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\ttimeEntry<span class=\"token punctuation\">.</span><span class=\"token function\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\ttimeEntries<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> updatedEntry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> updatedEntry<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\ttimeEntries<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Wire up the <code class=\"language-text\">TimeEntryRepository</code> Bean</h2>\n<p>The <code class=\"language-text\">@Bean</code> annotation allows an application to provide an implementation of a class or interface at run-time. To supply a <code class=\"language-text\">TimeEntryRepository</code>, update the <code class=\"language-text\">PalTrackerApplication</code> class:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">\t<span class=\"token annotation punctuation\">@Bean</span>\n\t<span class=\"token class-name\">TimeEntryRepository</span> <span class=\"token function\">timeEntryRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InMemoryTimeEntryRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Since the <code class=\"language-text\">TimeEntry</code> class contains a <code class=\"language-text\">LocalDate</code>, we also need to supply an <code class=\"language-text\">ObjectMapper</code> which can properly serialize dates into <code class=\"language-text\">LocalDate</code> objects, so add another <code class=\"language-text\">@Bean</code> to supply a <code class=\"language-text\">Jackson2ObjectMapperBuilder</code> instance:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">\t<span class=\"token annotation punctuation\">@Bean</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">ObjectMapper</span> <span class=\"token function\">jsonObjectMapper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token class-name\">Jackson2ObjectMapperBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">serializationInclusion</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JsonInclude</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Include</span><span class=\"token punctuation\">.</span>NON_NULL<span class=\"token punctuation\">)</span> <span class=\"token comment\">// Don’t include null values</span>\n\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">featuresToDisable</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SerializationFeature</span><span class=\"token punctuation\">.</span>WRITE_DATES_AS_TIMESTAMPS<span class=\"token punctuation\">)</span> <span class=\"token comment\">//ISODate</span>\n\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">modules</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">JavaTimeModule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span></code></pre></div>\n<p>For this to build, the Jackson dependency must be added to the <code class=\"language-text\">dependencies</code> closure in <strong>build.gradle</strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"groovy\"><pre class=\"language-groovy\"><code class=\"language-groovy\"><span class=\"token function\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string gstring\">\"com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.7\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>3. Create a Controller for CRUD Operations</h2>\n<p>The controller is a simple Java class with the appropriate annotations: <code class=\"language-text\">@PostMapping</code> for POST requests that will handle Create operation, <code class=\"language-text\">@GetMapping</code> for GET requests to handle Retrieve operations, <code class=\"language-text\">@PutMapping</code> for PUT requests that will handle Update operations, and <code class=\"language-text\">@DeleteMapping</code> for DELETE requests to handle Delete operations.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>pivotal<span class=\"token punctuation\">.</span>pal<span class=\"token punctuation\">.</span>tracker</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token comment\">// Sets the \"root\" for all TimeEntryController end-points</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/time-entries\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TimeEntryController</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">TimeEntryRepository</span> timeEntriesRepo<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">TimeEntryController</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TimeEntryRepository</span> timeEntriesRepo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timeEntriesRepo <span class=\"token operator\">=</span> timeEntriesRepo<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// Create</span>\n\t<span class=\"token annotation punctuation\">@PostMapping</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">TimeEntry</span> timeEntry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">TimeEntry</span> createdTimeEntry <span class=\"token operator\">=</span> timeEntriesRepo<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>timeEntry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\">// Returning a ResponseEntity allows us to control the resulting HTTP status code</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>createdTimeEntry<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>CREATED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// Retrieve a single record</span>\n\t<span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{id}\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">TimeEntry</span> timeEntry <span class=\"token operator\">=</span> timeEntriesRepo<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>timeEntry <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>timeEntry<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>NOT_FOUND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// Retrieve all records</span>\n\t<span class=\"token annotation punctuation\">@GetMapping</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>timeEntriesRepo<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// Update</span>\n\t<span class=\"token annotation punctuation\">@PutMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{id}\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">TimeEntry</span> timeEntry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">TimeEntry</span> updatedTimeEntry <span class=\"token operator\">=</span> timeEntriesRepo<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> timeEntry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>updatedTimeEntry <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>updatedTimeEntry<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>NOT_FOUND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// Delete</span>\n\t<span class=\"token annotation punctuation\">@DeleteMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{id}\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\ttimeEntriesRepo<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>NO_CONTENT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Returning a <code class=\"language-text\">ResponseEntity</code> allows us to control the resulting HTTP status code.</p>\n<h2>4. Test and Deploy the Changes</h2>\n<p>Use PostMan, curl, or unit tests to test the end-points. Here's a sample set of end-to-end tests for the TimeEntryController:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">test<span class=\"token punctuation\">.</span>pivotal<span class=\"token punctuation\">.</span>pal<span class=\"token punctuation\">.</span>trackerapi</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>jayway<span class=\"token punctuation\">.</span>jsonpath<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DocumentContext</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>pivotal<span class=\"token punctuation\">.</span>pal<span class=\"token punctuation\">.</span>tracker<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PalTrackerApplication</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>pivotal<span class=\"token punctuation\">.</span>pal<span class=\"token punctuation\">.</span>tracker<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span>runner<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RunWith</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootTest</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TestRestTemplate</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpEntity</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>junit4<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringRunner</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LocalDate</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collection</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">static</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>jayway<span class=\"token punctuation\">.</span>jsonpath<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JsonPath</span><span class=\"token punctuation\">.</span>parse<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">static</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>assertj<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Assertions</span><span class=\"token punctuation\">.</span>assertThat<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">static</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootTest</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">WebEnvironment</span><span class=\"token punctuation\">.</span>RANDOM_PORT<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Wire up the Spring application</span>\n<span class=\"token annotation punctuation\">@RunWith</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringRunner</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@SpringBootTest</span><span class=\"token punctuation\">(</span>classes <span class=\"token operator\">=</span> <span class=\"token class-name\">PalTrackerApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> webEnvironment <span class=\"token operator\">=</span> RANDOM_PORT<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TimeEntryApiTest</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\">// Use to call the TimeEntryController end-points</span>\n\t<span class=\"token annotation punctuation\">@Autowired</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">TestRestTemplate</span> restTemplate<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Sample/test data</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> projectId <span class=\"token operator\">=</span> <span class=\"token number\">123L</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> userId <span class=\"token operator\">=</span> <span class=\"token number\">456L</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">TimeEntry</span> timeEntry <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">(</span>projectId<span class=\"token punctuation\">,</span> userId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">LocalDate</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2017-01-08\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token annotation punctuation\">@Test</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testCreate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> createResponse <span class=\"token operator\">=</span> restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">postForEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/time-entries\"</span><span class=\"token punctuation\">,</span> timeEntry<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>createResponse<span class=\"token punctuation\">.</span><span class=\"token function\">getStatusCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>CREATED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\">// com.jayway.jsonpath.JsonPath.parse makes it easy to read JSON</span>\n\t\t<span class=\"token class-name\">DocumentContext</span> createJson <span class=\"token operator\">=</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>createResponse<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>createJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.id\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isGreaterThan</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>createJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.projectId\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span>projectId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>createJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.userId\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>createJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.date\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2017-01-08\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>createJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.hours\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token annotation punctuation\">@Test</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">Long</span> id <span class=\"token operator\">=</span> <span class=\"token function\">createTimeEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> listResponse <span class=\"token operator\">=</span> restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">getForEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/time-entries\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>listResponse<span class=\"token punctuation\">.</span><span class=\"token function\">getStatusCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">DocumentContext</span> listJson <span class=\"token operator\">=</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>listResponse<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">Collection</span> timeEntries <span class=\"token operator\">=</span> listJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$[*]\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Collection</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>timeEntries<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">Long</span> readId <span class=\"token operator\">=</span> listJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$[0].id\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>readId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token annotation punctuation\">@Test</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testRead</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">Long</span> id <span class=\"token operator\">=</span> <span class=\"token function\">createTimeEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> readResponse <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">getForEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/time-entries/\"</span> <span class=\"token operator\">+</span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>readResponse<span class=\"token punctuation\">.</span><span class=\"token function\">getStatusCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">DocumentContext</span> readJson <span class=\"token operator\">=</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>readResponse<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>readJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.id\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>readJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.projectId\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span>projectId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>readJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.userId\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>readJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.date\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2017-01-08\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>readJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.hours\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token annotation punctuation\">@Test</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">Long</span> id <span class=\"token operator\">=</span> <span class=\"token function\">createTimeEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">long</span> projectId <span class=\"token operator\">=</span> <span class=\"token number\">2L</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">long</span> userId <span class=\"token operator\">=</span> <span class=\"token number\">3L</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">TimeEntry</span> updatedTimeEntry <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">(</span>projectId<span class=\"token punctuation\">,</span> userId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">LocalDate</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2017-01-09\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> updateResponse <span class=\"token operator\">=</span> restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">exchange</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/time-entries/\"</span> <span class=\"token operator\">+</span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span>PUT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>updatedTimeEntry<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>updateResponse<span class=\"token punctuation\">.</span><span class=\"token function\">getStatusCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">DocumentContext</span> updateJson <span class=\"token operator\">=</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>updateResponse<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>updateJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.id\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>updateJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.projectId\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span>projectId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>updateJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.userId\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>updateJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.date\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2017-01-09\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>updateJson<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.hours\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token annotation punctuation\">@Test</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testDelete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">Long</span> id <span class=\"token operator\">=</span> <span class=\"token function\">createTimeEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t\t<span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> deleteResponse <span class=\"token operator\">=</span> restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">exchange</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/time-entries/\"</span> <span class=\"token operator\">+</span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span>DELETE<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>deleteResponse<span class=\"token punctuation\">.</span><span class=\"token function\">getStatusCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>NO_CONTENT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> deletedReadResponse <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">getForEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/time-entries/\"</span> <span class=\"token operator\">+</span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>deletedReadResponse<span class=\"token punctuation\">.</span><span class=\"token function\">getStatusCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>NOT_FOUND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> <span class=\"token function\">createTimeEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">HttpEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">></span></span> entity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>timeEntry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">></span></span> response <span class=\"token operator\">=</span> restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">exchange</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/time-entries\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span>POST<span class=\"token punctuation\">,</span> entity<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeEntry</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">getStatusCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>CREATED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now that basic CRUD operations are complete, they can be deployed to Cloud Foundry:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">./gradlew build <span class=\"token comment\"># build the JAR</span>\ncf push -p build/libs/pal-tracker.jar <span class=\"token comment\"># deploy to CF</span></code></pre></div>","fields":{"slug":"/cloud-foundry-spring-mvc-crud-operations/"},"frontmatter":{"title":"Spring MVC CRUD Operations","tags":["java","intellij","gradle","cloud-foundry","pal-tracker","spring-boot","microservices"]}},"allMarkdownRemark":{"nodes":[{"excerpt":"Notes on 3D Printing Process to 3D Print a Design Create or download a 3D design, typically as an STL file. \"Slice\" the design with a slicer…","frontmatter":{"title":"Learn 3D printing","tags":[],"description":"How to 3D print"},"fields":{"slug":"/3d-printing/"}},{"excerpt":"Automate Your Development Environment Setup Starting from a fresh OS installation, manually installing and configuring a full development…","frontmatter":{"title":"Automatically Build a Developer Environment on Windows","tags":["powershell","chocolatey"],"description":"A step-by-step guide to automate tool and framework installation for developers that use Windows"},"fields":{"slug":"/automated-developer-environment/"}},{"excerpt":"","frontmatter":{"title":"AWS Command Line Interface (CLI)","tags":["aws"],"description":"The AWS CLI is a tool to manage AWS services via command line"},"fields":{"slug":"/aws-cli/"}},{"excerpt":"","frontmatter":{"title":"AWS CloudFormation","tags":["aws"],"description":"AWS CloudFormation is a service to model AWS infrastructure as code"},"fields":{"slug":"/aws-cloudformation/"}},{"excerpt":"DynamoDB Local Secondary Index A local secondary index essentially gives DynamoDB tables an additional sort key by which to query data. I…","frontmatter":{"title":"DynamoDB & CloudFormation: Add a Local Secondary Index to Existing Table","tags":["aws-cloudformation","aws-dynamodb","aws-cli","jq","database-as-code","infrastructure-as-code"],"description":null},"fields":{"slug":"/aws-dynamodb-local-secondary-index-existing-table-cloudformation/"}},{"excerpt":"","frontmatter":{"title":"AWS CloudFormation","tags":["aws"],"description":"AWS DynamoDB is a 'NoSQL' key-value and document database"},"fields":{"slug":"/aws-dynamodb/"}},{"excerpt":"","frontmatter":{"title":"Amazon Web Services (AWS)","tags":[],"description":null},"fields":{"slug":"/aws/"}},{"excerpt":"Bash Bash is a Unix shell Bash Command Shortcuts Command Use Example  Show list of previous commands  will show last five commands executed…","frontmatter":{"title":"Bourne Again Shell (Bash)","tags":["shell","terminal"],"description":"A Unix shell"},"fields":{"slug":"/bash/"}},{"excerpt":"AWS Identity and Access Management (IAM) IAM is a global service (no need to set a region) that completely manages all AWS Security \"in the…","frontmatter":{"title":"AWS Identity and Access Management (IAM)","tags":["aws"],"description":"AWS IAM: Identity Access Management for the AWS Cloud"},"fields":{"slug":"/aws-iam/"}},{"excerpt":"The Bullet Journal Method Official Website YouTube Channel Quotes from The Bullet Journal Method \"Perfection is an unnatural and damaging…","frontmatter":{"title":"The Bullet Journal Method by Ryder Carroll","tags":["ryder-carroll","bullet-journaling","book"],"description":"A book by Ryder Carroll, the Bullet Journal Method describes an approach to life management through journals"},"fields":{"slug":"/book-bullet-journal-method/"}},{"excerpt":"The Goal: A Business Graphic Novel The Goal: A Business Graphic Novel is an adaptation of the book The Goal: A Process of Ongoing…","frontmatter":{"title":"The Goal: A Business Graphic Novel by Eliyahu Goldratt","tags":["book"],"description":"A business graphic novel to introduce the theory of constraints"},"fields":{"slug":"/book-goal-business-graphic-novel/"}},{"excerpt":"Atomic Habits by James Clear Atomic Habits argues that small, daily improvements culminate in huge long-term payoffs. Good financial…","frontmatter":{"title":"Atomic Habits by James Clear","tags":[],"description":"A guide to making small, habitual changes to improve your life"},"fields":{"slug":"/book-atomic-habits/"}},{"excerpt":"","frontmatter":{"title":"Book Notes and Reviews","tags":[],"description":"Notes, quotes, and reviews of books I've read"},"fields":{"slug":"/book/"}},{"excerpt":"Bullet Journaling Tips Start new custom collections with a mission statement to stay focused on what's important. Five whys is a great…","frontmatter":{"title":"Bullet Journaling Tips & Advice","tags":["bullet-journaling","five-whys"],"description":"Simple tips and advice from lessons learned through years of bullet journaling"},"fields":{"slug":"/bullet-journaling-tips/"}},{"excerpt":"Bullet Journaling Bullet Journaling is a modular set of practices for personal organization. These practices organize schedules, reminders…","frontmatter":{"title":"Bullet Journaling","tags":[],"description":"A method of to organize schedules, reminders, task lists, and brainstorming with into a single notebook"},"fields":{"slug":"/bullet-journaling/"}},{"excerpt":"Carl Sagan Official website Quotes \"Every question is a cry to understand the world\" --Carl Sagan, The Demon-Haunted World: Science as a…","frontmatter":{"title":"Carl Sagan","tags":[],"description":null},"fields":{"slug":"/carl-sagan/"}},{"excerpt":"Ender 3 Pro 3D Printer Notes The Ender 3 Pro 3D Printer is a great first 3D printer. Filament size: 1.75mm","frontmatter":{"title":"Ender 3 Pro 3D Printer","tags":["3d-printing"],"description":"A small, reliable 3D printer appropriate for home use"},"fields":{"slug":"/3d-printer-ender-3-pro/"}},{"excerpt":"Chocolatey Chocolatey is a package manager for Windows, similar to Homebrew for Mac.","frontmatter":{"title":"Chocolatey (Windows Package Manager)","tags":["package-managers"],"description":"Knowledge about Chocolatey: a package manager for managing software on Windows"},"fields":{"slug":"/chocolatey/"}},{"excerpt":"Command Line Interfaces Command-line Interfaces (CLIs) are applications that to process text-based commands, typically entered into a…","frontmatter":{"title":"Command-line Interface (CLI)","tags":["terminal","shell"],"description":"Programs that take commands through terminals and shells"},"fields":{"slug":"/cli/"}},{"excerpt":"Recipe: Database as Code with Flyway & MySQL on Cloud Foundry This recipe is illustrated in the PAL Tracker example project. 1. Provision…","frontmatter":{"title":"Database as Code: Flyway & MySQL on Cloud Foundry","tags":["cloud-foundry","database-as-code","flyway","mysql","pal-tracker"],"description":null},"fields":{"slug":"/cloud-foundry-database-as-code-flyway/"}},{"excerpt":"Recipe: PCF Cloud Native App This recipe is based on the PAL Tracker example project. 1. Create the PCF Developer Environment Developing…","frontmatter":{"title":"Pivotal Cloud Foundry (PCF) with Spring Boot Basics","tags":["java","spring-boot","microservices","cloud-foundry","pal-tracker","intellij"],"description":null},"fields":{"slug":"/cloud-foundry-spring-boot/"}},{"excerpt":"Recipe: Create, Retrieve, Update, and Delete with Spring MVC This recipe is based on the PAL Tracker example project. 1. Create the Model We…","frontmatter":{"title":"Spring MVC CRUD Operations","tags":["java","intellij","gradle","cloud-foundry","pal-tracker","spring-boot","microservices"],"description":null},"fields":{"slug":"/cloud-foundry-spring-mvc-crud-operations/"}},{"excerpt":"","frontmatter":{"title":"Cloud Foundry","tags":[],"description":"Could Foundry: An open-source cloud platform as a service (PaaS)"},"fields":{"slug":"/cloud-foundry/"}},{"excerpt":"Computer Languages Computer Languages are languages used by humans to tell computers what to do. There are multiple types of computer…","frontmatter":{"title":"Computer Languages","tags":[],"description":"Computer Languages: How humans tell computers what to do"},"fields":{"slug":"/computer-language/"}},{"excerpt":"","frontmatter":{"title":"Database as Code","tags":[],"description":"A technique to version-control and automate the deployment of database schemas"},"fields":{"slug":"/database-as-code/"}},{"excerpt":"","frontmatter":{"title":"Databases","tags":[],"description":"Databases: Organized collections of structured data"},"fields":{"slug":"/database/"}},{"excerpt":"Useful Docker Shell Command and \"Shortcuts\" Start/Stop All Docker Containers This example starts then stops all containers: Remove All…","frontmatter":{"title":"Useful Docker Commands","tags":["docker","shell"],"description":null},"fields":{"slug":"/docker-commands/"}},{"excerpt":"Error response from daemon: invalid bind mount spec The call to  using Git Bash on Windows was recently frustrating me when I tried to…","frontmatter":{"title":"Docker: Fix Invalid Bind Mount Spec in Git Bash","tags":["docker","git-bash"],"description":null},"fields":{"slug":"/docker-fix-invalid-bind-mount-spec-gitbash/"}},{"excerpt":"\"Forbidden path outside the build context\" I was recently attempting to Dockerize a Node project, so I added a  folder to the project and…","frontmatter":{"title":"Include Files Outside Docker Build Context","tags":["docker"],"description":null},"fields":{"slug":"/docker-include-files-outside-build-context/"}},{"excerpt":"","frontmatter":{"title":"Docker","tags":[],"description":"A set of tools to build and run containers"},"fields":{"slug":"/docker/"}},{"excerpt":"Electricity Electricity the form of energy (the ability to do work) that results from charged particles (electrons, protons). Measures of…","frontmatter":{"title":"Electricity","tags":["physics"],"description":"A formula to define the relationship between power, voltage, and current (P=IV)"},"fields":{"slug":"/electricity/"}},{"excerpt":"How to do a Dumbbell Wood Chop","frontmatter":{"title":"Dumbbell Wood Chop","tags":["exercise"],"description":"A core and full-body dumbbell exercise"},"fields":{"slug":"/exercise-dumbbell-wood-chop/"}},{"excerpt":"","frontmatter":{"title":"Frankensteins (Exercise)","tags":["exercise"],"description":"An exercise for hamstring flexibility and lower abdominal muscles"},"fields":{"slug":"/exercise-frankenstein/"}},{"excerpt":"","frontmatter":{"title":"Hip Walks (Exercise)","tags":["exercise"],"description":"An exercise for balance and hip flexibility"},"fields":{"slug":"/exercise-hip-walk/"}},{"excerpt":"How to do a Rotational Overhead Press","frontmatter":{"title":"Rotational Overhead Press","tags":["exercise"],"description":"A core and shoulders dumbbell exercise"},"fields":{"slug":"/exercise-rotational-overhead-press/"}},{"excerpt":"Easy Full Body Exercise Routine   Time 20 to 30 minutes Difficulty Easy Equipment Dumbbells This routine can be an easy stand-alone routine…","frontmatter":{"title":"Easy Full Body Exercise Routine","tags":["exercise","exercise-routine","exercise-dumbbell-wood-chop","exercise-rotational-overhead-press","exercise-spider-man","exercise-hip-walk","exercise-frankenstein"],"description":"A simple 20-30 minute full body exercise routine"},"fields":{"slug":"/exercise-routine-full-body-easy/"}},{"excerpt":"Easy Upper Body Exercise Routine   Time 20 to 30 minutes Difficulty Easy Equipment Dumbbells, Yoga Ball This routine can be an easy stand…","frontmatter":{"title":"Easy Upper Body Exercise Routine","tags":["exercise","exercise-routine","exercise-rotational-overhead-press","exercise-dumbbell-wood-chop","exercise-traffic-cop","exercise-yoga-ball-roll","exercise-pike-walk"],"description":"A simple 20-30 minute upper body exercise routine"},"fields":{"slug":"/exercise-routine-upper-body-easy/"}},{"excerpt":"","frontmatter":{"title":"Exercise Routines","tags":["exercise"],"description":"Exercise routines to improve and maintain physical health"},"fields":{"slug":"/exercise-routine/"}},{"excerpt":"","frontmatter":{"title":"Spider-Mans (Exercise)","tags":["exercise"],"description":"A core and flexibility exercise"},"fields":{"slug":"/exercise-spider-man/"}},{"excerpt":"","frontmatter":{"title":"Traffic Cops (Exercise)","tags":["exercise"],"description":"A shoulder flexibility exercise"},"fields":{"slug":"/exercise-traffic-cop/"}},{"excerpt":"","frontmatter":{"title":"Yoga Ball Rolls","tags":["exercise"],"description":"A shoulder flexibility and core exercise"},"fields":{"slug":"/exercise-yoga-ball-roll/"}},{"excerpt":"","frontmatter":{"title":"Pike Walks (Exercise)","tags":["exercise"],"description":"An exercise for balance and hip flexibility"},"fields":{"slug":"/exercise-pike-walk/"}},{"excerpt":"Recipe: Configure Spring Boot on Cloud Foundry This recipe is illustrated in the PAL Tracker example project. 1. Inject Environment…","frontmatter":{"title":"Cloud Foundry Spring Boot Environment Basics","tags":["cloud-foundry","gradle","intellij","java","microservices","pal-tracker"],"description":null},"fields":{"slug":"/cloud-foundry-spring-boot-environment/"}},{"excerpt":"Five Whys Five Whys is a heuristic approach for root-cause analysis. When faced with an opportunity, asking why five times can prove useful…","frontmatter":{"title":"Five Whys","tags":["lean"],"description":"A method for root-cause analysis and problem solving"},"fields":{"slug":"/five-whys/"}},{"excerpt":"Useful Git Aliases for Productivity A recent addition to my Automatic Development Environment Setup script were several Git aliases that…","frontmatter":{"title":"Git Aliases","tags":["git","shell"],"description":"A Bash emulator and terminal for Windows"},"fields":{"slug":"/git-aliases/"}},{"excerpt":"","frontmatter":{"title":"Flyway","tags":["database-as-code"],"description":"Flyway: A tool to version control database schemas in plain SQL"},"fields":{"slug":"/flyway/"}},{"excerpt":"Git Bash Git Bash is a Bash emulator and terminal for Windows that includes common Unix utilities. It is packaged with Git for Windows…","frontmatter":{"title":"Git Bash","tags":["bash","git","shell","terminal"],"description":"A Bash emulator and terminal for Windows"},"fields":{"slug":"/git-bash/"}},{"excerpt":"Exercise Resources CDC Physical Activity Basics","frontmatter":{"title":"Exercise","tags":[],"description":"Physical activity meant to improve and maintain physical health"},"fields":{"slug":"/exercise/"}},{"excerpt":"Git Git is a free, open-source distributed version control system.","frontmatter":{"title":"Git","tags":["cli"],"description":"A distributed version-control system to track changes, typically for software development projects"},"fields":{"slug":"/git/"}},{"excerpt":"Gradle Build Tool Gradle is build automation tool that automates common software build steps like compile, test, package, deploy, and…","frontmatter":{"title":"Gradle Build Tool","tags":[],"description":null},"fields":{"slug":"/gradle/"}},{"excerpt":"Go Go is an open-source programming language with memory safety, structural typing, type safety, type inference, built-in package management…","frontmatter":{"title":"Go (Programming Language)","tags":["computer-language"],"description":"An open-source, statically typed, compiled programming language"},"fields":{"slug":"/golang/"}},{"excerpt":"","frontmatter":{"title":"Infrastructure as Code","tags":[],"description":"A technique to version-control and automate the deployment of virtualized infrastructure"},"fields":{"slug":"/infrastructure-as-code/"}},{"excerpt":"IntelliJ IDEA IntelliJ IDEA is a Java IDE, developed by JetBrains.","frontmatter":{"title":"IntelliJ IDE","tags":["java"],"description":null},"fields":{"slug":"/intellij/"}},{"excerpt":"","frontmatter":{"title":"Internet of Things (IoT)","tags":[],"description":"Tools and technologies behind Internet of Things (IoT)"},"fields":{"slug":"/iot/"}},{"excerpt":"Java Java is a general purpose, object-oriented programming language.","frontmatter":{"title":"Java","tags":["computer-language"],"description":"A cross-platform, object-oriented programming language"},"fields":{"slug":"/java/"}},{"excerpt":"jq jq can slice, filter, map, and transform structured JSON data similar to how , ,  is used for plain text.","frontmatter":{"title":"jq","tags":["cli"],"description":"A portable CLI to slice, filter, and map JSON data"},"fields":{"slug":"/jq/"}},{"excerpt":"","frontmatter":{"title":"Lean","tags":[],"description":"A method for methodically maximizing with progressively fewer resources"},"fields":{"slug":"/lean/"}},{"excerpt":"Linux The Linux File System  - Binaries The  folder contains the basic set of binaries available to every user. It contains the binaries for…","frontmatter":{"title":"Linux","tags":[],"description":"A free and open-source operating system"},"fields":{"slug":"/linux/"}},{"excerpt":"Mark Twain Quotes \"I've had a lot of worries in my life, most of which never happened.\"","frontmatter":{"title":"Mark Twain Quotes","tags":[],"description":null},"fields":{"slug":"/mark-twain/"}},{"excerpt":"How to Comment a Markdown File Markdown doesn't include specific syntax for comments, but there is a workaround using the reference style…","frontmatter":{"title":"Markdown Code Comments","tags":["markdown"],"description":null},"fields":{"slug":"/markdown-comments/"}},{"excerpt":"Markdown is a simple language for writing rich-text documents using plain text.","frontmatter":{"title":"Markdown","tags":["computer-language"],"description":"Knowledge about Markdown"},"fields":{"slug":"/markdown/"}},{"excerpt":"Mermaid Diagrams Official Website Live Editor","frontmatter":{"title":"Mermaid (JavaScript Library)","tags":["computer-language"],"description":"A software architecture in which applications are made up of loosely coupled services"},"fields":{"slug":"/mermaid/"}},{"excerpt":"","frontmatter":{"title":"Microservices","tags":[],"description":"A software architecture in which applications are made up of loosely coupled services"},"fields":{"slug":"/microservices/"}},{"excerpt":"","frontmatter":{"title":"MySQL","tags":["database"],"description":"MySQL: An open-source relational database management system (RDBMS)"},"fields":{"slug":"/mysql/"}},{"excerpt":"Package Managers A package manager is a software tool that automates the installation, upgrading, and un-installation of software or…","frontmatter":{"title":"Package Managers","tags":[],"description":"Package Managers: Apps that manage your apps"},"fields":{"slug":"/package-managers/"}},{"excerpt":"Ohm's Law Ohm's Law describes the relationship between current (), voltage (), and resistance ():  Given tha values for any two variables…","frontmatter":{"title":"Ohm's Law","tags":["electricity"],"description":"A formula for determining voltage, current, and resistance"},"fields":{"slug":"/ohms-law/"}},{"excerpt":"PAL Tracker PAL Tracker is an example app used to show basic application management and deployment strategies in Cloud Foundry. PAL Tracker…","frontmatter":{"title":"PAL Tracker","tags":["cloud-foundry","gradle","java","spring-boot"],"description":"An example application to demonstrate application deployment and management strategies in Java, Spring Boot, and Cloud Foundry"},"fields":{"slug":"/pal-tracker/"}},{"excerpt":"PowerShell PowerShell is a cross-platform command-line shell and scripting language.","frontmatter":{"title":"PowerShell","tags":["computer-language","terminal"],"description":"PowerShell: A command-line shell and scripting language"},"fields":{"slug":"/powershell/"}},{"excerpt":"Reinhold Niebuhr Quotes \"Father, give us the courage to change what must be altered, serenity to accept what cannot be helped, and insight…","frontmatter":{"title":"Reinhold Niebuhr Quotes","tags":[],"description":"A theologian and ethicist, notable for"},"fields":{"slug":"/reinhold-niebuhr/"}},{"excerpt":"Fundamental Terms of Physics Energy is the ability to do work. Work is the energy transferred to an object that causes a displacement. A…","frontmatter":{"title":"Physics","tags":[],"description":"The fundamental nature and properties of matter, energy, and motion"},"fields":{"slug":"/physics/"}},{"excerpt":"Ryder Carroll Official website Twitter","frontmatter":{"title":"Ryder Carroll","tags":[],"description":null},"fields":{"slug":"/ryder-carroll/"}},{"excerpt":"Serenity Prayer God grant me the serenity to accept the things I cannot change,\nCourage to change the things I can,\nAnd the wisdom to know…","frontmatter":{"title":"Serenity Prayer","tags":["reinhold-niebuhr"],"description":"A prayer for wisdom"},"fields":{"slug":"/serenity-prayer/"}},{"excerpt":"Shells Shells are text-based command processing applications, often used via a terminal.","frontmatter":{"title":"Shells","tags":["terminal"],"description":"Shells process text based commands"},"fields":{"slug":"/shell/"}},{"excerpt":"Spring Framework Spring Framework is an application framework and inversion of control container for Java.","frontmatter":{"title":"Spring Framework","tags":["java"],"description":null},"fields":{"slug":"/spring-framework/"}},{"excerpt":"Terminals Terminals are text-based applications read and write to a shell. A \"shell\" and a \"terminal\" may be the same application (such as…","frontmatter":{"title":"Terminals","tags":["shell"],"description":"Terminals are text-based applications read and write to a shell"},"fields":{"slug":"/terminal/"}},{"excerpt":"Spring Boot Spring Boot is an open source Java framework used to develop REST services based on Spring Framework.","frontmatter":{"title":"Spring Boot","tags":["java","spring-framework"],"description":null},"fields":{"slug":"/spring-boot/"}},{"excerpt":"Test Driven Development (TDD) TDD - Where did it all go wrong?","frontmatter":{"title":"Test Driven Development (TDD)","tags":["unit-testing"],"description":null},"fields":{"slug":"/test-driven-development/"}},{"excerpt":"TypeScript TypeScript is an open-source language that builds on JavaScript to add static type definitions.","frontmatter":{"title":"TypeScript","tags":["computer-language"],"description":"TypeScript: A programming language that adds optional static typing to JavaScript"},"fields":{"slug":"/typescript/"}},{"excerpt":"Example: Add a Property to the Window type in TypeScript Explanation Declaration files (files ending with ) are used to declare types for…","frontmatter":{"title":"TypeScript: Extend the Window (globalThis) Object","tags":["typescript"],"description":"Add custom properties to the Window interface with TypeScript"},"fields":{"slug":"/typescript-extend-window/"}},{"excerpt":"Unit Tests Unit tests are tests that run in isolation from other tests. Unit tests are typically written by developers to test their own…","frontmatter":{"title":"Unit Testing","tags":[],"description":"The art and science of writing unit tests"},"fields":{"slug":"/unit-testing/"}},{"excerpt":"Watt's Law Watt's Law, sometimes called the Power Law, describes the relationship between power (), current (), and voltage ():  Given tha…","frontmatter":{"title":"Watt's Law (Power Law)","tags":["electricity"],"description":"A formula to define the relationship between power, voltage, and current (P=IV)"},"fields":{"slug":"/watts-law/"}}]}},"pageContext":{"slug":"/cloud-foundry-spring-mvc-crud-operations/"}},"staticQueryHashes":["3794076007","80858887"]}