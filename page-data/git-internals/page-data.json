{"componentChunkName":"component---src-templates-article-tsx","path":"/git-internals/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"date\": \"2020-12-24T14:41:30.000Z\",\n  \"description\": \"How Git works internally\",\n  \"tags\": [\"git\"],\n  \"title\": \"Git Internals\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Git Internals\"), mdx(\"p\", null, \"Notes from \\\"Git from the Ground Up\\\" by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://safia.rocks/\"\n  }, \"Safia Abdalla\"), \".\"), mdx(\"iframe\", {\n    width: \"560\",\n    height: \"315\",\n    src: \"https://www.youtube.com/embed/afe0RpwaxY8\",\n    frameBorder: \"0\",\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: true\n  }), mdx(\"h2\", null, \"Summary\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Git represents key information as objects stored on the files system\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://git-scm.com/docs/git-cat-file\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"git cat-file\")), \" is useful for exploring these objects\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Git compresses loose objects into \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://git-scm.com/book/en/v2/Git-Internals-Packfiles\"\n  }, \"packfiles\"), \" to increase space efficiency (see also: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.google.com/presentation/d/1fitppu3XFqSq2Q5saXAy8QtUAm6vdQmKjuSsCz6HXRU/edit#slide=id.p\"\n  }, \"Packfiles: How Git Repositories Stay so Small\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rebases and merges differ in whether they give preference to maintaining a linear history or explicit  branches\")), mdx(\"h2\", null, \"Types of Objects stored in \", mdx(\"code\", {\n    parentName: \"h2\",\n    \"className\": \"language-text\"\n  }, \".git/\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Blobs\"), \" represent file data.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Trees\"), \" reference multiple blobs and other trees, similar to a directory structure.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Commits\"), \" reference specific trees plus metadata, such as when the commit was made, the committer, and the commit message.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Tags\"), \" are named commits.\"), mdx(\"p\", null, \"Git objects have a type, size, and content.\"), mdx(\"h2\", null, \"The \", mdx(\"code\", {\n    parentName: \"h2\",\n    \"className\": \"language-text\"\n  }, \"./git/HEAD\"), \" File\"), mdx(\"p\", null, \"The \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \".git/HEAD\"), \" file contains a reference to a tag or SHA, which identifies a specific commit. The commit points to a Tree which contains one or more parents, plus\"), mdx(\"div\", {\n    \"className\": \"mermaid\"\n  }, \"graph TD\\n  HEAD[\\\".git/HEAD\\\"] --> Ref[\\\"Ref (.git/<tag or SHA>)\\\"]\\n  Ref --> Commit[\\\"<Commit SHA>\\\"]\\n  Commit --> Tree\\n\\tCommit --> Author\\n  Commit --> Comment[\\\"Commit Comment\\\"]\\n  Tree --> Parent[\\\"<Parent Commit SHA(s)>\\\"]\\n\\tTree --> Blob[\\\"Blob(s)\\\"]\"), mdx(\"h2\", null, \"Resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://git-scm.com/book/en/v2/Git-Internals-Plumbing-and-Porcelain\"\n  }, \"Git Internals\"))));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/git-internals/"},"frontmatter":{"description":"How Git works internally","tags":["git"],"title":"Git Internals"}}},"pageContext":{"slug":"/git-internals/"}},"staticQueryHashes":["3794076007","4068398115","80858887"]}