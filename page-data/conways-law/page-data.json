{"componentChunkName":"component---src-templates-article-tsx","path":"/conways-law/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"date\": \"2022-01-20T19:26:31.000Z\",\n  \"description\": \"An observation on the coupling of an organizations structure to system design\",\n  \"tags\": [\"software-architecture\"],\n  \"title\": \"Conway's Law\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Conway's Law\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Any organization that designs a system will produce a design whose structure is a copy of the organization's communication structure.\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u2014 Melvin E. Conway\")), mdx(\"p\", null, \"In other words, the way software is \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../software-architecture/\"\n  }, \"architected\"), \" will tend to reflect the communication of the organization that built it. Pain points perceived as limitations of software are often therefore solved through organizational changes. Thus, an \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"inverse conway maneuver\"), \" is the architectural \\\"trick\\\" of achieving an architectural goal through the encouragement of structural changes to how the organization communicates.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/conways-law/"},"frontmatter":{"description":"An observation on the coupling of an organizations structure to system design","tags":["software-architecture"],"title":"Conway's Law"}}},"pageContext":{"slug":"/conways-law/"}},"staticQueryHashes":["1957148337","3794076007","80858887"]}