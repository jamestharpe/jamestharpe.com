{"componentChunkName":"component---src-templates-article-tsx","path":"/base64url/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"date\": \"2021-12-26T10:28:27.000Z\",\n  \"description\": \"The URL-compatible form of base64 encoding\",\n  \"tags\": [\"base64\"],\n  \"title\": \"Base64url\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Base64url\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Base64url\"), \" is a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../base64/\"\n  }, \"base64\"), \"-based method to encode \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../binary/\"\n  }, \"binary\"), \" data as URL-encoded ASCII text so that the data can be transported in a URL.\"), mdx(\"p\", null, \"It differs from base64 in that it forbids line separators and provides alternative character mappings for characters that have special meaning in URLs. For example, \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"+\"), \" in base64 becomes \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"-\"), \" in base64url and \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"/\"), \" in base64 becomes \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"_\"), \" in base64url.\"), mdx(\"div\", {\n    style: {\n      \"float\": \"right\",\n      border: \"solid\",\n      width: \"40%\",\n      padding: \"2em\"\n    }\n  }, mdx(\"h2\", null, \"Base64 Encoder / Decoder\"), mdx(Coder, {\n    type: \"base64url\",\n    mdxType: \"Coder\"\n  })), mdx(\"h2\", null, \"Base64url Resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://datatracker.ietf.org/doc/html/rfc4648\"\n  }, \"The Base16, Base32, and Base64 Data Encodings\"))));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/base64url/"},"frontmatter":{"description":"The URL-compatible form of base64 encoding","tags":["base64"],"title":"Base64url"}}},"pageContext":{"slug":"/base64url/"}},"staticQueryHashes":["3772659826","3794076007","80858887"]}