{"componentChunkName":"component---src-templates-article-tsx","path":"/automated-developer-environment/","result":{"data":{"markdownRemark":{"html":"<h1>Automate Your Development Environment Setup</h1>\n<p>Starting from a fresh OS installation, manually installing and configuring a full development environment can take several days. Even then, it's easy to forget some bit of configuration or forget to install some critical software. Automation makes it easy to save a ton of time and minimize disruption.</p>\n<p>Most of the software I write is developed on Windows, so I decided to write the script using PowerShell and <a href=\"https://chocolatey.org/\">Chocolatey</a>. MacOS users can follow a similar pattern using <a href=\"https://brew.sh/\">Homebrew</a>.</p>\n<h2>Overview of the Automation Process</h2>\n<p>The goal of the script is to start from a base OS installation and finish with a complete development environment. To write the script, it's easiest to use a write-test-tweak approach:</p>\n<ol>\n<li>Write a command in the PowerShell ISE (running elevated)</li>\n<li>Copy-paste the command from the script into the shell panel and execute it</li>\n<li>Tweak the command if needed</li>\n</ol>\n<p>Once your script is completed, you can easily maintain it by following the same process every time you install a new tool or adjust a setting. I prefer to store my script in OneDrive for easy access from a base Windows installation (which includes OneDrive), but I also check it in to GitHub to share with the world.</p>\n<blockquote>\n<p><strong>Warning</strong>: If your development environment is already setup manually, installing software via Chocolatey can sometimes cause conflicts. It's best to uninstall any applications you'll be managing with Chocolatey, then reinstall with Chocolatey (or just start from scratch).</p>\n</blockquote>\n<h2>Basic Script Structure</h2>\n<p>I've broken <a href=\"https://github.com/jamestharpe/windows-development-environment/blob/main/env-windows.ps1\">my script</a> into four sections:</p>\n<ol>\n<li>Utility methods</li>\n<li>Chocolatey install</li>\n<li>Configure Windows settings</li>\n<li>Install and configure tools</li>\n</ol>\n<h2>Utility Method: Refresh the PATH environment variable in PowerShell</h2>\n<p>Many of the tools you'll instal will have dependencies, which need to be available via the Windows PATH environment variable for the script to succeed. PowerShell does not automatically pick up changes to the PATH. To do that, this simple utility function will help:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token keyword\">function</span> RefreshEnvPath\n<span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$env</span>:Path = <span class=\"token namespace\">[System.Environment]</span>::GetEnvironmentVariable<span class=\"token punctuation\">(</span><span class=\"token string\">\"Path\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Machine\"</span><span class=\"token punctuation\">)</span> `\n        <span class=\"token operator\">+</span> <span class=\"token string\">\";\"</span> <span class=\"token operator\">+</span> <span class=\"token namespace\">[System.Environment]</span>::GetEnvironmentVariable<span class=\"token punctuation\">(</span><span class=\"token string\">\"Path\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"User\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This method simply re-reads the Machine and User <code class=\"language-text\">Path</code> environment variables, concatenates them, and stores them in the variable PowerShell uses to read the PATH.</p>\n<h2>Script to Install Chocolatey</h2>\n<p>The next addition to the script is to install Chocolatey (choco, for short):</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">iex</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">New-Object</span> System<span class=\"token punctuation\">.</span>Net<span class=\"token punctuation\">.</span>WebClient<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>DownloadString<span class=\"token punctuation\">(</span><span class=\"token string\">'https://chocolatey.org/install.ps1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nRefreshEnvPath</code></pre></div>\n<p>Note the call to <code class=\"language-text\">RefreshEnvPath</code>: That ensures the <code class=\"language-text\">choco</code> command will run without having to start a new PowerShell window.</p>\n<h2>Script to Configure Windows Settings</h2>\n<p>The Windows Explorer default settings don't work well for most developers. The following script will show file extensions and hidden files:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># Navigate registry</span>\n<span class=\"token function\">Push-Location</span>\n<span class=\"token function\">Set-Location</span> HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\n\n<span class=\"token comment\"># Show file extensions</span>\n<span class=\"token function\">Set-ItemProperty</span> <span class=\"token punctuation\">.</span> HideFileExt <span class=\"token string\">\"0\"</span>\n<span class=\"token comment\"># Show hidden files</span>\n<span class=\"token function\">Set-ItemProperty</span> <span class=\"token punctuation\">.</span> Hidden <span class=\"token string\">\"1\"</span>\n\n<span class=\"token function\">Pop-Location</span>\n\n<span class=\"token comment\"># Force Windows Explorer restart so settings take effect</span>\n<span class=\"token function\">Stop-Process</span> <span class=\"token operator\">-</span>processName: Explorer <span class=\"token operator\">-</span>force</code></pre></div>\n<h2>Script to Install Developer Tools</h2>\n<p>With Chocolaty installed, to install development tools requires a simple call to <code class=\"language-text\">choco install [tool name] --yes</code>. The <code class=\"language-text\">--yes</code> flag is required so that the script doesn't prompt you to approve each installation before proceeding. For example, to install Visual Studio Code, simply run:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">choco install vscode <span class=\"token operator\">--</span>yes</code></pre></div>\n<p>When installing a tool that needs to be configured or is a prerequisite of another tool, remember to call <code class=\"language-text\">RefreshEnvPath</code> before proceeding, or your script will error out.</p>\n<h3>Script to Customize VS Code</h3>\n<p>Vanilla Visual Studio Code isn't very interesting, so let's customize it by installing some common plug-ins. Here's what I install by default:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">RefreshEnvPath\n\n<span class=\"token comment\"># Pretty icons</span>\ncode <span class=\"token operator\">--</span><span class=\"token function\">install-extension</span> robertohuertasm<span class=\"token punctuation\">.</span>vscode<span class=\"token operator\">-</span>icons\n\n<span class=\"token comment\"># PowerShell</span>\ncode <span class=\"token operator\">--</span><span class=\"token function\">install-extension</span> ms<span class=\"token operator\">-</span>vscode<span class=\"token punctuation\">.</span>PowerShell\n\n<span class=\"token comment\"># HTML, CSS, JS</span>\ncode <span class=\"token operator\">--</span><span class=\"token function\">install-extension</span> Zignd<span class=\"token punctuation\">.</span>html<span class=\"token operator\">-</span>css<span class=\"token operator\">-</span><span class=\"token keyword\">class</span><span class=\"token operator\">-</span>completion\ncode <span class=\"token operator\">--</span><span class=\"token function\">install-extension</span> lonefy<span class=\"token punctuation\">.</span>vscode<span class=\"token operator\">-</span>JS<span class=\"token operator\">-</span>CSS<span class=\"token operator\">-</span>HTML<span class=\"token operator\">-</span>formatter\ncode <span class=\"token operator\">--</span><span class=\"token function\">install-extension</span> robinbentley<span class=\"token punctuation\">.</span>sass<span class=\"token operator\">-</span>indented\ncode <span class=\"token operator\">--</span><span class=\"token function\">install-extension</span> dbaeumer<span class=\"token punctuation\">.</span>vscode<span class=\"token operator\">-</span>eslint\ncode <span class=\"token operator\">--</span><span class=\"token function\">install-extension</span> steoates<span class=\"token punctuation\">.</span>autoimport\n\n<span class=\"token comment\"># TypeScript</span>\ncode <span class=\"token operator\">--</span><span class=\"token function\">install-extension</span> eg2<span class=\"token punctuation\">.</span>tslint\ncode <span class=\"token operator\">--</span><span class=\"token function\">install-extension</span> johnpapa<span class=\"token punctuation\">.</span>Angular2\n\n<span class=\"token comment\"># Docker</span>\ncode <span class=\"token operator\">--</span><span class=\"token function\">install-extension</span> PeterJausovec<span class=\"token punctuation\">.</span>vscode<span class=\"token operator\">-</span>docker</code></pre></div>\n<p>The commands to install VS Code extensions from PowerShell are slightly different compared to what you would put directly into the VS Code command pallet. To know what value to pass into the <code class=\"language-text\">--install-extension</code> command, you can grab the fully qualified extension name from the Visual Studio Marketplace URL, like so:</p>\n<p><img src=\"../img/vs-code-extension-fully-qualified-name_600x357.png\" alt=\"Fully qualified VS code extension name example\"></p>\n<h2>Advanced Options</h2>\n<p>I recently configured a similar script for a large development team. Though the team uses a lot of required tools, they also have a lot options that boil down to personal preference. For example, some of the developers prefer IntelliJ while others prefer Eclipse.</p>\n<p>This can be easily handled by accepting arguments and choosing wise defaults. As an example, let's install both by default but allow the user to specify the IDE as a command-line argument. Start by using <code class=\"language-text\">params</code> at the top of the script:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">params<span class=\"token punctuation\">(</span>\n    <span class=\"token namespace\">[string[]]</span>\n    <span class=\"token variable\">$ide</span>=@<span class=\"token punctuation\">(</span><span class=\"token string\">\"intellij\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"eclipse\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Later on, we can read the argument:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ide</span> <span class=\"token operator\">-contains</span> <span class=\"token string\">\"intellij\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    choco install intellijidea<span class=\"token operator\">-</span>ultimate <span class=\"token operator\">--</span>yes\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ide</span> <span class=\"token operator\">-contains</span> <span class=\"token string\">\"eclipse\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    choco install eclipse <span class=\"token operator\">--</span>yes\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Finally, the script can be called with the <code class=\"language-text\">-ide</code> argument. Here's an example to install only Eclipse:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">env<span class=\"token operator\">-</span>windows<span class=\"token punctuation\">.</span>ps1 <span class=\"token operator\">-</span>ide eclipse</code></pre></div>\n<h2>A Full Example</h2>\n<p>You can view <a href=\"https://github.com/jamestharpe/windows-development-environment/blob/main/env-windows.ps1\">the script</a> I use personally on <a href=\"https://github.com/jamestharpe/\">my GitHub page</a> (MIT License). Contributions welcome!</p>","fields":{"slug":"/automated-developer-environment/"},"frontmatter":{"title":"Automatically Build a Developer Environment on Windows","tags":["powershell","chocolatey"]}},"allMarkdownRemark":{"nodes":[{"excerpt":"Flyway Flyway is a tool to help version database schemas with plain SQL.","frontmatter":{"title":"Flyway","tags":["database-as-code"],"description":"Flyway: A tool to version control database schemas in plain SQL"},"fields":{"slug":"/flyway/"}},{"excerpt":"Ender 3 Pro 3D Printer Notes The Ender 3 Pro 3D Printer is a great first 3D printer. Filament size: 1.75mm","frontmatter":{"title":"Ender 3 Pro 3D Printer","tags":["3d-printing"],"description":"A small, reliable 3D printer appropriate for home use"},"fields":{"slug":"/3d-printer-ender-3-pro/"}},{"excerpt":"Automate Your Development Environment Setup Starting from a fresh OS installation, manually installing and configuring a full development…","frontmatter":{"title":"Automatically Build a Developer Environment on Windows","tags":["powershell","chocolatey"],"description":"A step-by-step guide to automate tool and framework installation for developers that use Windows"},"fields":{"slug":"/automated-developer-environment/"}},{"excerpt":"Notes on 3D Printing Process to 3D Print a Design Create or download a 3D design, typically as an STL file. \"Slice\" the design with a slicer…","frontmatter":{"title":"3D printing","tags":[],"description":"Learn to 3D print"},"fields":{"slug":"/3d-printing/"}},{"excerpt":"","frontmatter":{"title":"AWS Command Line Interface (CLI)","tags":["aws"],"description":"The AWS CLI is a tool to manage AWS services via command line"},"fields":{"slug":"/aws-cli/"}},{"excerpt":"","frontmatter":{"title":"AWS CloudFormation","tags":["aws"],"description":"AWS CloudFormation is a service to model AWS infrastructure as code"},"fields":{"slug":"/aws-cloudformation/"}},{"excerpt":"","frontmatter":{"title":"AWS CloudFormation","tags":["aws"],"description":"AWS DynamoDB is a 'NoSQL' key-value and document database"},"fields":{"slug":"/aws-dynamodb/"}},{"excerpt":"DynamoDB Local Secondary Index A local secondary index essentially gives DynamoDB tables an additional sort key by which to query data. I…","frontmatter":{"title":"DynamoDB & CloudFormation: Add a Local Secondary Index to Existing Table","tags":["aws-cloudformation","aws-dynamodb","aws-cli","jq","database-as-code","infrastructure-as-code"],"description":null},"fields":{"slug":"/aws-dynamodb-local-secondary-index-existing-table-cloudformation/"}},{"excerpt":"","frontmatter":{"title":"Amazon Web Services (AWS)","tags":[],"description":null},"fields":{"slug":"/aws/"}},{"excerpt":"Atomic Habits by James Clear Atomic Habits argues that small, daily improvements culminate in huge long-term payoffs. Good financial…","frontmatter":{"title":"Atomic Habits by James Clear","tags":[],"description":"A guide to making small, habitual changes to improve your life"},"fields":{"slug":"/book-atomic-habits/"}},{"excerpt":"The Bullet Journal Method Official Website YouTube Channel Quotes from The Bullet Journal Method \"Perfection is an unnatural and damaging…","frontmatter":{"title":"The Bullet Journal Method by Ryder Carroll","tags":["ryder-carroll","bullet-journaling","book"],"description":"A book by Ryder Carroll, the Bullet Journal Method describes an approach to life management through journals"},"fields":{"slug":"/book-bullet-journal-method/"}},{"excerpt":"The Goal: A Business Graphic Novel The Goal: A Business Graphic Novel is an adaptation of the book The Goal: A Process of Ongoing…","frontmatter":{"title":"The Goal: A Business Graphic Novel by Eliyahu Goldratt","tags":["book"],"description":"A business graphic novel to introduce the theory of constraints"},"fields":{"slug":"/book-goal-business-graphic-novel/"}},{"excerpt":"Never Split the Difference In Never Split the Difference, former FBI negotiator Chris Voss breaks down his approach to negotiation. Key…","frontmatter":{"title":"Never Split the Difference by Chris Voss","tags":["chris-voss","negotiation"],"description":"A book by Chris Voss, Never Split the Difference describes various strategies and tactics for successful negotiation"},"fields":{"slug":"/book-never-split-the-difference/"}},{"excerpt":"AWS Identity and Access Management (IAM) IAM is a global service (no need to set a region) that completely manages all AWS Security \"in the…","frontmatter":{"title":"AWS Identity and Access Management (IAM)","tags":["aws"],"description":"AWS IAM: Identity Access Management for the AWS Cloud"},"fields":{"slug":"/aws-iam/"}},{"excerpt":"Bullet Journaling Tips Start new custom collections with a mission statement to stay focused on what's important. Five whys is a great…","frontmatter":{"title":"Bullet Journaling Tips & Advice","tags":["bullet-journaling","five-whys"],"description":"Simple tips and advice from lessons learned through years of bullet journaling"},"fields":{"slug":"/bullet-journaling-tips/"}},{"excerpt":"","frontmatter":{"title":"Book Notes and Reviews","tags":[],"description":"Notes, quotes, and reviews of books I've read"},"fields":{"slug":"/book/"}},{"excerpt":"Bullet Journaling Bullet Journaling is a modular set of practices for personal organization. These practices organize schedules, reminders…","frontmatter":{"title":"Bullet Journaling","tags":[],"description":"A method of to organize schedules, reminders, task lists, and brainstorming with into a single notebook"},"fields":{"slug":"/bullet-journaling/"}},{"excerpt":"Carl Sagan Official website Quotes \"Every question is a cry to understand the world\" --Carl Sagan, The Demon-Haunted World: Science as a…","frontmatter":{"title":"Carl Sagan","tags":[],"description":null},"fields":{"slug":"/carl-sagan/"}},{"excerpt":"Chris Voss Official profile","frontmatter":{"title":"Chris Voss","tags":[],"description":null},"fields":{"slug":"/chris-voss/"}},{"excerpt":"Chocolatey Chocolatey is a package manager for Windows, similar to Homebrew for Mac.","frontmatter":{"title":"Chocolatey (Windows Package Manager)","tags":["package-managers"],"description":"Knowledge about Chocolatey: a package manager for managing software on Windows"},"fields":{"slug":"/chocolatey/"}},{"excerpt":"Command Line Interfaces Command-line Interfaces (CLIs) are applications that to process text-based commands, typically entered into a…","frontmatter":{"title":"Command-line Interface (CLI)","tags":["terminal","shell"],"description":"Programs that take commands through terminals and shells"},"fields":{"slug":"/cli/"}},{"excerpt":"Recipe: Database as Code with Flyway & MySQL on Cloud Foundry This recipe is illustrated in the PAL Tracker example project. 1. Provision…","frontmatter":{"title":"Database as Code: Flyway & MySQL on Cloud Foundry","tags":["cloud-foundry","database-as-code","flyway","mysql","pal-tracker"],"description":null},"fields":{"slug":"/cloud-foundry-database-as-code-flyway/"}},{"excerpt":"Recipe: Configure Spring Boot on Cloud Foundry This recipe is illustrated in the PAL Tracker example project. 1. Inject Environment…","frontmatter":{"title":"Cloud Foundry Spring Boot Environment Basics","tags":["cloud-foundry","gradle","intellij","java","microservices","pal-tracker"],"description":null},"fields":{"slug":"/cloud-foundry-spring-boot-environment/"}},{"excerpt":"Recipe: PCF Cloud Native App This recipe is based on the PAL Tracker example project. 1. Create the PCF Developer Environment Developing…","frontmatter":{"title":"Pivotal Cloud Foundry (PCF) with Spring Boot Basics","tags":["java","spring-boot","microservices","cloud-foundry","pal-tracker","intellij"],"description":null},"fields":{"slug":"/cloud-foundry-spring-boot/"}},{"excerpt":"Bash Bash is a Unix shell Bash Command Shortcuts Command Use Example  Show list of previous commands  will show last five commands executed…","frontmatter":{"title":"Bourne Again Shell (Bash)","tags":["shell","terminal"],"description":"A Unix shell"},"fields":{"slug":"/bash/"}},{"excerpt":"","frontmatter":{"title":"Cloud Foundry","tags":[],"description":"Could Foundry: An open-source cloud platform as a service (PaaS)"},"fields":{"slug":"/cloud-foundry/"}},{"excerpt":"Computer Languages Computer Languages are languages used by humans to tell computers what to do. There are multiple types of computer…","frontmatter":{"title":"Computer Languages","tags":[],"description":"Computer Languages: How humans tell computers what to do"},"fields":{"slug":"/computer-language/"}},{"excerpt":"","frontmatter":{"title":"Database as Code","tags":[],"description":"A technique to version-control and automate the deployment of database schemas"},"fields":{"slug":"/database-as-code/"}},{"excerpt":"","frontmatter":{"title":"Databases","tags":[],"description":"Databases: Organized collections of structured data"},"fields":{"slug":"/database/"}},{"excerpt":"Useful Docker Shell Command and \"Shortcuts\" Start/Stop All Docker Containers This example starts then stops all containers: Remove All…","frontmatter":{"title":"Useful Docker Commands","tags":["docker","shell"],"description":null},"fields":{"slug":"/docker-commands/"}},{"excerpt":"Error response from daemon: invalid bind mount spec The call to  using Git Bash on Windows was recently frustrating me when I tried to…","frontmatter":{"title":"Docker: Fix Invalid Bind Mount Spec in Git Bash","tags":["docker","git-bash"],"description":null},"fields":{"slug":"/docker-fix-invalid-bind-mount-spec-gitbash/"}},{"excerpt":"\"Forbidden path outside the build context\" I was recently attempting to Dockerize a Node project, so I added a  folder to the project and…","frontmatter":{"title":"Include Files Outside Docker Build Context","tags":["docker"],"description":null},"fields":{"slug":"/docker-include-files-outside-build-context/"}},{"excerpt":"","frontmatter":{"title":"Docker","tags":[],"description":"A set of tools to build and run containers"},"fields":{"slug":"/docker/"}},{"excerpt":"How to do a Dumbbell Wood Chop","frontmatter":{"title":"Dumbbell Wood Chop","tags":["exercise"],"description":"A core and full-body dumbbell exercise"},"fields":{"slug":"/exercise-dumbbell-wood-chop/"}},{"excerpt":"Electricity Electricity the form of energy (the ability to do work) that results from charged particles (electrons, protons). Measures of…","frontmatter":{"title":"Electricity","tags":["physics"],"description":"A formula to define the relationship between power, voltage, and current (P=IV)"},"fields":{"slug":"/electricity/"}},{"excerpt":"","frontmatter":{"title":"Frankensteins (Exercise)","tags":["exercise"],"description":"An exercise for hamstring flexibility and lower abdominal muscles"},"fields":{"slug":"/exercise-frankenstein/"}},{"excerpt":"","frontmatter":{"title":"Hip Walks (Exercise)","tags":["exercise"],"description":"An exercise for balance and hip flexibility"},"fields":{"slug":"/exercise-hip-walk/"}},{"excerpt":"","frontmatter":{"title":"Pike Walks (Exercise)","tags":["exercise"],"description":"An exercise for balance and hip flexibility"},"fields":{"slug":"/exercise-pike-walk/"}},{"excerpt":"Easy Full Body Exercise Routine   Time 20 to 30 minutes Difficulty Easy Equipment Dumbbells This routine can be an easy stand-alone routine…","frontmatter":{"title":"Easy Full Body Exercise Routine","tags":["exercise","exercise-routine","exercise-dumbbell-wood-chop","exercise-rotational-overhead-press","exercise-spider-man","exercise-hip-walk","exercise-frankenstein"],"description":"A simple 20-30 minute full body exercise routine"},"fields":{"slug":"/exercise-routine-full-body-easy/"}},{"excerpt":"How to do a Rotational Overhead Press","frontmatter":{"title":"Rotational Overhead Press","tags":["exercise"],"description":"A core and shoulders dumbbell exercise"},"fields":{"slug":"/exercise-rotational-overhead-press/"}},{"excerpt":"Recipe: Create, Retrieve, Update, and Delete with Spring MVC This recipe is based on the PAL Tracker example project. 1. Create the Model We…","frontmatter":{"title":"Spring MVC CRUD Operations","tags":["java","intellij","gradle","cloud-foundry","pal-tracker","spring-boot","microservices"],"description":null},"fields":{"slug":"/cloud-foundry-spring-mvc-crud-operations/"}},{"excerpt":"Easy Upper Body Exercise Routine   Time 20 to 30 minutes Difficulty Easy Equipment Dumbbells, Yoga Ball This routine can be an easy stand…","frontmatter":{"title":"Easy Upper Body Exercise Routine","tags":["exercise","exercise-routine","exercise-rotational-overhead-press","exercise-dumbbell-wood-chop","exercise-traffic-cop","exercise-yoga-ball-roll","exercise-pike-walk"],"description":"A simple 20-30 minute upper body exercise routine"},"fields":{"slug":"/exercise-routine-upper-body-easy/"}},{"excerpt":"","frontmatter":{"title":"Exercise Routines","tags":["exercise"],"description":"Exercise routines to improve and maintain physical health"},"fields":{"slug":"/exercise-routine/"}},{"excerpt":"","frontmatter":{"title":"Spider-Mans (Exercise)","tags":["exercise"],"description":"A core and flexibility exercise"},"fields":{"slug":"/exercise-spider-man/"}},{"excerpt":"","frontmatter":{"title":"Traffic Cops (Exercise)","tags":["exercise"],"description":"A shoulder flexibility exercise"},"fields":{"slug":"/exercise-traffic-cop/"}},{"excerpt":"","frontmatter":{"title":"Yoga Ball Rolls","tags":["exercise"],"description":"A shoulder flexibility and core exercise"},"fields":{"slug":"/exercise-yoga-ball-roll/"}},{"excerpt":"Exercise Resources CDC Physical Activity Basics","frontmatter":{"title":"Exercise","tags":[],"description":"Physical activity meant to improve and maintain physical health"},"fields":{"slug":"/exercise/"}},{"excerpt":"Five Whys Five Whys is a heuristic approach for root-cause analysis. When faced with an opportunity, asking why five times can prove useful…","frontmatter":{"title":"Five Whys","tags":["lean"],"description":"A method for root-cause analysis and problem solving"},"fields":{"slug":"/five-whys/"}},{"excerpt":"Useful Git Aliases for Productivity A recent addition to my Automatic Development Environment Setup script were several Git aliases that…","frontmatter":{"title":"Git Aliases","tags":["git","shell"],"description":"A Bash emulator and terminal for Windows"},"fields":{"slug":"/git-aliases/"}},{"excerpt":"Git Bash Git Bash is a Bash emulator and terminal for Windows that includes common Unix utilities. It is packaged with Git for Windows…","frontmatter":{"title":"Git Bash","tags":["bash","git","shell","terminal"],"description":"A Bash emulator and terminal for Windows"},"fields":{"slug":"/git-bash/"}},{"excerpt":"Go Go is an open-source programming language with memory safety, structural typing, type safety, type inference, built-in package management…","frontmatter":{"title":"Go (Programming Language)","tags":["computer-language"],"description":"An open-source, statically typed, compiled programming language"},"fields":{"slug":"/golang/"}},{"excerpt":"Git Git is a free, open-source distributed version control system.","frontmatter":{"title":"Git","tags":["cli"],"description":"A distributed version-control system to track changes, typically for software development projects"},"fields":{"slug":"/git/"}},{"excerpt":"Gradle Build Tool Gradle is build automation tool that automates common software build steps like compile, test, package, deploy, and…","frontmatter":{"title":"Gradle Build Tool","tags":[],"description":null},"fields":{"slug":"/gradle/"}},{"excerpt":"","frontmatter":{"title":"Infrastructure as Code","tags":[],"description":"A technique to version-control and automate the deployment of virtualized infrastructure"},"fields":{"slug":"/infrastructure-as-code/"}},{"excerpt":"IntelliJ IDEA IntelliJ IDEA is a Java IDE, developed by JetBrains.","frontmatter":{"title":"IntelliJ IDE","tags":["java"],"description":null},"fields":{"slug":"/intellij/"}},{"excerpt":"","frontmatter":{"title":"Internet of Things (IoT)","tags":[],"description":"Tools and technologies behind Internet of Things (IoT)"},"fields":{"slug":"/iot/"}},{"excerpt":"Java Java is a general purpose, object-oriented programming language.","frontmatter":{"title":"Java","tags":["computer-language"],"description":"A cross-platform, object-oriented programming language"},"fields":{"slug":"/java/"}},{"excerpt":"jq jq can slice, filter, map, and transform structured JSON data similar to how , ,  is used for plain text.","frontmatter":{"title":"jq","tags":["cli"],"description":"A portable CLI to slice, filter, and map JSON data"},"fields":{"slug":"/jq/"}},{"excerpt":"","frontmatter":{"title":"Lean","tags":[],"description":"A method for methodically maximizing with progressively fewer resources"},"fields":{"slug":"/lean/"}},{"excerpt":"Linux The Linux File System  - Binaries The  folder contains the basic set of binaries available to every user. It contains the binaries for…","frontmatter":{"title":"Linux","tags":[],"description":"A free and open-source operating system"},"fields":{"slug":"/linux/"}},{"excerpt":"Mark Twain Quotes \"I've had a lot of worries in my life, most of which never happened.\"","frontmatter":{"title":"Mark Twain Quotes","tags":[],"description":null},"fields":{"slug":"/mark-twain/"}},{"excerpt":"How to Comment a Markdown File Markdown doesn't include specific syntax for comments, but there is a workaround using the reference style…","frontmatter":{"title":"Markdown Code Comments","tags":["markdown"],"description":null},"fields":{"slug":"/markdown-comments/"}},{"excerpt":"Markdown is a simple language for writing rich-text documents using plain text.","frontmatter":{"title":"Markdown","tags":["computer-language"],"description":"Knowledge about Markdown"},"fields":{"slug":"/markdown/"}},{"excerpt":"Mermaid Diagrams Official Website Live Editor","frontmatter":{"title":"Mermaid (JavaScript Library)","tags":["computer-language"],"description":"A software architecture in which applications are made up of loosely coupled services"},"fields":{"slug":"/mermaid/"}},{"excerpt":"Negotiation","frontmatter":{"title":"Negotiation","tags":[],"description":"The art and science of reaching agreements"},"fields":{"slug":"/negotiation/"}},{"excerpt":"","frontmatter":{"title":"MySQL","tags":["database"],"description":"MySQL: An open-source relational database management system (RDBMS)"},"fields":{"slug":"/mysql/"}},{"excerpt":"Ohm's Law Ohm's Law describes the relationship between current (), voltage (), and resistance ():  Given tha values for any two variables…","frontmatter":{"title":"Ohm's Law","tags":["electricity"],"description":"A formula for determining voltage, current, and resistance"},"fields":{"slug":"/ohms-law/"}},{"excerpt":"Package Managers A package manager is a software tool that automates the installation, upgrading, and un-installation of software or…","frontmatter":{"title":"Package Managers","tags":[],"description":"Package Managers: Apps that manage your apps"},"fields":{"slug":"/package-managers/"}},{"excerpt":"PAL Tracker PAL Tracker is an example app used to show basic application management and deployment strategies in Cloud Foundry. PAL Tracker…","frontmatter":{"title":"PAL Tracker","tags":["cloud-foundry","gradle","java","spring-boot"],"description":"An example application to demonstrate application deployment and management strategies in Java, Spring Boot, and Cloud Foundry"},"fields":{"slug":"/pal-tracker/"}},{"excerpt":"Fundamental Terms of Physics Energy is the ability to do work. Work is the energy transferred to an object that causes a displacement. A…","frontmatter":{"title":"Physics","tags":[],"description":"The fundamental nature and properties of matter, energy, and motion"},"fields":{"slug":"/physics/"}},{"excerpt":"PowerShell PowerShell is a cross-platform command-line shell and scripting language.","frontmatter":{"title":"PowerShell","tags":["computer-language","terminal"],"description":"PowerShell: A command-line shell and scripting language"},"fields":{"slug":"/powershell/"}},{"excerpt":"Reinhold Niebuhr Quotes \"Father, give us the courage to change what must be altered, serenity to accept what cannot be helped, and insight…","frontmatter":{"title":"Reinhold Niebuhr Quotes","tags":[],"description":"A theologian and ethicist, notable for"},"fields":{"slug":"/reinhold-niebuhr/"}},{"excerpt":"Ryder Carroll Official website Twitter","frontmatter":{"title":"Ryder Carroll","tags":[],"description":null},"fields":{"slug":"/ryder-carroll/"}},{"excerpt":"Serenity Prayer God grant me the serenity to accept the things I cannot change,\nCourage to change the things I can,\nAnd the wisdom to know…","frontmatter":{"title":"Serenity Prayer","tags":["reinhold-niebuhr"],"description":"A prayer for wisdom"},"fields":{"slug":"/serenity-prayer/"}},{"excerpt":"Shells Shells are text-based command processing applications, often used via a terminal.","frontmatter":{"title":"Shells","tags":["terminal"],"description":"Shells process text based commands"},"fields":{"slug":"/shell/"}},{"excerpt":"Spring Boot Spring Boot is an open source Java framework used to develop REST services based on Spring Framework.","frontmatter":{"title":"Spring Boot","tags":["java","spring-framework"],"description":null},"fields":{"slug":"/spring-boot/"}},{"excerpt":"Spring Framework Spring Framework is an application framework and inversion of control container for Java.","frontmatter":{"title":"Spring Framework","tags":["java"],"description":null},"fields":{"slug":"/spring-framework/"}},{"excerpt":"Terminals Terminals are text-based applications read and write to a shell. A \"shell\" and a \"terminal\" may be the same application (such as…","frontmatter":{"title":"Terminals","tags":["shell"],"description":"Terminals are text-based applications read and write to a shell"},"fields":{"slug":"/terminal/"}},{"excerpt":"Test Driven Development (TDD) TDD - Where did it all go wrong?","frontmatter":{"title":"Test Driven Development (TDD)","tags":["unit-testing"],"description":null},"fields":{"slug":"/test-driven-development/"}},{"excerpt":"Example: Add a Property to the Window type in TypeScript Explanation Declaration files (files ending with ) are used to declare types for…","frontmatter":{"title":"TypeScript: Extend the Window (globalThis) Object","tags":["typescript"],"description":"Add custom properties to the Window interface with TypeScript"},"fields":{"slug":"/typescript-extend-window/"}},{"excerpt":"Watt's Law Watt's Law, sometimes called the Power Law, describes the relationship between power (), current (), and voltage ():  Given tha…","frontmatter":{"title":"Watt's Law (Power Law)","tags":["electricity"],"description":"A formula to define the relationship between power, voltage, and current (P=IV)"},"fields":{"slug":"/watts-law/"}},{"excerpt":"","frontmatter":{"title":"Microservices","tags":[],"description":"A software architecture in which applications are made up of loosely coupled services"},"fields":{"slug":"/microservices/"}},{"excerpt":"Unit Tests Unit tests are tests that run in isolation from other tests. Unit tests are typically written by developers to test their own…","frontmatter":{"title":"Unit Testing","tags":[],"description":"The art and science of writing unit tests"},"fields":{"slug":"/unit-testing/"}},{"excerpt":"TypeScript TypeScript is an open-source language that builds on JavaScript to add static type definitions.","frontmatter":{"title":"TypeScript","tags":["computer-language"],"description":"TypeScript: A programming language that adds optional static typing to JavaScript"},"fields":{"slug":"/typescript/"}}]}},"pageContext":{"slug":"/automated-developer-environment/"}},"staticQueryHashes":["3794076007","80858887"]}