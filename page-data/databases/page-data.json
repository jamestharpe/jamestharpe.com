{
    "componentChunkName": "component---src-templates-article-tsx",
    "path": "/databases/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2021-11-16T18:58:42.000Z\",\n  \"description\": \"Databases: Organized collections of structured data\",\n  \"redirect_from\": [\"/database/\"],\n  \"tags\": [\"software-engineering\"],\n  \"title\": \"Databases\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Databases\"), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"database\"), \" is an organized collection of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../data/\"\n  }, \"data\"), \".\"), mdx(\"h2\", null, \"Types of databases\"), mdx(\"h3\", null, \"Document database\"), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"document database\"), \" is a key-value store in which the value consists of semi-structured data that can usually be further queried.\"), mdx(\"h3\", null, \"Graph database\"), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"graph database\"), \" stores records as nodes and defines relationships as edges between nodes.\"), mdx(\"h3\", null, \"Key-value store\"), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"key-value store\"), \" stores data as a hash table, where each key can quickly be queried to return the associated data.\"), mdx(\"h3\", null, \"Relational database\"), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"relational database\"), \" maintains data in a tabular format, where each record in the database is identified by a primary key, and relationships to other records are defined by foreign keys. Most relational databases support SQL based queries.\"), mdx(\"h3\", null, \"Time series database\"), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"time series database\"), \" is optimized to aggregate timestamped data.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/databases/"},"frontmatter":{"title":"Databases","tags":["software-engineering"]}}},"pageContext":{"slug":"/databases/"}},
    "staticQueryHashes": ["1957148337","3794076007","80858887"]}