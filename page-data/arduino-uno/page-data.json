{"componentChunkName":"component---src-templates-article-tsx","path":"/arduino-uno/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"date\": \"2021-01-03T13:22:11.000Z\",\n  \"description\": \"The open-source electronics platform for interactive projects and prototypes\",\n  \"tags\": [\"arduino\"],\n  \"title\": \"Arduino Uno\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Arduino Uno\"), mdx(\"p\", null, \"The \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Arduino Uno\"), \" is the most popular of the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.arduino.cc/en/Main/Products\"\n  }, \"Arduino boards\"), \" available and the easiest to get started with.\"), mdx(\"h2\", null, \"Capabilities Summary\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"USB Type B connector provides data and power in\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DC Barrel Connector provides power in\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"14 Digital I/O Pins\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pulse Width Modulation on pins 3, 5, 6, 9, 10, and 11\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Serial Communication on pins 0 and 1\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Serial Peripheral Interface (SPI) communication on pins 10, 11, 12, and 13\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"6 Analog Input Pins\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Two Wire Interface (TWI) support on pins A4 and A5\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Can be powered by a 9V battery\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\\"Power pins\\\" can power the board, external devices, and shields\")), mdx(\"h3\", null, \"Power Requirements\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"From 7 to 12 \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"../electricity/\"\n  }, \"volts\"))), mdx(\"h2\", null, \"Arduino Uno Resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://content.arduino.cc/assets/UNO-TH_Rev3e_sch.pdf\"\n  }, \"Arduino Uno Schematics (PDF)\"))));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/arduino-uno/"},"frontmatter":{"description":"The open-source electronics platform for interactive projects and prototypes","tags":["arduino"],"title":"Arduino Uno"}}},"pageContext":{"slug":"/arduino-uno/"}},"staticQueryHashes":["1957148337","3794076007","80858887"]}