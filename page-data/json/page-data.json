{"componentChunkName":"component---src-templates-article-tsx","path":"/json/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"date\": \"2021-09-01T12:11:27.000Z\",\n  \"description\": \"A simple text-based format for data exchange based on a subset of JavaScript, defined by RFC 7159\",\n  \"tags\": [\"javascript\", \"ietf-standards\"],\n  \"title\": \"JavaScript Object Notation (JSON)\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"JavaScript Object Notation (JSON)\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"JavaScript Object Notation (JSON)\"), \" is a simple text-based, structured data format that's easy for humans and computers to read and write. Though JSON is based on a subset of JavaScript, virtually every modern \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../computer-languages/\"\n  }, \"programming language\"), \" can read and write it.\"), mdx(\"h2\", null, \"JSON Resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://datatracker.ietf.org/doc/html/rfc7159\"\n  }, \"JavaScript Object Notation (JSON) Data Interchange Format, RFC 7159\"))));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/json/"},"frontmatter":{"description":"A simple text-based format for data exchange based on a subset of JavaScript, defined by RFC 7159","tags":["javascript","ietf-standards"],"title":"JavaScript Object Notation (JSON)"}}},"pageContext":{"slug":"/json/"}},"staticQueryHashes":["3794076007","4068398115","80858887"]}