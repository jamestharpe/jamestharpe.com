{
    "componentChunkName": "component---src-templates-article-tsx",
    "path": "/python-pip/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2021-11-22T17:00:54.000Z\",\n  \"description\": \"Python's default package manager\",\n  \"tags\": [\"python\", \"package-managers\"],\n  \"title\": \"Pip: Python's Package Manager\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Pip: Python's Package Manager\"), mdx(\"p\", null, \"Pip is \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../python/\"\n  }, \"Python's\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../package-managers/\"\n  }, \"package manager\"), \".\"), mdx(\"h2\", null, \"The \\\"safe\\\" way to call \", mdx(\"code\", {\n    parentName: \"h2\",\n    \"className\": \"language-text\"\n  }, \"pip\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"TLDR: Prefix \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"pip\"), \" commands with \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"python3 -m\"))), mdx(\"p\", null, \"Though \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"pip\"), \" can be called directly, the version of \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"pip\"), \" called is dependent on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../shell/\"\n  }, \"shell's\"), \" \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"PATH\"), \" variable. If multiple versions of Python and \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"pip\"), \" are installed, the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"pip\"), \" command may not run the expected version of \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"pip\"), \".\"), mdx(\"p\", null, \"The simplest way to avoid this confusion is to call \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"pip\"), \" via \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"python3\"), \" by prefixing \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"pip\"), \" commands with \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"python3 -m\"), \". For example, instead of running \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"pip install <package-name>\"), \", call \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"python3 -m pip install <package-name>\"), \". This ensures the version of \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"pip\"), \" called is the version associated with the version of \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"python\"), \" or \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"python3\"), \" executed. This works because the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"python3 -m\"), \" command uses the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"sys.path\"), \" variable to find \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"pip\"), \" instead of the terminal's \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"PATH\"), \" variable.\"), mdx(\"h2\", null, \"Useful \", mdx(\"code\", {\n    parentName: \"h2\",\n    \"className\": \"language-text\"\n  }, \"pip\"), \" commands\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Command\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"pip install <package-name>\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Installs the specified package\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"pip install --upgrade <package-name>\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Upgrades the specified package to the latest version\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"code\", {\n    parentName: \"td\",\n    \"className\": \"language-text\"\n  }, \"pip show <package-name>\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Shows a summary of the specified package installation: Name, version, path, etc.\")))), mdx(\"h2\", null, mdx(\"code\", {\n    parentName: \"h2\",\n    \"className\": \"language-text\"\n  }, \"pip\"), \" resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://pip.pypa.io/en/stable/\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"pip\"), \" official website\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://pip.pypa.io/en/stable/user_guide/\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"pip\"), \" user guide\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://pypi.org/\"\n  }, \"Python Package Index\"))));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/python-pip/"},"frontmatter":{"title":"Pip: Python's Package Manager","tags":["python","package-managers"]}}},"pageContext":{"slug":"/python-pip/"}},
    "staticQueryHashes": ["1957148337","3794076007","80858887"]}