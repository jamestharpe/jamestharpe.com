{"componentChunkName":"component---src-templates-article-tsx","path":"/markdown-comments/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"date\": \"2017-10-26T22:17:11.000Z\",\n  \"redirect_from\": [\"/code-comments-markdown/\"],\n  \"tags\": [\"markdown\"],\n  \"title\": \"Markdown Code Comments\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"How to Comment a Markdown File\"), mdx(\"p\", null, \"Markdown doesn't include specific syntax for comments, but there is a workaround using the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://daringfireball.net/projects/markdown/syntax#link\"\n  }, \"reference style links\"), \" syntax. Using this syntax, the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"comments will not be output to the resulting HTML\"), \".\"), mdx(\"p\", null, \"Here are a few examples:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-markdown\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-markdown\"\n  }, \"[]: # (This is a comment)\\n[]: # \\\"And this is a comment\\\"\\n[]: # 'Also this is a comment'\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token url-reference url\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token variable\"\n  }, \"//\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" # \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"(Yet another comment)\")), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token url-reference url\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token variable\"\n  }, \"comment\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" # \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"(Still another comment)\"))))), mdx(\"p\", null, \"Each of these lines works the same way:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"[...]:\"), \" identifies a reference link (that won't be used in the article)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"#\"), \" defines the destination, in this case \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"#\"), \" is the shortest valid value for a URL\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"(...)\"), \", \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"\\\"...\\\"\"), \", and \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"'...'\"), \"define the reference title, which we repurpose to make a comment\")), mdx(\"p\", null, \"While this is the best approach that I'm aware of, it doesn't allow multi-line comments and each comment must appear on it's own line.\"), mdx(\"p\", null, \"I personally prefer to use \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"[//]: #\"), \" since, as a software developer, I tend to associate \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"//\"), \" with comment syntax.\"), mdx(\"h2\", null, \"Adding HTML Comments in Markdown\"), mdx(\"p\", null, \"If you'd like for your comments to show up in the HTML output, a simple modified HTML comment syntax will work:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-markdown\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-markdown\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"<!--- This is an HTML comment in Markdown -->\")))), mdx(\"p\", null, \"Unlike a \\\"normal\\\" HTML comment which opens with \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"<!--\"), \" (two dashes), an HTML comment in Markdown opens with \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"<!---\"), \" (three dashes). Some Markdown parsers support two-dash HTML comments, but the three-dash version is more universally compatible.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/markdown-comments/"},"frontmatter":{"description":null,"tags":["markdown"],"title":"Markdown Code Comments"}}},"pageContext":{"slug":"/markdown-comments/"}},"staticQueryHashes":["3794076007","4068398115","80858887"]}