{"componentChunkName":"component---src-templates-article-tsx","path":"/system-qualities/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2021-10-05T11:22:39.000Z\",\n  \"description\": \"Constraints on how software is engineered\",\n  \"tags\": [\"software-engineering\", \"requirements\"],\n  \"title\": \"System Qualities and Nonfunctional Requirements (NFRs)\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"System Qualities and Nonfunctional Requirements (NFRs)\"), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"system quality\"), \", sometimes known as a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"nonfunctional requirement (NFR)\"), \", is a type of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../requirements/\"\n  }, \"requirement\"), \" that defines constraints on how \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../software-engineering/\"\n  }, \"software is engineered\"), \" to ensure a baseline level of quality. System qualities are often integrated into the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../sdlc/\"\n  }, \"SDLC\"), \" as part of the \\\"definition of done\\\".\"), mdx(\"h2\", null, \"Categories of System Qualities and NFRs\"), mdx(\"p\", null, \"Common categories of system qualities are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Availability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Disaster recovery\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Legal/regulatory compliance\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Maintainability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Observability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Performance\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reliability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Scalability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Security\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Usability\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/system-qualities/"},"frontmatter":{"description":"Constraints on how software is engineered","tags":["software-engineering","requirements"],"title":"System Qualities and Nonfunctional Requirements (NFRs)"}}},"pageContext":{"slug":"/system-qualities/"}},"staticQueryHashes":["1957148337","3794076007","80858887"]}