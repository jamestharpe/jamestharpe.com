{"componentChunkName":"component---src-templates-article-tsx","path":"/actor-model/","result":{"data":{"markdownRemark":{"html":"<h1>Actor Model</h1>\n<p>The <strong>actor model</strong> is a model for computation in which the \"actor\" is the primitive element of system design (in the actor model, \"everything is an actor\"). Each actor embodies processing, storage, and communication for a specific purpose.</p>\n<p>Each actor in a system can:</p>\n<ul>\n<li>Send messages to other actors</li>\n<li>Create additional actors</li>\n<li>Change internal state</li>\n</ul>\n<p>Each actor has an address to which messages can be sent. A single address can represent multiple actors or a single actor can have multiple addresses.</p>\n<p>Messages are delivered at most one time, and the order of delivery is not guaranteed; however, a message can contain an ordered sequence. Additionally, <strong>futures</strong> are actors that represents a computation result, potentially before it is computed, so that computation results can be made available at the time of need.</p>\n<h2>Video: Hewitt Meijer, and Szyperski: The Actor Model (everything you wanted to know)</h2>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/1zVdhDx7Tbs\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>","fields":{"slug":"/actor-model/"},"frontmatter":{"title":"Actor Model","tags":["math","computer-science"]}}},"pageContext":{"slug":"/actor-model/"}},"staticQueryHashes":["2270328656","3794076007","80858887"]}