{"componentChunkName":"component---src-templates-article-tsx","path":"/insert-only-databases/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"date\": \"2021-11-28T09:46:25.000Z\",\n  \"description\": \"A database design approach that requires deletes and updates to be performed as inserts\",\n  \"tags\": [\"databases\", \"distributed-systems\"],\n  \"title\": \"Insert-only Databases\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Insert-only Databases\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Insert-only databases\"), \" are \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../databases/\"\n  }, \"databases\"), \" that are designed so that update and delete operations are performed as inserts, generally through the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../snapshot-pattern/\"\n  }, \"snapshot\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../tombstone-pattern/\"\n  }, \"tombstone\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../swe-design-patterns/\"\n  }, \"design patterns\"), \". This pattern is key to solving challenges related to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../distributed-systems/\"\n  }, \"distributed systems\"), \", including eventual consistency, parallel processing, and event-driven communication.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/insert-only-databases/"},"frontmatter":{"description":"A database design approach that requires deletes and updates to be performed as inserts","tags":["databases","distributed-systems"],"title":"Insert-only Databases"}}},"pageContext":{"slug":"/insert-only-databases/"}},"staticQueryHashes":["3772659826","3794076007","80858887"]}