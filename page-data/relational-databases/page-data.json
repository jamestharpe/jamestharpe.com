{"componentChunkName":"component---src-templates-article-tsx","path":"/relational-databases/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"date\": \"2021-12-17T21:03:25.000Z\",\n  \"description\": \"Databases that organize data into tables and support relationships through distinct keys\",\n  \"tags\": [\"databases\", \"structured-data\"],\n  \"title\": \"Relational Databases\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Relational databases\"), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"relational database\"), \" is a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../databases/\"\n  }, \"database\"), \" that organizes data into one or more tables. A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"table\"), \" is a collection of rows and columns. A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"column\"), \" defines the name, size, format, and type of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../data/\"\n  }, \"data\"), \" stored for that column in each row. A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"row\"), \" is a related set of values that adhere to the constraints of the columns.\"), mdx(\"p\", null, \"Relational databases require that each row be uniquely identifiable by a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"key\"), \" made up of one or more columns. Rows can refer to other rows in the same database by a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"foreign key\"), \" to form relationships that are validated and enforced by the underlying database. The vast majority of relational databases support \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../sql/\"\n  }, \"SQL\"), \" for data selection and manipulation.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/relational-databases/"},"frontmatter":{"description":"Databases that organize data into tables and support relationships through distinct keys","tags":["databases","structured-data"],"title":"Relational Databases"}}},"pageContext":{"slug":"/relational-databases/"}},"staticQueryHashes":["3794076007","4068398115","80858887"]}