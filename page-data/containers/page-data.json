{"componentChunkName":"component---src-templates-article-tsx","path":"/containers/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"date\": \"2021-08-20T16:36:36.000Z\",\n  \"description\": \"Packaging applications with all of their dependencies\",\n  \"tags\": [\"software-engineering\"],\n  \"title\": \"Containers\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Containers\"), mdx(\"p\", null, \"Containers are a way of packaging applications with their dependencies and configuration in a single, runnable package. Containers are similar to virtual machines in that they isolate applications from each other on a shared \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../operating-systems/\"\n  }, \"operating system\"), \" but different in that containers do not provide hardware-level virtualization as virtual machines do.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/containers/"},"frontmatter":{"description":"Packaging applications with all of their dependencies","tags":["software-engineering"],"title":"Containers"}}},"pageContext":{"slug":"/containers/"}},"staticQueryHashes":["3794076007","4068398115","80858887"]}