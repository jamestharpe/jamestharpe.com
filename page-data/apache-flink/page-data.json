{"componentChunkName":"component---src-templates-article-tsx","path":"/apache-flink/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2022-07-12T13:21:01.000Z\",\n  \"description\": \"A distributed processing framework and engine for stateful data computation\",\n  \"tags\": [\"distributed-systems\", \"apache\", \"open-source-software\"],\n  \"title\": \"Apache Flink\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Apache Flink\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Apache Flink\"), \" is an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../open-source-software/\"\n  }, \"open-source software\"), \" engine and framework from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../apache/\"\n  }, \"Apache\"), \" for performing stateful computations on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../data/\"\n  }, \"data\"), \" streams. It supports continuous processing of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"unbounded streams\"), \", which are data streams with a defined start by no defined end, as well as \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"bounded streams\"), \", which have both a defined start and end.\"), mdx(\"h2\", null, \"Apache Flink resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://flink.apache.org/\"\n  }, \"Official Apache Flink website\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/apache/flink\"\n  }, \"Apache Flink open source repository on GitHub\"))));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/apache-flink/"},"frontmatter":{"description":"A distributed processing framework and engine for stateful data computation","tags":["distributed-systems","apache","open-source-software"],"title":"Apache Flink"}}},"pageContext":{"slug":"/apache-flink/"}},"staticQueryHashes":["1957148337","3794076007","80858887"]}