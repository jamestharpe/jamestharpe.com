{"componentChunkName":"component---src-templates-article-tsx","path":"/arduino/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"date\": \"2021-01-18T13:11:11.000Z\",\n  \"description\": \"The open-source electronics platform for interactive projects and prototypes\",\n  \"tags\": [\"open-source-hardware\", \"electrical-engineering\"],\n  \"title\": \"Arduino\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Arduino\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Arduino\"), \" is a set of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../open-source-hardware/\"\n  }, \"ope-source hardware\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../open-source-software/\"\n  }, \"software\"), \" used to build interactive electronics projects. Applications for Arduino are typically written in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../cpp/\"\n  }, \"C++\"), \" in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.arduino.cc/en/software\"\n  }, \"Arduino IDE\"), \" or \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://create.arduino.cc/editor\"\n  }, \"Arduino Web Editor\"), \" (recommended over Arduino IDE); however other options for controlling arduinos exist such as with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://nodered.org/docs/faq/interacting-with-arduino\"\n  }, \"Node-RED\"), \".\"), mdx(\"h2\", null, \"Components of an Arduino Build\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Sensors\"), \" convert physical phenomena into \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"../electrical-engineering/\"\n  }, \"electrical signals\"), \" (e.g. humidity, light, proximity)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Effectors\"), \" convert electrical signals into physical phenomena (e.g. lights, motors, solenoids)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Code\"), \" processes inputs from sensors and controls the outputs to effectors to create desired behaviors\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Wires\"), \" carry \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"../watts-law/\"\n  }, \"electrical power\"), \" and signals between components\")), mdx(\"h2\", null, \"Arduino Resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.arduino.cc/\"\n  }, \"Official Arduino Website\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.arduino.cc/reference/en/\"\n  }, \"Arduino Language Reference\"))));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/arduino/"},"frontmatter":{"description":"The open-source electronics platform for interactive projects and prototypes","tags":["open-source-hardware","electrical-engineering"],"title":"Arduino"}}},"pageContext":{"slug":"/arduino/"}},"staticQueryHashes":["3772659826","3794076007","80858887"]}