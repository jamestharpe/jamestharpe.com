{"componentChunkName":"component---src-templates-article-tsx","path":"/arduino-thermostat/","result":{"data":{"markdownRemark":{"html":"<h1>Arduino Thermostat</h1>\n<p>This <a href=\"../arduino-uno/\">Arduino Uno</a> based thermostat provides an <a href=\"../arduino-lcd-16x2/\">LCD Display</a> of current and target temperature, plus temperature control and measure toggle (fahrenheit/celsius) through toggle switches.</p>\n<p>It works by activating one relay when the temperature is too low, and another relay when the temperature is too high. When building the project, use LEDs in place of the relays for easy testing.</p>\n<h2>Thermostat Parts</h2>\n<table>\n<thead>\n<tr>\n<th>Part</th>\n<th align=\"right\">Quantity</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"../arduino-uno/\">Arduino Uno</a></td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td>Breadboard</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td>16x2 LCD</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td>Potentiometer</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td>Momentary switches</td>\n<td align=\"right\">3</td>\n</tr>\n<tr>\n<td>10k Ω resistors</td>\n<td align=\"right\">3</td>\n</tr>\n<tr>\n<td>5V Relays</td>\n<td align=\"right\">2</td>\n</tr>\n<tr>\n<td>DHT11 temperature &#x26; humidity sensor</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td>Jumper wires</td>\n<td align=\"right\">Several</td>\n</tr>\n</tbody>\n</table>\n<h2>Hardware Build</h2>\n<p>The instructions will be confusing if you do not reference the following wiring diagram!</p>\n<p><img src=\"../img/arduino-thermostat-wiring-diagram.png\" alt=\"wiring diagram\"></p>\n<h3>1. Connect the LCD to the breadboard</h3>\n<p>Note, some of the pin designations may differ between brands.</p>\n<table>\n<thead>\n<tr>\n<th>LCD Pin</th>\n<th>Destination</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">VSS</code></td>\n<td>Breadboard ground rail (<code class=\"language-text\">-</code>)</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">VDD</code></td>\n<td>Breadboard power rail (<code class=\"language-text\">+</code>)</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">VO</code></td>\n<td>Potentiometer wiper (middle pin)</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">RS</code></td>\n<td>Arduino pin <code class=\"language-text\">11</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">RW</code></td>\n<td>Ground rail (<code class=\"language-text\">-</code>)</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">E</code></td>\n<td>Arduino pin <code class=\"language-text\">12</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">D4</code> (sometimes <code class=\"language-text\">DB4</code>)</td>\n<td>Arduino pin <code class=\"language-text\">2</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">D5</code> (sometimes <code class=\"language-text\">DB5</code>)</td>\n<td>Arduino pin <code class=\"language-text\">3</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">D6</code> (sometimes <code class=\"language-text\">DB6</code>)</td>\n<td>Arduino pin <code class=\"language-text\">4</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">D7</code> (sometimes <code class=\"language-text\">DB7</code>)</td>\n<td>Arduino pin <code class=\"language-text\">5</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">A</code> (sometimes <code class=\"language-text\">LED+</code>)</td>\n<td>Breadboard power rail (<code class=\"language-text\">+</code>)</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">K</code> (sometimes <code class=\"language-text\">LED-</code>)</td>\n<td>Breadboard ground rail (<code class=\"language-text\">-</code>)</td>\n</tr>\n</tbody>\n</table>\n<h3>2. Connect the potentiometer</h3>\n<p>Seat the potentiometer in the breadboard. Connect outer pins of the potentiometer to the power and ground rails of the breadboard. The wiper pin (in the middle) will connect to the LED <code class=\"language-text\">VO</code> pin.</p>\n<h3>3. Connect the momentary switches</h3>\n<p>Seat each momentary switch in the breadboard, then connect one pin of each switch to the breadboard power rail (<code class=\"language-text\">+</code>) and the other to the breadboard ground rail (<code class=\"language-text\">-</code>) with a 10K Ω resistor. Finally, connect each ground pin to the Arduino according to its purpose:</p>\n<table>\n<thead>\n<tr>\n<th>Purpose</th>\n<th>Arduino Pin</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Temperature up</td>\n<td><code class=\"language-text\">7</code></td>\n</tr>\n<tr>\n<td>Toggle celsius/fahrenheit</td>\n<td><code class=\"language-text\">8</code></td>\n</tr>\n<tr>\n<td>Temperature down</td>\n<td><code class=\"language-text\">9</code></td>\n</tr>\n</tbody>\n</table>\n<h3>4. Connect the Temperature &#x26; Humidity Sensor</h3>\n<p>Seat the temperature &#x26; humidity sensor in the breadboard, then connect the ground and power pins to the ground and power breadboard rails, respectively. Connect the signal pin to the Arduino <code class=\"language-text\">A0</code> pin.</p>\n<h3>5. Connect the Relays</h3>\n<p>Connect the ground and power pins of each relay to the ground and power breadboard rails, respectively. Finally, connect each relay's signal pin to the Arduino according to its purpose:</p>\n<table>\n<thead>\n<tr>\n<th>Purpose</th>\n<th>Arduino Pin</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Heating</td>\n<td><code class=\"language-text\">13</code></td>\n</tr>\n<tr>\n<td>Cooling</td>\n<td><code class=\"language-text\">10</code></td>\n</tr>\n</tbody>\n</table>\n<h3>6. Check connections</h3>\n<p>Ensure each connection is secure. The final build should look something like this (note: LEDs used as a stand-in for the relays).</p>\n<p><img src=\"../img/arduino-thermostat_1073x1072.jpg\" alt=\"Picture of an Arduino powered thermostat\"></p>\n<h2>Write the Software</h2>\n<h3>1. Import the DHT library</h3>\n<p>The DHT library is not available by default. To install it, navigate in the Arduino IDE to <strong>Tools</strong> ➡ <strong>Manage Libraries...</strong> then search for \"DHT sensor library\" and install it.</p>\n<h3>2. Write (or copy &#x26; paste) the code</h3>\n<p>Here is the full, annotated code for the thermostat:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// written by Dylon Jamna, modified by Micah Beeler, further modified by James Tharpe</span>\n<span class=\"token comment\">// Original code: https://pastebin.com/HKbJjKxE</span>\n<span class=\"token comment\">// Original instructions: https://www.instructables.com/Arduino-Thermostat/</span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;LiquidCrystal.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;DHT.h></span></span>\n\n<span class=\"token comment\">// Sensor Configuration: Should map to temperature &amp; humidity</span>\n<span class=\"token comment\">// sensor connections to the Arduino</span>\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span>\n\tDHT_PIN <span class=\"token operator\">=</span> A0<span class=\"token punctuation\">,</span>\n\tDHT_TYPE <span class=\"token operator\">=</span> DHT11<span class=\"token punctuation\">;</span>\n\nDHT <span class=\"token function\">sensor</span><span class=\"token punctuation\">(</span>DHT_PIN<span class=\"token punctuation\">,</span> DHT_TYPE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// LCD Configuration: Should map to temperature &amp; humidity</span>\n<span class=\"token comment\">// sensor connections to the Arduino</span>\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span>\n\tLCD_PIN_RS <span class=\"token operator\">=</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span>\n\tLCD_PIN_EN <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span>\n\tLCD_PIN_D4 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n\tLCD_PIN_D5 <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n\tLCD_PIN_D6 <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n\tLCD_PIN_D7 <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\nLiquidCrystal <span class=\"token function\">lcd</span><span class=\"token punctuation\">(</span>\n\tLCD_PIN_RS<span class=\"token punctuation\">,</span>\n\tLCD_PIN_EN<span class=\"token punctuation\">,</span>\n\tLCD_PIN_D4<span class=\"token punctuation\">,</span>\n\tLCD_PIN_D5<span class=\"token punctuation\">,</span>\n\tLCD_PIN_D6<span class=\"token punctuation\">,</span>\n\tLCD_PIN_D7<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Button configuration</span>\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span>\n\tDECREMENT_BTN_PIN <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span>\n\tTOGGLE_BTN_PIN <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n\tINCREMENT_BTN_PIN <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// \"Heater\" and \"cooler\" configuration</span>\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> \n\tHEATER_PIN <span class=\"token operator\">=</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span>\n\tCOOLER_PIN <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Controls</span>\n<span class=\"token keyword\">bool</span> useFahrenheit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> targetF <span class=\"token operator\">=</span> <span class=\"token number\">72</span><span class=\"token punctuation\">,</span> targetC <span class=\"token operator\">=</span> <span class=\"token number\">22</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Serial (for logging)</span>\n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span> <span class=\"token punctuation\">(</span><span class=\"token number\">9600</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setup()\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Sensor</span>\n  sensor<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\tsensor initialized\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// LCD</span>\n  lcd<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  lcd<span class=\"token punctuation\">.</span><span class=\"token function\">setCursor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  lcd<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\tLCD initialized\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Buttons</span>\n  <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>INCREMENT_BTN_PIN<span class=\"token punctuation\">,</span> INPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>DECREMENT_BTN_PIN<span class=\"token punctuation\">,</span> INPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>TOGGLE_BTN_PIN<span class=\"token punctuation\">,</span> INPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\tButtons initialized\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token comment\">// Temperature Controllers</span>\n  <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>HEATER_PIN<span class=\"token punctuation\">,</span> OUTPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>COOLER_PIN<span class=\"token punctuation\">,</span> OUTPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setup() DONE\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loop()\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Read Button State</span>\n  <span class=\"token keyword\">bool</span> incrementTarget <span class=\"token operator\">=</span> <span class=\"token function\">digitalRead</span><span class=\"token punctuation\">(</span>INCREMENT_BTN_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">bool</span> decrementTarget <span class=\"token operator\">=</span> <span class=\"token function\">digitalRead</span><span class=\"token punctuation\">(</span>DECREMENT_BTN_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">bool</span> toggle <span class=\"token operator\">=</span> <span class=\"token function\">digitalRead</span><span class=\"token punctuation\">(</span>TOGGLE_BTN_PIN<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> HIGH<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">bool</span> wait <span class=\"token operator\">=</span> incrementTarget <span class=\"token operator\">||</span> decrementTarget <span class=\"token operator\">||</span> toggle<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Configure</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>toggle<span class=\"token punctuation\">)</span> useFahrenheit <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>useFahrenheit<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>incrementTarget<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> targetF<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> targetC<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>decrementTarget<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> targetF<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span> targetC<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> symbol <span class=\"token operator\">=</span> useFahrenheit <span class=\"token operator\">?</span> <span class=\"token string\">'F'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> target <span class=\"token operator\">=</span> useFahrenheit <span class=\"token operator\">?</span> targetF <span class=\"token operator\">:</span> targetC<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Read Sensor Data</span>\n  <span class=\"token keyword\">float</span> temperature <span class=\"token operator\">=</span> sensor<span class=\"token punctuation\">.</span><span class=\"token function\">readTemperature</span><span class=\"token punctuation\">(</span>useFahrenheit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">float</span> humidity <span class=\"token operator\">=</span> sensor<span class=\"token punctuation\">.</span><span class=\"token function\">readHumidity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>\n\t\t<span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>temperature<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"°\"</span> <span class=\"token operator\">+</span> symbol <span class=\"token operator\">+</span>\n\t\t<span class=\"token string\">\", Relative Humidity \"</span> <span class=\"token operator\">+</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>humidity<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>\n\t\t<span class=\"token string\">\"% \\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token comment\">// Write out to LCD</span>\n  <span class=\"token function\">lcdWrite</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Temp:   \"</span> <span class=\"token operator\">+</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>temperature<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> symbol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">lcdWrite</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Target: \"</span> <span class=\"token operator\">+</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\".00\"</span> <span class=\"token operator\">+</span> symbol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Activate Temperature Control</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token function\">round</span><span class=\"token punctuation\">(</span>temperature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>HEATER_PIN<span class=\"token punctuation\">,</span> HIGH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">else</span> <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>HEATER_PIN<span class=\"token punctuation\">,</span> LOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token function\">round</span><span class=\"token punctuation\">(</span>temperature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>COOLER_PIN<span class=\"token punctuation\">,</span> HIGH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">else</span> <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>COOLER_PIN<span class=\"token punctuation\">,</span> LOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Pause to allow finger to lift from button(s)</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>wait<span class=\"token punctuation\">)</span> <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Utility to simplify writing to LCD</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">lcdWrite</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">bool</span> line<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> String<span class=\"token operator\">&amp;</span> text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  lcd<span class=\"token punctuation\">.</span><span class=\"token function\">setCursor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  lcd<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Connect the Arduino to you computer and click the <strong>Upload</strong> button to deploye the code to the Arduino.</p>\n<h2>3. Test it out!</h2>\n<p>You should be able to view the current temperature, adjust the target temperature up and down, switch between celsius and fahrenheit, adjust the brightness of the LED, and see the heating and cooling functions come on based on the difference between the current and target temperatures.</p>\n<p>Here's a video of the thermostat in action:</p>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/IbFVXAm5U0U\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<h2>Credit</h2>\n<p>This project is adapted from the <a href=\"https://www.instructables.com/Arduino-Thermostat/\">Arduino Thermostat by Micah Beeler</a>.</p>","fields":{"slug":"/arduino-thermostat/"},"frontmatter":{"title":"Arduino Thermostat","tags":["arduino-uno","arduino-lcd-16x2"]}}},"pageContext":{"slug":"/arduino-thermostat/"}},"staticQueryHashes":["2270328656","3794076007","80858887"]}