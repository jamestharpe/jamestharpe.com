{"componentChunkName":"component---src-templates-article-tsx","path":"/ml-semisupervised/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"date\": \"2022-11-25T20:04:20.000Z\",\n  \"description\": \"Machine learning that uses partially labeled input as training data\",\n  \"tags\": [\"ml-types\", \"ml-supervised\", \"ml-unsupervised\"],\n  \"title\": \"Semisupervised Learning\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Semisupervised learning\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Semisupervised learning\"), \" is a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../ml-types/\"\n  }, \"type\"), \" of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../machine-learning/\"\n  }, \"machine learning\"), \" that combines \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../ml-supervised/\"\n  }, \"supervised\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../ml-unsupervised/\"\n  }, \"unsupervised\"), \" techniques. For example, a photo hosting service may use unsupervised learning to recognize an individual present in multiple photographs (using clustering), then prompt the user for that individuals name to apply the label (the person's name) to the cluster (the set of photos in which the person appears).\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/ml-semisupervised/"},"frontmatter":{"description":"Machine learning that uses partially labeled input as training data","tags":["ml-types","ml-supervised","ml-unsupervised"],"title":"Semisupervised Learning"}}},"pageContext":{"slug":"/ml-semisupervised/"}},"staticQueryHashes":["3772659826","3794076007","80858887"]}