{"componentChunkName":"component---src-templates-article-tsx","path":"/structured-data/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2022-05-19T18:30:53.000Z\",\n  \"description\": \"Data that strictly adheres to a schema\",\n  \"tags\": [\"data\"],\n  \"title\": \"Structured Data\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Structured data\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Structured data\"), \" are \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../data/\"\n  }, \"data\"), \" that strictly adhere to a schema to define the fields, types, and relationships that make up the entities that make up the data.\"), mdx(\"p\", null, \"Structured data most often refers to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../relational-databases/\"\n  }, \"relational data\"), \" stored in a tabular format, though this is not always the case\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/structured-data/"},"frontmatter":{"description":"Data that strictly adheres to a schema","tags":["data"],"title":"Structured Data"}}},"pageContext":{"slug":"/structured-data/"}},"staticQueryHashes":["1957148337","3794076007","80858887"]}