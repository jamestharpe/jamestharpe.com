<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[James's Knowledge Graph]]></title><description><![CDATA[This website captures knowledge so I can refer to it later.]]></description><link>https://www.jamestharpe.com</link><generator>GatsbyJS</generator><lastBuildDate>Thu, 26 Nov 2020 17:53:06 GMT</lastBuildDate><item><title><![CDATA[Atomic Habits by James Clear]]></title><description><![CDATA[Atomic Habits by James Clear Atomic Habits argues that small, daily improvements culminate in huge long-term payoffs. Good financial…]]></description><link>https://www.jamestharpe.com/book-atomic-habits/</link><guid isPermaLink="false">https://www.jamestharpe.com/book-atomic-habits/</guid><pubDate>Tue, 24 Nov 2020 21:30:11 GMT</pubDate><content:encoded>&lt;h1&gt;Atomic Habits by &lt;a href=&quot;https://twitter.com/jamesclear&quot;&gt;James Clear&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Atomic Habits&lt;/strong&gt; argues that small, daily improvements culminate in huge long-term payoffs. Good financial, dietary, and practice habits won&apos;t pay off immediately, but will &lt;em&gt;eventually&lt;/em&gt; be reflected in your net worth, weight, and skills.&lt;/p&gt;
&lt;p&gt;Incremental changes often require patience. Clear uses the example of melting an ice cube frozen at 26°F by heating it to 31°F - the work of heating the ice cube wasn&apos;t wasted, it&apos;s being stored. The ice cube will suddenly start melting as it passes 32°F. New habits can build up in the same way; exercising for a day, a week, or a month, might not mean hitting your goal weight right away, but once you do hit your goal wait you can maintain it indefinitely if you&apos;ve built the right habits.&lt;/p&gt;
&lt;h2&gt;Key Lessons from Atomic Habits&lt;/h2&gt;
&lt;h3&gt;Changes in Habits are Changes in Identity&lt;/h3&gt;
&lt;p&gt;To improve yourself requires changes in beliefs, including beliefs about who you are. Everyone makes mistakes, falters, and indulges in bad habits - the goal is to &quot;win&quot; most of the time by avoiding, and eventually breaking, bad habits and building good ones &lt;em&gt;most of the time&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Clear lays out a two-step process for reshaping your identity:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Decide the type of person you want to be&lt;/li&gt;
&lt;li&gt;Prove you are that person with small wins&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Goals can be a good place to start. If you have the goal of writing a book, ask &quot;who is the type of person who could write a book?&quot; and allow the answer to shift your focus from the achieving the goal of writing a book, to forming the habits of a writer.&lt;/p&gt;
&lt;h3&gt;Steps to Build Good Habits&lt;/h3&gt;
&lt;p&gt;Habits are acted out in four steps: Cue, craving, response, reward. The cue initiates the habit, which causes a craving. The craving causes the response, which is to seek out the reward and thus satisfies the habit for the time being.&lt;/p&gt;
&lt;p&gt;Clear lays out four steps to build new habits that align with how habits are acted out to accelerate:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make it obvious&lt;/li&gt;
&lt;li&gt;Make it attractive&lt;/li&gt;
&lt;li&gt;Make it easy&lt;/li&gt;
&lt;li&gt;Make it satisfying&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;Techniques to Make Habits more Obvious&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Point-and-call:&lt;/strong&gt; As you perform a habit, identify it and name it aloud. This brings awareness to your actions and motivations, both good and bad. Clear suggests using a &lt;a href=&quot;https://jamesclear.com/habits-scorecard&quot;&gt;habit scorecard&lt;/a&gt; as a starting point for this practice.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Habit stacking:&lt;/strong&gt; As you perform a habit that&apos;s already well established, use it as a reminder to perform or encourage the new habit you&apos;re trying to build. For example: Use your lunch routine to trigger a meditation habit, or use your bed-making habit to encourage your reading habit by placing a book on your pillow to read that evening.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Manage environmental cues:&lt;/strong&gt; It&apos;s easy to avoid bad habits, like drinking and smoking, if you don&apos;t have the required materials (alcohol and cigarettes). Conversely, it&apos;s easier to build good habits, like reading and exercise, if you have the required materials (books and weights) and they&apos;re where you can see them.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;One space, one use:&lt;/strong&gt; Create separate spaces for things like work, study, eating, exercise, etc. This creates divisions that help maintain focus and set boundaries.&lt;/p&gt;
&lt;h4&gt;Techniques to Make Habits More (or Less) Attractive&lt;/h4&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;h4&gt;Techniques to Make Habits Easier (or Harder)&lt;/h4&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;h4&gt;Techniques to Make Habits More (or Less) Satisfying&lt;/h4&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;h3&gt;We are Products of Our Environment&lt;/h3&gt;
&lt;p&gt;Though we might sometimes overpower temptation, we&apos;re ultimately a product of our environment. It is therefore important to cut bad habits off from the source. &lt;em&gt;Get rid of bad habit triggers, make your good habit triggers obvious.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Video - Atomic Habits: How to Get 1% Better Every Day&lt;/h2&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/U_nzqnXWvSo&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2&gt;Additional Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jamesclear.com/atomic-habits&quot;&gt;Atomic Habits, Official Website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Physics]]></title><description><![CDATA[Fundamental Terms of Physics Energy is the ability to do work. Work is the energy transferred to an object that causes a displacement. A…]]></description><link>https://www.jamestharpe.com/physics/</link><guid isPermaLink="false">https://www.jamestharpe.com/physics/</guid><pubDate>Tue, 24 Nov 2020 16:52:46 GMT</pubDate><content:encoded>&lt;h1&gt;Fundamental Terms of Physics&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Energy&lt;/strong&gt; is the ability to do work. &lt;strong&gt;Work&lt;/strong&gt; is the energy transferred to an object that causes a displacement. A &lt;strong&gt;displacement&lt;/strong&gt; is the measure of the distance moved in a specific direction, or the shortest distance from an initial to a final position.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../img/distance-vs-displacement.svg&quot; alt=&quot;Distance vs. Displacement&quot;&gt;&lt;/p&gt;
&lt;p&gt;Work is most commonly measured in joules (&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;J&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;J&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.09618em;&quot;&gt;J&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;). One &lt;strong&gt;joule&lt;/strong&gt; is equal to the energy required for one newton (&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;N&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10903em;&quot;&gt;N&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;) to perform a displacement of one meter (&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;m&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.43056em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;m&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;), or &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;J&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;J=Nm&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.09618em;&quot;&gt;J&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10903em;&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;m&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Newtons are a measurement of force. One &lt;strong&gt;newton&lt;/strong&gt; is the force required to accelerate one kilogram (&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;kg&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8888799999999999em;vertical-align:-0.19444em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.03588em;&quot;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;) one meter per second squared, or &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;/mrow&gt;&lt;msup&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;N = \frac{kg*m}{s^2}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10903em;&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.277216em;vertical-align:-0.345em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.9322159999999999em;&quot;&gt;&lt;span style=&quot;top:-2.6550000000000002em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.7463142857142857em;&quot;&gt;&lt;span style=&quot;top:-2.786em;margin-right:0.07142857142857144em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.5em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size3 size1 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.446108em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.03588em;&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;mbin mtight&quot;&gt;∗&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;m&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.345em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;h2&gt;Video: How Much Energy is 1 Joule?&lt;/h2&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/_qEBElHoYUA&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2&gt;Physics Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://physics.info/&quot;&gt;The Physics Hypertextbook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Electricity]]></title><description><![CDATA[Electricity Electricity the form of energy (the ability to do work) that results from charged particles (electrons, protons). Measures of…]]></description><link>https://www.jamestharpe.com/electricity/</link><guid isPermaLink="false">https://www.jamestharpe.com/electricity/</guid><pubDate>Tue, 24 Nov 2020 16:40:46 GMT</pubDate><content:encoded>&lt;h1&gt;Electricity&lt;/h1&gt;
&lt;p&gt;Electricity the form of energy (the ability to do work) that results from charged particles (electrons, protons).&lt;/p&gt;
&lt;h2&gt;Measures of Electricity&lt;/h2&gt;
&lt;h3&gt;Stored Electricity: Voltage and Volts&lt;/h3&gt;
&lt;p&gt;Stored electricity is called voltage and is measured in volts. More precisely, &lt;strong&gt;voltage&lt;/strong&gt; is the difference in electric potential energy between two points.&lt;/p&gt;
&lt;p&gt;One &lt;strong&gt;volt&lt;/strong&gt; is equal to 1 joule (&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;J&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;J&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.09618em;&quot;&gt;J&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, see &lt;a href=&quot;../physics/&quot;&gt;physics&lt;/a&gt;) per 1 coulomb (&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;C&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07153em;&quot;&gt;C&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;), or &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mi&gt;J&lt;/mi&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;V = \frac{J}{C}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.22222em;&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.217331em;vertical-align:-0.345em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.872331em;&quot;&gt;&lt;span style=&quot;top:-2.6550000000000002em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.07153em;&quot;&gt;C&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.394em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.09618em;&quot;&gt;J&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.345em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;. A &lt;strong&gt;coulomb&lt;/strong&gt; is a quantity of electrical charge, approximately equal to &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;6.2415090744&lt;/mn&gt;&lt;mo&gt;⋅&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;msup&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mn&gt;18&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;6.2415090744 \cdot 10^{18}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.64444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;⋅&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141079999999999em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141079999999999em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; elementary charges (i.e. electrons).&lt;/p&gt;
&lt;p&gt;Another way to put it is, a volt is the amount of electricity required to accelerate 1kg by 1 meter per second squared (a joule) for 1 second (resulting in a displacement of &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;1m&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.64444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;m&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;), divided by the quantity of electrical charges (coulombs). In other words, a volt is &quot;how much work can be done per coulomb&quot;.&lt;/p&gt;
&lt;h3&gt;Flowing Electricity: Current and Amperes (amps)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Current&lt;/strong&gt; (&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;I&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;) is the &quot;flow&quot; of electricity, measured in amperes or &quot;amps&quot; (&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;A&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;). One amp is equal to one coulomb (&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;C&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07153em;&quot;&gt;C&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;) passing a given point in a circuit over one second (&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;s&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.43056em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;), or &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;A = \frac{C}{s}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.217331em;vertical-align:-0.345em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.872331em;&quot;&gt;&lt;span style=&quot;top:-2.6550000000000002em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.394em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.07153em;&quot;&gt;C&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.345em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;. &lt;/p&gt;
&lt;p&gt;Solving for &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;C&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07153em;&quot;&gt;C&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, we can get a mathematical definition of coulomb: &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;C=As&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07153em;&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Watt's Law (Power Law)]]></title><description><![CDATA[Watt's Law Watt's Law, sometimes called the Power Law, describes the relationship between power (), current (), and voltage ():  Given tha…]]></description><link>https://www.jamestharpe.com/watts-law/</link><guid isPermaLink="false">https://www.jamestharpe.com/watts-law/</guid><pubDate>Tue, 24 Nov 2020 16:39:46 GMT</pubDate><content:encoded>&lt;h1&gt;Watt&apos;s Law&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Watt&apos;s Law&lt;/strong&gt;, sometimes called the &lt;strong&gt;Power Law&lt;/strong&gt;, describes the relationship between power (&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;P&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;P&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;), current (&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;I&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;), and voltage (&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;V&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.22222em;&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;):&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;P=IV&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.22222em;&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Given tha values for any two variables, we solve for the third, so that:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;V=\frac{P}{I}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.22222em;&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.217331em;vertical-align:-0.345em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.872331em;&quot;&gt;&lt;span style=&quot;top:-2.6550000000000002em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.394em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.13889em;&quot;&gt;P&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.345em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;And:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;I=\frac{P}{V}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.217331em;vertical-align:-0.345em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.872331em;&quot;&gt;&lt;span style=&quot;top:-2.6550000000000002em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.22222em;&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.394em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.13889em;&quot;&gt;P&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.345em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;Power and Watts&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Power&lt;/strong&gt; is measured in watts. One &lt;strong&gt;watt&lt;/strong&gt; (&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;W&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;W&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;) is equal to one joule (&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;J&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;J&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.09618em;&quot;&gt;J&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;) per second (&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;s&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.43056em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;), or &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;W&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mi&gt;J&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;W = \frac{J}{s}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;W&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.217331em;vertical-align:-0.345em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.872331em;&quot;&gt;&lt;span style=&quot;top:-2.6550000000000002em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.394em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.09618em;&quot;&gt;J&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.345em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;. Another way to put it is, a watt is the amount of electricity required to accelerate 1kg by 1 meter per second squared (a joule) over 1 second. In other words, a watt is &quot;how much work can be done per second&quot;.&lt;/p&gt;
&lt;h3&gt;Video: Power, Work, and Energy&lt;/h3&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/RpbxIG5HTf4&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;blockquote&gt;
&lt;p&gt;Full course on Khan Academy: &lt;a href=&quot;https://www.khanacademy.org/science/high-school-physics/work-and-energy-2/power-2/v/power&quot;&gt;Power&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;</content:encoded></item><item><title><![CDATA[Linux]]></title><description><![CDATA[Linux The Linux File System  - Binaries The  folder contains the basic set of binaries available to every user. It contains the binaries for…]]></description><link>https://www.jamestharpe.com/linux/</link><guid isPermaLink="false">https://www.jamestharpe.com/linux/</guid><pubDate>Tue, 24 Nov 2020 15:33:11 GMT</pubDate><content:encoded>&lt;h1&gt;Linux&lt;/h1&gt;
&lt;h2&gt;The Linux File System&lt;/h2&gt;
&lt;h3&gt;&lt;code class=&quot;language-text&quot;&gt;/bin&lt;/code&gt; - Binaries&lt;/h3&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;/bin&lt;/code&gt; folder contains the basic set of binaries available to every user. It contains the binaries for basic commands such as &lt;code class=&quot;language-text&quot;&gt;ls&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;cat&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;chmod&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;mv&lt;/code&gt;, and more.&lt;/p&gt;
&lt;h3&gt;&lt;code class=&quot;language-text&quot;&gt;/boot&lt;/code&gt; - Bootloaders&lt;/h3&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;/boot&lt;/code&gt; folder contains the files necessary to load the operating system when the computer is turned on.&lt;/p&gt;
&lt;h3&gt;&lt;code class=&quot;language-text&quot;&gt;/dev&lt;/code&gt; - Devices&lt;/h3&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;/dev&lt;/code&gt; folder contains files that represent devices. In Unix-like systems like Linux, disks and just about everything else are represented as files. &lt;/p&gt;
&lt;p&gt;For example: &lt;code class=&quot;language-text&quot;&gt;sda&lt;/code&gt; is a disk. Originally &lt;code class=&quot;language-text&quot;&gt;sd&lt;/code&gt; stood for &lt;code class=&quot;language-text&quot;&gt;SCSI device&lt;/code&gt; but became a catch-all for any &lt;a href=&quot;https://en.wikipedia.org/wiki/Block_(data_storage)%20device&quot;&gt;block storage&lt;/a&gt;. The letter that follows &lt;code class=&quot;language-text&quot;&gt;sd&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;a&lt;/code&gt; in this case, represents the order in which the device was found.&lt;/p&gt;
&lt;h3&gt;&lt;code class=&quot;language-text&quot;&gt;/etc&lt;/code&gt; - Etcetera (and so on)&lt;/h3&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;/etc&lt;/code&gt; folder contains system-wide (as opposed to user-specific) configuration files.&lt;/p&gt;
&lt;h3&gt;&lt;code class=&quot;language-text&quot;&gt;/home&lt;/code&gt; - Home Folders&lt;/h3&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;/home&lt;/code&gt; directory contains home directories for users other than &lt;code class=&quot;language-text&quot;&gt;root&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;code class=&quot;language-text&quot;&gt;/media&lt;/code&gt; - Media&lt;/h3&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;/media&lt;/code&gt; folder is where removable disks (e.g. CDs, thumb drives) are automatically mounted.&lt;/p&gt;
&lt;h3&gt;&lt;code class=&quot;language-text&quot;&gt;/mnt&lt;/code&gt; - Mount&lt;/h3&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;/media&lt;/code&gt; folder is where removable disks (e.g. CDs, thumb drives) are manually mounted, very similar to the &lt;code class=&quot;language-text&quot;&gt;/media&lt;/code&gt; folder.&lt;/p&gt;
&lt;h3&gt;&lt;code class=&quot;language-text&quot;&gt;/opt&lt;/code&gt; - Optional&lt;/h3&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;/opt&lt;/code&gt; folder is intended to hold manually installed 3rd-party software.&lt;/p&gt;
&lt;h3&gt;&lt;code class=&quot;language-text&quot;&gt;/proc&lt;/code&gt; - Processes&lt;/h3&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;/proc&lt;/code&gt; folder contains pseudo files that contain information about processes and resources. All running processes have a folder under &lt;code class=&quot;language-text&quot;&gt;/proc&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;code class=&quot;language-text&quot;&gt;/root&lt;/code&gt; - Root (user) Home&lt;/h3&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;/root&lt;/code&gt; folder is the &lt;code class=&quot;language-text&quot;&gt;root&lt;/code&gt; user&apos;s home directory&lt;/p&gt;
&lt;h3&gt;&lt;code class=&quot;language-text&quot;&gt;/run&lt;/code&gt; - Run (temporary) Files&lt;/h3&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;/run&lt;/code&gt; directory contains temporary files, all of which actually reside in memory. The contents of this directory are deleted upon reboot (because memory is cleared).&lt;/p&gt;
&lt;h3&gt;&lt;code class=&quot;language-text&quot;&gt;/sbin&lt;/code&gt; - System (or Super User) Binaries&lt;/h3&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;/sbin&lt;/code&gt; folder contains binaries used for system administration tasks including disk and network management. It contains the binaries for commands such as &lt;code class=&quot;language-text&quot;&gt;chkconfig&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;ifcondfig&lt;/code&gt;, and &lt;code class=&quot;language-text&quot;&gt;fsck&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;code class=&quot;language-text&quot;&gt;/srv&lt;/code&gt; - Service (or Server) Data&lt;/h3&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;/srv&lt;/code&gt; folder stores service/server data to be accessed by external users, for example via a web server.&lt;/p&gt;
&lt;h3&gt;&lt;code class=&quot;language-text&quot;&gt;/sys&lt;/code&gt; - System Temporary Files&lt;/h3&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;/sys&lt;/code&gt; folder contains temporary files used by the system, all of which are stored in memory (very similar to the &lt;code class=&quot;language-text&quot;&gt;/run&lt;/code&gt; folder). The contents of this directory are deleted upon reboot (because memory is cleared).&lt;/p&gt;
&lt;h3&gt;&lt;code class=&quot;language-text&quot;&gt;/tmp&lt;/code&gt; - Temporary Files&lt;/h3&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;/tmp&lt;/code&gt; folder contains temporary files. Unlike the &lt;code class=&quot;language-text&quot;&gt;/run&lt;/code&gt; folder, files stored in &lt;code class=&quot;language-text&quot;&gt;/tmp&lt;/code&gt; are less restricted and may be accessed by other users. Generally speaking, developers should prever to use &lt;code class=&quot;language-text&quot;&gt;/run&lt;/code&gt; over &lt;code class=&quot;language-text&quot;&gt;/tmp&lt;/code&gt; for security.&lt;/p&gt;
&lt;h3&gt;&lt;code class=&quot;language-text&quot;&gt;/usr&lt;/code&gt; - Users&lt;/h3&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;/usr&lt;/code&gt; folder contains &quot;non essential&quot; apps and files used by users (as opposed to the system).&lt;/p&gt;
&lt;h3&gt;&lt;code class=&quot;language-text&quot;&gt;/var&lt;/code&gt; - Variable&lt;/h3&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;/var&lt;/code&gt; folder contains files that are expected to grow over time (e.g. logs and caches).&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Ender 3 Pro 3D Printer]]></title><description><![CDATA[Ender 3 Pro 3D Printer Notes The Ender 3 Pro 3D Printer is a great first 3D printer. Filament size: 1.75mm]]></description><link>https://www.jamestharpe.com/3d-printer-ender-3-pro/</link><guid isPermaLink="false">https://www.jamestharpe.com/3d-printer-ender-3-pro/</guid><pubDate>Tue, 24 Nov 2020 13:13:11 GMT</pubDate><content:encoded>&lt;h1&gt;Ender 3 Pro 3D Printer Notes&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://www.creality.com/goods-detail/ender-3-pro-3d-printer&quot;&gt;The Ender 3 Pro 3D Printer&lt;/a&gt; is a great first 3D printer.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Filament size: 1.75mm&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Bullet Journaling Tips & Advice]]></title><description><![CDATA[Bullet Journaling Tips Start new custom collections with a mission statement to stay focused on what's important. Five whys is a great…]]></description><link>https://www.jamestharpe.com/bullet-journaling-tips/</link><guid isPermaLink="false">https://www.jamestharpe.com/bullet-journaling-tips/</guid><pubDate>Mon, 23 Nov 2020 20:38:11 GMT</pubDate><content:encoded>&lt;h1&gt;Bullet Journaling Tips&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Start new custom collections with a mission statement&lt;/strong&gt; to stay focused on what&apos;s important. Five whys is a great exercise to help get to the root of what &lt;em&gt;really&lt;/em&gt; needs to be accomplished. It also helps avoid &quot;junk drawer&quot; collections that ultimately serve no purpose.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Don&apos;t depend on colors or fancy artwork&lt;/strong&gt; lest your system fall apart when you can&apos;t find the right color pens or left your stencils in the office.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&quot;Word wrap&quot; at two blocks&lt;/strong&gt; (when using a dot journal) to prevent words running off of the page and to provide a little extra margin for later addendum/correction.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Write-out your schedule each day&lt;/strong&gt; to see it at-a-glance.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Keep a &quot;family&quot; collection&lt;/strong&gt; with a list of medical conditions (e.g. allergies) for each family member, for use in emergencies.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create a list of key accomplishments at the end of each month&lt;/strong&gt; as part of the migration process. This is particularly helpful when preparing for performance reviews at work.&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Bullet Journaling]]></title><description><![CDATA[Bullet Journaling Bullet Journaling is a modular set of practices for personal organization. These practices organize schedules, reminders…]]></description><link>https://www.jamestharpe.com/bullet-journaling/</link><guid isPermaLink="false">https://www.jamestharpe.com/bullet-journaling/</guid><pubDate>Mon, 23 Nov 2020 19:00:11 GMT</pubDate><content:encoded>&lt;h1&gt;Bullet Journaling&lt;/h1&gt;
&lt;p&gt;Bullet Journaling is a modular set of practices for personal organization. These practices organize schedules, reminders, task lists, ideas, and other organizational artifacts into a single notebook. Though journals are typically handwritten, digital journals can also benefit from the organizational methods and practices of bullet journaling.&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/fm15cmYU0IM&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2&gt;Structure of a Bullet Journal&lt;/h2&gt;
&lt;p&gt;A bullet journal is made up of collections. A &lt;strong&gt;collection&lt;/strong&gt; is a set of closely related information. A bullet journal is made up of four core collections; however, more collections can be added based on the individual journaler&apos;s needs.&lt;/p&gt;
&lt;h3&gt;Core Bullet Journal Collections&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Index.&lt;/strong&gt; A chronologically ordered list of all the collections in the journal, except the daily log collections.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Future Log.&lt;/strong&gt; A calendar of events and tasks that will occur outside the current month.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monthly Log.&lt;/strong&gt; A specialized collection to organize the events and tasks of a particular month. Minimally, it consists of the&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Daily Log.&lt;/strong&gt; A place to rapid-log tasks, events, and notes as they occur throughout the day.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Custom Collections&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Custom collections&lt;/strong&gt; are created to meet some specific need. For example, to plan a project or to track a fitness routine.&lt;/p&gt;
&lt;h2&gt;Core Bullet Journal Practices&lt;/h2&gt;
&lt;p&gt;The Bullet Journal website contains a &lt;a href=&quot;https://bulletjournal.com/pages/learn&quot;&gt;complete introduction to core bullet journaling practices&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Rapid Logging&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Rapid logging&lt;/strong&gt; is the practice of quickly jotting-down notes in a bulleted-list format, typically within the daily log. Specialized bullets and signifiers are used to distinguish between different types of notes. Types of notes are typically tasks, events, or information; however the journaler may choose to invent their own types of notes as well.&lt;/p&gt;
&lt;h3&gt;Common Bullets&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Bullet&lt;/th&gt;
&lt;th&gt;Term&lt;/th&gt;
&lt;th&gt;Definition&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;•&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Task&lt;/td&gt;
&lt;td&gt;Something that needs to be completed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;o&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Event&lt;/td&gt;
&lt;td&gt;Something that happened or is scheduled to happen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;—&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Information&lt;/td&gt;
&lt;td&gt;Something worth remembering. Facts, ideas, observations.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;Bullet States&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Notation&lt;/th&gt;
&lt;th&gt;Term&lt;/th&gt;
&lt;th&gt;Definition&lt;/th&gt;
&lt;th&gt;Applies to&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;✖&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Done&lt;/td&gt;
&lt;td&gt;Completed task&lt;/td&gt;
&lt;td&gt;Tasks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Scheduled&lt;/td&gt;
&lt;td&gt;Scheduled for next month or later&lt;/td&gt;
&lt;td&gt;Tasks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Migrated&lt;/td&gt;
&lt;td&gt;Migrated to another collection&lt;/td&gt;
&lt;td&gt;Tasks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;del&gt;strike through&lt;/del&gt;&lt;/td&gt;
&lt;td&gt;Irrelevant&lt;/td&gt;
&lt;td&gt;No longer relevant&lt;/td&gt;
&lt;td&gt;All bullets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;Common Signifiers&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Signifier&lt;/th&gt;
&lt;th&gt;Term&lt;/th&gt;
&lt;th&gt;Definition&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Important&lt;/td&gt;
&lt;td&gt;Signifies special importance or priority&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;!&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Inspiration&lt;/td&gt;
&lt;td&gt;Signifies inspirational ideas and insights&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Bullet Journal Practices&lt;/h2&gt;
&lt;p&gt;Bullet journal practices are intended to maintain focus on what matters through daily and monthly reviews intended to refine task lists and reflect on what matters. &lt;/p&gt;
&lt;h3&gt;Daily Review&lt;/h3&gt;
&lt;p&gt;Spend about 5 - 15 minutes to review notes from the past day, update with status and signifiers as necessary, and create the &lt;strong&gt;daily log&lt;/strong&gt; for the day ahead. Do this at either the very beginning or very end of each day.&lt;/p&gt;
&lt;h3&gt;Monthly Migrations&lt;/h3&gt;
&lt;p&gt;At the end of each month, create a new &lt;strong&gt;monthly log&lt;/strong&gt; for the month ahead. Start by creating the layout for the next month, then review the previous month to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mark completed tasks with &lt;code class=&quot;language-text&quot;&gt;✖&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Cross-out&lt;/del&gt; irrelevant tasks, notes, and events.&lt;/li&gt;
&lt;li&gt;For tasks you plan to complete next month, mark them as migrated (&lt;code class=&quot;language-text&quot;&gt;&amp;gt;&lt;/code&gt;) and add them to the next month&apos;s task list or to the relevant &lt;strong&gt;custom collection&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;For tasks you plan to complete after next month, move them to the future log and mark them as scheduled (&lt;code class=&quot;language-text&quot;&gt;&amp;lt;&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The goal is that all relevant tasks have been copied to the next month&apos;s task list, the future log, or a custom collection.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Mermaid (JavaScript Library)]]></title><description><![CDATA[Mermaid Diagrams Official Website Live Editor]]></description><link>https://www.jamestharpe.com/mermaid/</link><guid isPermaLink="false">https://www.jamestharpe.com/mermaid/</guid><pubDate>Mon, 23 Nov 2020 18:01:11 GMT</pubDate><content:encoded>&lt;h1&gt;Mermaid Diagrams&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://mermaid-js.github.io/&quot;&gt;Official Website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mermaid-js.github.io/mermaid-live-editor/&quot;&gt;Live Editor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Five Whys]]></title><description><![CDATA[Five Whys Five Whys is a heuristic approach for root-cause analysis. When faced with an opportunity, asking why five times can prove useful…]]></description><link>https://www.jamestharpe.com/five-whys/</link><guid isPermaLink="false">https://www.jamestharpe.com/five-whys/</guid><pubDate>Mon, 23 Nov 2020 17:33:11 GMT</pubDate><content:encoded>&lt;h1&gt;Five Whys&lt;/h1&gt;
&lt;p&gt;Five Whys is a heuristic approach for root-cause analysis. When faced with an opportunity, asking why five times can prove useful to identify underlying causes and motivations. The &lt;em&gt;five&lt;/em&gt; in &quot;five whys&quot; is anecdotally the number of iterations required to get to the real root cause, however more or fewer may be required in reality.&lt;/p&gt;
&lt;h2&gt;Example: Underlying Motivations&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Opportunity:&lt;/strong&gt; I want a promotion&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Why do you want a promotion?&lt;/strong&gt; To increase my income and influence.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Why do you want to increase your influence?&lt;/strong&gt; To build &amp;#x26; be part of a culture that I will find fulfilling.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Why build a culture?&lt;/strong&gt; I&apos;m going to be here for a long time.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Why will you be here for a long time?&lt;/strong&gt; I&apos;m motivated to influence the culture because believe I can find a balance between my need to take risks and my need for financial security.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Why do you need to balance risk and security?&lt;/strong&gt; Family makes risk too scary without security, but I get bored without risk and start to fail. To feel successful, I need to take risks that pay off but realistically I need security to take those risks.&lt;/li&gt;
&lt;/ol&gt;</content:encoded></item><item><title><![CDATA[Lean]]></title><link>https://www.jamestharpe.com/lean/</link><guid isPermaLink="false">https://www.jamestharpe.com/lean/</guid><pubDate>Mon, 23 Nov 2020 17:33:11 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[Reinhold Niebuhr Quotes]]></title><description><![CDATA[Reinhold Niebuhr Quotes "Father, give us the courage to change what must be altered, serenity to accept what cannot be helped, and insight…]]></description><link>https://www.jamestharpe.com/reinhold-niebuhr/</link><guid isPermaLink="false">https://www.jamestharpe.com/reinhold-niebuhr/</guid><pubDate>Mon, 23 Nov 2020 17:25:11 GMT</pubDate><content:encoded>&lt;h1&gt;Reinhold Niebuhr Quotes&lt;/h1&gt;
&lt;p&gt;&quot;Father, give us the courage to change what must be altered, serenity to accept what cannot be helped, and insight to know one from another&quot;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Serenity Prayer]]></title><description><![CDATA[Serenity Prayer God grant me the serenity to accept the things I cannot change,
Courage to change the things I can,
And the wisdom to know…]]></description><link>https://www.jamestharpe.com/serenity-prayer/</link><guid isPermaLink="false">https://www.jamestharpe.com/serenity-prayer/</guid><pubDate>Mon, 23 Nov 2020 17:25:11 GMT</pubDate><content:encoded>&lt;h1&gt;Serenity Prayer&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;God grant me the serenity to accept the things I cannot change,
Courage to change the things I can,
And the wisdom to know the difference.&lt;/p&gt;
&lt;/blockquote&gt;</content:encoded></item><item><title><![CDATA[Carl Sagan]]></title><description><![CDATA[Carl Sagan Official website Quotes "Every question is a cry to understand the world" --Carl Sagan, The Demon-Haunted World: Science as a…]]></description><link>https://www.jamestharpe.com/carl-sagan/</link><guid isPermaLink="false">https://www.jamestharpe.com/carl-sagan/</guid><pubDate>Mon, 23 Nov 2020 17:23:11 GMT</pubDate><content:encoded>&lt;h1&gt;Carl Sagan&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://carlsagan.com/&quot;&gt;Official website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Quotes&lt;/h2&gt;
&lt;p&gt;&quot;Every question is a cry to understand the world&quot; --Carl Sagan, The Demon-Haunted World: Science as a Candle in the Dark&lt;/p&gt;</content:encoded></item><item><title><![CDATA[The Bullet Journal Method by Ryder Carroll]]></title><description><![CDATA[The Bullet Journal Method Official Website YouTube Channel Quotes from The Bullet Journal Method "Perfection is an unnatural and damaging…]]></description><link>https://www.jamestharpe.com/book-bullet-journal-method/</link><guid isPermaLink="false">https://www.jamestharpe.com/book-bullet-journal-method/</guid><pubDate>Mon, 23 Nov 2020 17:13:11 GMT</pubDate><content:encoded>&lt;h1&gt;The Bullet Journal Method&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://bulletjournal.com/pages/book&quot;&gt;Official Website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/bulletjournal&quot;&gt;YouTube Channel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Quotes from The Bullet Journal Method&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&quot;Perfection is an unnatural and damaging concept&quot; --Ryder Carroll&lt;/li&gt;
&lt;li&gt;&quot;Wisdom comes from making peace w/ our fallible natures&quot; --Ryder Carroll&lt;/li&gt;
&lt;li&gt;&quot;Trying to think our way out of situations beyond our control may feel productive, but it&apos;s nothing more than a powerful distraction.&quot; --Ryder Carroll&lt;/li&gt;
&lt;li&gt;&quot;The process accounts for the majority of the experience.&quot; --Ryder Carroll&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Mark Twain Quotes]]></title><description><![CDATA[Mark Twain Quotes "I've had a lot of worries in my life, most of which never happened."]]></description><link>https://www.jamestharpe.com/mark-twain/</link><guid isPermaLink="false">https://www.jamestharpe.com/mark-twain/</guid><pubDate>Mon, 23 Nov 2020 17:09:11 GMT</pubDate><content:encoded>&lt;h1&gt;Mark Twain Quotes&lt;/h1&gt;
&lt;p&gt;&quot;I&apos;ve had a lot of worries in my life, most of which never happened.&quot;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Ryder Carroll]]></title><description><![CDATA[Ryder Carroll Official website Twitter]]></description><link>https://www.jamestharpe.com/ryder-carroll/</link><guid isPermaLink="false">https://www.jamestharpe.com/ryder-carroll/</guid><pubDate>Mon, 23 Nov 2020 17:09:11 GMT</pubDate><content:encoded>&lt;h1&gt;Ryder Carroll&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.rydercarroll.com/&quot;&gt;Official website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/rydercarroll&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Internet of Things (IoT)]]></title><link>https://www.jamestharpe.com/iot/</link><guid isPermaLink="false">https://www.jamestharpe.com/iot/</guid><pubDate>Mon, 23 Nov 2020 16:15:18 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[Microservices]]></title><link>https://www.jamestharpe.com/microservices/</link><guid isPermaLink="false">https://www.jamestharpe.com/microservices/</guid><pubDate>Mon, 23 Nov 2020 14:16:11 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[Infrastructure as Code]]></title><link>https://www.jamestharpe.com/infrastructure-as-code/</link><guid isPermaLink="false">https://www.jamestharpe.com/infrastructure-as-code/</guid><pubDate>Mon, 23 Nov 2020 14:13:30 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[Book Notes and Reviews]]></title><link>https://www.jamestharpe.com/book/</link><guid isPermaLink="false">https://www.jamestharpe.com/book/</guid><pubDate>Mon, 23 Nov 2020 14:12:11 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[Command-line Interface (CLI)]]></title><description><![CDATA[Command Line Interfaces Command-line Interfaces (CLIs) are applications that to process text-based commands, typically entered into a…]]></description><link>https://www.jamestharpe.com/cli/</link><guid isPermaLink="false">https://www.jamestharpe.com/cli/</guid><pubDate>Mon, 23 Nov 2020 14:12:11 GMT</pubDate><content:encoded>&lt;h1&gt;Command Line Interfaces&lt;/h1&gt;
&lt;p&gt;Command-line Interfaces (CLIs) are applications that to process text-based commands, typically entered into a terminal or executed via a shell script.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[jq]]></title><description><![CDATA[jq jq can slice, filter, map, and transform structured JSON data similar to how , ,  is used for plain text.]]></description><link>https://www.jamestharpe.com/jq/</link><guid isPermaLink="false">https://www.jamestharpe.com/jq/</guid><pubDate>Mon, 23 Nov 2020 14:03:11 GMT</pubDate><content:encoded>&lt;h1&gt;jq&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;jq&lt;/a&gt; can slice, filter, map, and transform structured &lt;a href=&quot;https://www.json.org/&quot;&gt;JSON&lt;/a&gt; data similar to how &lt;a href=&quot;https://linux.die.net/man/1/sed&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;sed&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://linux.die.net/man/1/awk&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;awk&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.man7.org/linux/man-pages/man1/grep.1.html&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;grep&lt;/code&gt;&lt;/a&gt; is used for plain text.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Pike Walks (Exercise)]]></title><link>https://www.jamestharpe.com/exercise-pike-walk/</link><guid isPermaLink="false">https://www.jamestharpe.com/exercise-pike-walk/</guid><pubDate>Tue, 17 Nov 2020 14:11:30 GMT</pubDate><content:encoded>&lt;!-- TODO: Instructions and video --&gt;</content:encoded></item><item><title><![CDATA[Easy Upper Body Exercise Routine]]></title><description><![CDATA[Easy Upper Body Exercise Routine   Time 20 to 30 minutes Difficulty Easy Equipment Dumbbells, Yoga Ball This routine can be an easy stand…]]></description><link>https://www.jamestharpe.com/exercise-routine-upper-body-easy/</link><guid isPermaLink="false">https://www.jamestharpe.com/exercise-routine-upper-body-easy/</guid><pubDate>Tue, 17 Nov 2020 14:00:30 GMT</pubDate><content:encoded>&lt;h1&gt;Easy Upper Body Exercise Routine&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Time&lt;/td&gt;
&lt;td&gt;20 to 30 minutes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Difficulty&lt;/td&gt;
&lt;td&gt;Easy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Equipment&lt;/td&gt;
&lt;td&gt;Dumbbells, Yoga Ball&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This routine can be an easy stand-alone routine, or serve as a warmup for a more intense upper body routine.&lt;/p&gt;
&lt;h2&gt;Routine&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Exercise&lt;/th&gt;
&lt;th&gt;Equipment&lt;/th&gt;
&lt;th align=&quot;right&quot;&gt;Reps&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Rotational Overhead Press&lt;/td&gt;
&lt;td&gt;2 x Dumbbells&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Wood Chop&lt;/td&gt;
&lt;td&gt;Dumbbell&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;6/side&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Traffic Cops&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Yoga Ball Rolls&lt;/td&gt;
&lt;td&gt;Dumbbell&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;6/side&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Pike Walks&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Instructions&lt;/h2&gt;
&lt;p&gt;Perform each exercise in rotation for two or three rotations. For exercises requiring weights, start light (≤ 10lbs) and work your way up slowly.&lt;/p&gt;
&lt;h2&gt;Credits&lt;/h2&gt;
&lt;p&gt;Based on the warm-ups described in Scrawny to Brawny by Michael Mejia and John Berardi.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Frankensteins (Exercise)]]></title><link>https://www.jamestharpe.com/exercise-frankenstein/</link><guid isPermaLink="false">https://www.jamestharpe.com/exercise-frankenstein/</guid><pubDate>Tue, 17 Nov 2020 13:59:30 GMT</pubDate><content:encoded>&lt;!-- TODO: Instructions and video --&gt;</content:encoded></item><item><title><![CDATA[Hip Walks (Exercise)]]></title><link>https://www.jamestharpe.com/exercise-hip-walk/</link><guid isPermaLink="false">https://www.jamestharpe.com/exercise-hip-walk/</guid><pubDate>Tue, 17 Nov 2020 13:55:30 GMT</pubDate><content:encoded>&lt;!-- TODO: Instructions and video --&gt;</content:encoded></item><item><title><![CDATA[Spider-Mans (Exercise)]]></title><link>https://www.jamestharpe.com/exercise-spider-man/</link><guid isPermaLink="false">https://www.jamestharpe.com/exercise-spider-man/</guid><pubDate>Tue, 17 Nov 2020 13:51:30 GMT</pubDate><content:encoded>&lt;!-- TODO: Instructions &amp; video --&gt;</content:encoded></item><item><title><![CDATA[Traffic Cops (Exercise)]]></title><link>https://www.jamestharpe.com/exercise-traffic-cop/</link><guid isPermaLink="false">https://www.jamestharpe.com/exercise-traffic-cop/</guid><pubDate>Tue, 17 Nov 2020 13:51:30 GMT</pubDate><content:encoded>&lt;!-- TODO: Instructions &amp; video --&gt;</content:encoded></item><item><title><![CDATA[Yoga Ball Rolls]]></title><link>https://www.jamestharpe.com/exercise-yoga-ball-roll/</link><guid isPermaLink="false">https://www.jamestharpe.com/exercise-yoga-ball-roll/</guid><pubDate>Tue, 17 Nov 2020 13:51:30 GMT</pubDate><content:encoded>&lt;!-- TODO: Instructions &amp; video --&gt;</content:encoded></item><item><title><![CDATA[Dumbbell Wood Chop]]></title><description><![CDATA[How to do a Dumbbell Wood Chop]]></description><link>https://www.jamestharpe.com/exercise-dumbbell-wood-chop/</link><guid isPermaLink="false">https://www.jamestharpe.com/exercise-dumbbell-wood-chop/</guid><pubDate>Tue, 17 Nov 2020 13:21:30 GMT</pubDate><content:encoded>&lt;h1&gt;How to do a Dumbbell Wood Chop&lt;/h1&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/GDfpveO8zK4&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;!-- TODO: Make my own video --&gt;</content:encoded></item><item><title><![CDATA[Easy Full Body Exercise Routine]]></title><description><![CDATA[Easy Full Body Exercise Routine   Time 20 to 30 minutes Difficulty Easy Equipment Dumbbells This routine can be an easy stand-alone routine…]]></description><link>https://www.jamestharpe.com/exercise-routine-full-body-easy/</link><guid isPermaLink="false">https://www.jamestharpe.com/exercise-routine-full-body-easy/</guid><pubDate>Tue, 17 Nov 2020 12:14:30 GMT</pubDate><content:encoded>&lt;h1&gt;Easy Full Body Exercise Routine&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Time&lt;/td&gt;
&lt;td&gt;20 to 30 minutes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Difficulty&lt;/td&gt;
&lt;td&gt;Easy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Equipment&lt;/td&gt;
&lt;td&gt;Dumbbells&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This routine can be an easy stand-alone routine, or serve as a warmup for a more intense full body routine.&lt;/p&gt;
&lt;h2&gt;Routine&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Exercise&lt;/th&gt;
&lt;th&gt;Equipment&lt;/th&gt;
&lt;th align=&quot;right&quot;&gt;Reps&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Rotational Overhead Press&lt;/td&gt;
&lt;td&gt;2 x Dumbbells&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spider-mans&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hip Walks&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;12/leg&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Wood Chop&lt;/td&gt;
&lt;td&gt;Dumbbell&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;6/side&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Frankensteins&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;12/leg&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Instructions&lt;/h2&gt;
&lt;p&gt;Perform each exercise in rotation for two or three rotations. &lt;/p&gt;
&lt;p&gt;For exercises requiring weights, start light (≤ 10lbs) and work your way up slowly.&lt;/p&gt;
&lt;h2&gt;Credits&lt;/h2&gt;
&lt;p&gt;Based on the warm-ups described in Scrawny to Brawny by Michael Mejia and John Berardi.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Exercise Routines]]></title><link>https://www.jamestharpe.com/exercise-routine/</link><guid isPermaLink="false">https://www.jamestharpe.com/exercise-routine/</guid><pubDate>Tue, 17 Nov 2020 12:13:30 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[Rotational Overhead Press]]></title><description><![CDATA[How to do a Rotational Overhead Press]]></description><link>https://www.jamestharpe.com/exercise-rotational-overhead-press/</link><guid isPermaLink="false">https://www.jamestharpe.com/exercise-rotational-overhead-press/</guid><pubDate>Tue, 17 Nov 2020 12:06:30 GMT</pubDate><content:encoded>&lt;h1&gt;How to do a Rotational Overhead Press&lt;/h1&gt;
&lt;iframe src=&quot;https://www.facebook.com/plugins/video.php?height=314&amp;href=https%3A%2F%2Fwww.facebook.com%2Fsilversneakers%2Fvideos%2F413444982547093%2F&amp;show_text=false&amp;width=560&quot; width=&quot;560&quot; height=&quot;314&quot; style=&quot;border:none;overflow:hidden&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;true&quot; allow=&quot;autoplay; clipboard-write; encrypted-media; picture-in-picture; web-share&quot; allowFullScreen=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;!-- TODO: Make my own video --&gt;</content:encoded></item><item><title><![CDATA[Exercise]]></title><description><![CDATA[Exercise Resources CDC Physical Activity Basics]]></description><link>https://www.jamestharpe.com/exercise/</link><guid isPermaLink="false">https://www.jamestharpe.com/exercise/</guid><pubDate>Tue, 17 Nov 2020 12:06:30 GMT</pubDate><content:encoded>&lt;h1&gt;Exercise&lt;/h1&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cdc.gov/physicalactivity/basics/&quot;&gt;CDC Physical Activity Basics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Git]]></title><description><![CDATA[Git Git is a free, open-source distributed version control system.]]></description><link>https://www.jamestharpe.com/git/</link><guid isPermaLink="false">https://www.jamestharpe.com/git/</guid><pubDate>Tue, 17 Nov 2020 11:54:30 GMT</pubDate><content:encoded>&lt;h1&gt;Git&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://www.git-scm.com/&quot;&gt;Git&lt;/a&gt; is a free, open-source distributed version control system.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Bourne Again Shell (Bash)]]></title><description><![CDATA[Bash Bash is a Unix shell Bash Command Shortcuts Command Use Example  Show list of previous commands  will show last five commands executed…]]></description><link>https://www.jamestharpe.com/bash/</link><guid isPermaLink="false">https://www.jamestharpe.com/bash/</guid><pubDate>Mon, 16 Nov 2020 14:15:11 GMT</pubDate><content:encoded>&lt;h1&gt;Bash&lt;/h1&gt;
&lt;p&gt;Bash is a Unix shell&lt;/p&gt;
&lt;h2&gt;Bash Command Shortcuts&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Use&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;history&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Show list of previous commands&lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;history 5&lt;/code&gt; will show last five commands executed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;!123&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Execute command &lt;code class=&quot;language-text&quot;&gt;123&lt;/code&gt; from history&lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;sudo !123&lt;/code&gt; will execute command 123 from history with &lt;code class=&quot;language-text&quot;&gt;sudo&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;!!&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Execute previous command&lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;sudo !!&lt;/code&gt; will execute the last command with sudo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;amp;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Run command in background&lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;hugo serve &amp;amp;&lt;/code&gt; will run &lt;a href=&quot;../tools/hugo/&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;hugo serve&lt;/code&gt;&lt;/a&gt; in the background&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Bash Command Chains&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operator&lt;/th&gt;
&lt;th&gt;Use&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Chain commands, despite failure&lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;mkdir a; mkdir b&lt;/code&gt; will call &lt;code class=&quot;language-text&quot;&gt;mkdir b&lt;/code&gt; whether &lt;code class=&quot;language-text&quot;&gt;mkdir a&lt;/code&gt; succeeds or not&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Chain commands, if successful&lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;mkdir a &amp;amp;&amp;amp; mkdir b&lt;/code&gt; will call &lt;code class=&quot;language-text&quot;&gt;mkdir b&lt;/code&gt; only if &lt;code class=&quot;language-text&quot;&gt;mkdir a&lt;/code&gt; succeeds&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;||&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Chain commands, if failure&lt;/td&gt;
&lt;td&gt;&lt;code&gt;mkdir a || mkdir b&lt;/code&gt; will call &lt;code class=&quot;language-text&quot;&gt;mkdir b&lt;/code&gt; only if &lt;code class=&quot;language-text&quot;&gt;mkdir a&lt;/code&gt; fails&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;|&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Pass command output as input to next command&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ps -ef | less&lt;/code&gt; will use &lt;code class=&quot;language-text&quot;&gt;less&lt;/code&gt; to scroll through output of &lt;code class=&quot;language-text&quot;&gt;pf -es&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content:encoded></item><item><title><![CDATA[Shells]]></title><description><![CDATA[Shells Shells are text-based command processing applications, often used via a terminal.]]></description><link>https://www.jamestharpe.com/shell/</link><guid isPermaLink="false">https://www.jamestharpe.com/shell/</guid><pubDate>Mon, 16 Nov 2020 14:15:11 GMT</pubDate><content:encoded>&lt;h1&gt;Shells&lt;/h1&gt;
&lt;p&gt;Shells are text-based command processing applications, often used via a terminal.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Terminals]]></title><description><![CDATA[Terminals Terminals are text-based applications read and write to a shell. A "shell" and a "terminal" may be the same application (such as…]]></description><link>https://www.jamestharpe.com/terminal/</link><guid isPermaLink="false">https://www.jamestharpe.com/terminal/</guid><pubDate>Mon, 16 Nov 2020 14:15:11 GMT</pubDate><content:encoded>&lt;h1&gt;Terminals&lt;/h1&gt;
&lt;p&gt;Terminals are text-based applications read and write to a shell. A &quot;shell&quot; and a &quot;terminal&quot; may be the same application (such as PowerShell) or they may be different applications (such as &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/terminal/&quot;&gt;Windows Terminal&lt;/a&gt;).&lt;/p&gt;
&lt;h2&gt;Common Terminal Shortcuts&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Shortcut&lt;/th&gt;
&lt;th&gt;Use&lt;/th&gt;
&lt;th&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;⬆&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Scroll up through previous commands&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;⬇&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Scroll down through previous commands&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;Ctrl&lt;/code&gt;+&lt;code class=&quot;language-text&quot;&gt;a&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Jump to beginning of line&lt;/td&gt;
&lt;td&gt;Works in most text editors&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;Ctrl&lt;/code&gt;+&lt;code class=&quot;language-text&quot;&gt;e&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Jump to end of line&lt;/td&gt;
&lt;td&gt;Works in most text editors&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;Ctrl&lt;/code&gt;+&lt;code class=&quot;language-text&quot;&gt;l&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Clear screen&lt;/td&gt;
&lt;td&gt;Similar to the &lt;code class=&quot;language-text&quot;&gt;clear&lt;/code&gt; command&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;Ctrl&lt;/code&gt;+&lt;code class=&quot;language-text&quot;&gt;r&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Search &amp;#x26; execute previous command&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;Ctrl&lt;/code&gt;+&lt;code class=&quot;language-text&quot;&gt;u&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Delete everything to the left of the cursor&lt;/td&gt;
&lt;td&gt;Works in VS Code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;Ctrl&lt;/code&gt;+&lt;code class=&quot;language-text&quot;&gt;k&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Delete everything to the right of the cursor&lt;/td&gt;
&lt;td&gt;Works in VS Code&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/0nn0/terminal-mac-cheatsheet&quot;&gt;Terminal Cheat Sheet for Mac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.hanselman.com/blog/whats-the-difference-between-a-console-a-terminal-and-a-shell&quot;&gt;Difference Between a Console and a Terminal and a Shell by Scott Hanselman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/b0rk&quot;&gt;Julia Evans&apos;s Twitter Feed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[IntelliJ IDE]]></title><description><![CDATA[IntelliJ IDEA IntelliJ IDEA is a Java IDE, developed by JetBrains.]]></description><link>https://www.jamestharpe.com/intellij/</link><guid isPermaLink="false">https://www.jamestharpe.com/intellij/</guid><pubDate>Mon, 16 Nov 2020 12:48:34 GMT</pubDate><content:encoded>&lt;h1&gt;IntelliJ IDEA&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;IntelliJ IDEA&lt;/a&gt; is a Java IDE, developed by &lt;a href=&quot;https://www.jetbrains.com/&quot;&gt;JetBrains&lt;/a&gt;.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Gradle Build Tool]]></title><description><![CDATA[Gradle Build Tool Gradle is build automation tool that automates common software build steps like compile, test, package, deploy, and…]]></description><link>https://www.jamestharpe.com/gradle/</link><guid isPermaLink="false">https://www.jamestharpe.com/gradle/</guid><pubDate>Mon, 16 Nov 2020 12:45:34 GMT</pubDate><content:encoded>&lt;h1&gt;Gradle Build Tool&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://gradle.org/&quot;&gt;Gradle&lt;/a&gt; is build automation tool that automates common software build steps like compile, test, package, deploy, and publish.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Test Driven Development (TDD)]]></title><description><![CDATA[Test Driven Development (TDD) TDD - Where did it all go wrong?]]></description><link>https://www.jamestharpe.com/test-driven-development/</link><guid isPermaLink="false">https://www.jamestharpe.com/test-driven-development/</guid><pubDate>Mon, 16 Nov 2020 12:07:45 GMT</pubDate><content:encoded>&lt;h1&gt;Test Driven Development (TDD)&lt;/h1&gt;
&lt;h2&gt;TDD - Where did it all go wrong?&lt;/h2&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/EZ05e7EMOLM&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;</content:encoded></item><item><title><![CDATA[Java]]></title><description><![CDATA[Java Java is a general purpose, object-oriented programming language.]]></description><link>https://www.jamestharpe.com/java/</link><guid isPermaLink="false">https://www.jamestharpe.com/java/</guid><pubDate>Mon, 16 Nov 2020 11:38:11 GMT</pubDate><content:encoded>&lt;h1&gt;Java&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://www.java.com/&quot;&gt;Java&lt;/a&gt; is a general purpose, object-oriented programming language.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Spring Framework]]></title><description><![CDATA[Spring Framework Spring Framework is an application framework and inversion of control container for Java.]]></description><link>https://www.jamestharpe.com/spring-framework/</link><guid isPermaLink="false">https://www.jamestharpe.com/spring-framework/</guid><pubDate>Mon, 16 Nov 2020 00:59:18 GMT</pubDate><content:encoded>&lt;h1&gt;Spring Framework&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://spring.io/projects/spring-framework&quot;&gt;Spring Framework&lt;/a&gt; is an application framework and inversion of control container for Java.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Spring Boot]]></title><description><![CDATA[Spring Boot Spring Boot is an open source Java framework used to develop REST services based on Spring Framework.]]></description><link>https://www.jamestharpe.com/spring-boot/</link><guid isPermaLink="false">https://www.jamestharpe.com/spring-boot/</guid><pubDate>Mon, 16 Nov 2020 00:57:18 GMT</pubDate><content:encoded>&lt;h1&gt;Spring Boot&lt;/h1&gt;
&lt;p&gt;Spring Boot is an open source Java framework used to develop REST services based on Spring Framework.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[PAL Tracker]]></title><description><![CDATA[PAL Tracker PAL Tracker is an example app used to show basic application management and deployment strategies in Cloud Foundry. PAL Tracker…]]></description><link>https://www.jamestharpe.com/pal-tracker/</link><guid isPermaLink="false">https://www.jamestharpe.com/pal-tracker/</guid><pubDate>Mon, 16 Nov 2020 00:53:18 GMT</pubDate><content:encoded>&lt;h1&gt;PAL Tracker&lt;/h1&gt;
&lt;p&gt;PAL Tracker is an example app used to show basic application management and deployment strategies in Cloud Foundry. &lt;a href=&quot;https://github.com/jamestharpe/pal-tracker&quot;&gt;PAL Tracker code&lt;/a&gt; is available on my GitHub.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[AWS Command Line Interface (CLI)]]></title><link>https://www.jamestharpe.com/aws-cli/</link><guid isPermaLink="false">https://www.jamestharpe.com/aws-cli/</guid><pubDate>Mon, 16 Nov 2020 00:17:30 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[AWS CloudFormation]]></title><link>https://www.jamestharpe.com/aws-dynamodb/</link><guid isPermaLink="false">https://www.jamestharpe.com/aws-dynamodb/</guid><pubDate>Mon, 16 Nov 2020 00:14:30 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[AWS CloudFormation]]></title><link>https://www.jamestharpe.com/aws-cloudformation/</link><guid isPermaLink="false">https://www.jamestharpe.com/aws-cloudformation/</guid><pubDate>Mon, 16 Nov 2020 00:13:30 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[Git Aliases]]></title><description><![CDATA[Useful Git Aliases for Productivity A recent addition to my Automatic Development Environment Setup script were several Git aliases that…]]></description><link>https://www.jamestharpe.com/git-aliases/</link><guid isPermaLink="false">https://www.jamestharpe.com/git-aliases/</guid><pubDate>Mon, 16 Nov 2020 00:04:30 GMT</pubDate><content:encoded>&lt;h1&gt;Useful Git Aliases for Productivity&lt;/h1&gt;
&lt;p&gt;A recent addition to my &lt;a href=&quot;../automatic-development-environment-setup&quot;&gt;Automatic Development Environment Setup&lt;/a&gt; script were several Git aliases that help to speed up development. Here is how and why I set them up.&lt;/p&gt;
&lt;h2&gt;Start the Day with &lt;code class=&quot;language-text&quot;&gt;git pom&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The first step in most developer workflows is to run &lt;code class=&quot;language-text&quot;&gt;git pull origin main&lt;/code&gt; to ensure your local work is current with the main line of development. Shave a few seconds off this routine step by shortening the command to &lt;code class=&quot;language-text&quot;&gt;git pom&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config --global alias.pom &lt;span class=&quot;token string&quot;&gt;&apos;pull origin main&apos;&lt;/span&gt;

$ &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; pom
remote: Counting objects: &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;, done.
remote: Total &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;delta &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;, reused &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;delta &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;, pack-reused &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;
Unpacking objects: &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;/5&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;, done.
&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Get Caught Up with &lt;code class=&quot;language-text&quot;&gt;git ls&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Once you&apos;ve pulled the latest from &lt;code class=&quot;language-text&quot;&gt;main&lt;/code&gt;, it can be helpful to see what&apos;s changed in the repository. Configuring an alias for &lt;code class=&quot;language-text&quot;&gt;git ls&lt;/code&gt; can simplify common but verbose calls to &lt;code class=&quot;language-text&quot;&gt;git log ...&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config --global alias.ls &lt;span class=&quot;token string&quot;&gt;&quot;log --pretty=format:&apos;%C(yellow)%h %ad%Cred%d %Creset%s%Cblue [%cn]&apos; --decorate --date=short&quot;&lt;/span&gt;

$ &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;ls&lt;/span&gt;
48f3317 &lt;span class=&quot;token number&quot;&gt;2018&lt;/span&gt;-04-28 &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;HEAD -&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; main&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; Starts useful &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; aliases article &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;James Tharpe&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
44b55a0 &lt;span class=&quot;token number&quot;&gt;2018&lt;/span&gt;-04-01 &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;origin/main, origin/HEAD&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; Started CLI/TypeScript article &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;James Tharpe&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token number&quot;&gt;3748172&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2017&lt;/span&gt;-12-22 Publishes serverless-aws-backend &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;James Tharpe&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
5d51a2e &lt;span class=&quot;token number&quot;&gt;2017&lt;/span&gt;-12-22 Completes serverless-aws-backend.md &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;James Tharpe&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
cd058e2 &lt;span class=&quot;token number&quot;&gt;2017&lt;/span&gt;-12-17 WIP: Form2Email &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;James Tharpe&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(just type &lt;code class=&quot;language-text&quot;&gt;q&lt;/code&gt; to quit)&lt;/p&gt;
&lt;h2&gt;Pick Up Where You Left Off With &lt;code class=&quot;language-text&quot;&gt;git last&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;If you&apos;re absent-minded like I am then an interruption can cause you to forget what you just committed. Rather than using &lt;code class=&quot;language-text&quot;&gt;git ls&lt;/code&gt; to check the logs, &lt;code class=&quot;language-text&quot;&gt;git last&lt;/code&gt; can be useful to quickly see only the most recent commit.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config --global alias.last &lt;span class=&quot;token string&quot;&gt;&apos;log -1 HEAD&apos;&lt;/span&gt;

$ &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; last
commit 48f3317298e16046c4934b6ea6d37fa4bc0ca1c1 &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;HEAD -&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; main&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
Author: James Tharpe &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;jimmy.tharpe@gmail.com&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
Date:   Sat Apr &lt;span class=&quot;token number&quot;&gt;28&lt;/span&gt; 08:19:33 &lt;span class=&quot;token number&quot;&gt;2018&lt;/span&gt; -0400

    Starts useful &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; aliases article&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Prepare for the Daily Standup with &lt;code class=&quot;language-text&quot;&gt;git standup&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;A quick way to remember what you were working on recently for your team&apos;s daily standup is to view the Git log since yesterday. A nice alias for this is &lt;code class=&quot;language-text&quot;&gt;git standup&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config --global alias.standup &lt;span class=&quot;token string&quot;&gt;&quot;log --since yesterday --author &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config user.email&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt; --pretty=short&quot;&lt;/span&gt;

$ &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; standup
commit 0d686aeef569e6762abab8e16cd2118a791be600 &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;HEAD -&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; main&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
Author: James Tharpe &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;jimmy.tharpe@gmail.com&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;

    Outlines &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; aliases article

commit 6ded0e6b249b28984127f1221a713f69b74830e5
Author: James Tharpe &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;jimmy.tharpe@gmail.com&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;

    Starts useful &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; aliases article&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Get &lt;em&gt;Everything&lt;/em&gt; with &lt;code class=&quot;language-text&quot;&gt;git everything&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Working with Git submodules can be prone to error, since submodules don&apos;t update like the rest of your codebase does when you run &lt;code class=&quot;language-text&quot;&gt;git pom&lt;/code&gt; or similar commands. To avoid forgetting to update or initialize submodules in your repository, configure &lt;code class=&quot;language-text&quot;&gt;git everything&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config --global alias.everything &lt;span class=&quot;token string&quot;&gt;&quot;! git pull &amp;amp;&amp;amp; git submodule update --init --recursive&quot;&lt;/span&gt;

$ &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; everything
remote: Counting objects: &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;, done.
remote: Compressing objects: &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;/3&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;, done.
remote: Total &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;delta &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;, reused &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;delta &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;, pack-reused &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;
Unpacking objects: &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;/8&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;, done.
From github.com:jamestharpe/jamestharpe.com
   44b55a0&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;0d686ae  main     -&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; origin/main
Updating 44b55a0&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;0d686ae
Fast-forward
 content/useful-git-aliases.md &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;63&lt;/span&gt; +++++++++++++++++++++++++++++++++++++++++++
 themes/minimal                &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; +-
 &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; files changed, &lt;span class=&quot;token number&quot;&gt;64&lt;/span&gt; insertions&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;+&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;, &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; deletion&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;-&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
 create mode &lt;span class=&quot;token number&quot;&gt;100644&lt;/span&gt; content/useful-git-aliases.md
Submodule &lt;span class=&quot;token string&quot;&gt;&apos;themes/minimal&apos;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;git@github.com:calintat/minimal.git&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; registered &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; path &lt;span class=&quot;token string&quot;&gt;&apos;themes/minimal&apos;&lt;/span&gt;
Cloning into &lt;span class=&quot;token string&quot;&gt;&apos;C:/Users/james/code/me/temp/jamestharpe.com/themes/minimal&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
Submodule path &lt;span class=&quot;token string&quot;&gt;&apos;themes/minimal&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; checked out &lt;span class=&quot;token string&quot;&gt;&apos;2ac9acc008de52f61cc79fe2f93e61ba62e17d3b&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Prune Branches Merged with &lt;code class=&quot;language-text&quot;&gt;main&lt;/code&gt; with &lt;code class=&quot;language-text&quot;&gt;git branch-clean&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Branches help keep track of incomplete or undelivered work, but once the work is complete we sometimes forget to remove the branches we no longer need. To clean up branches that are already merged with main in one swoop, configure &lt;code class=&quot;language-text&quot;&gt;git branch-clean&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config --global alias.branch-clean &lt;span class=&quot;token string&quot;&gt;&quot;! git branch --merged main | grep -v &apos;^[ *]*main$&apos; | xargs git branch -d&quot;&lt;/span&gt;

$ &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; branch-clean
Deleted branch article/useful-git-aliases &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;was da41448&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;.
Deleted branch article/hire-me &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;was 23841b8&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Remember Git Aliases with Yet Another Alias&lt;/h2&gt;
&lt;p&gt;So you&apos;ve setup all these aliases but can&apos;t remember them. One more alias to help remember all your aliases:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config --global alias.aliases &lt;span class=&quot;token string&quot;&gt;&quot;config --get-regexp alias&quot;&lt;/span&gt;

$ &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; aliases
alias.pom pull origin main
alias.last log -1 HEAD
alias.ls log --pretty&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;format:&lt;span class=&quot;token string&quot;&gt;&apos;%C(yellow)%h %ad%Cred%d %Creset%s%Cblue [%cn]&apos;&lt;/span&gt; --decorate --date&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;short
alias.amend commit -a --amend
alias.standup log --since yesterday --author jimmy.tharpe@gmail.com --pretty&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;short
alias.everything &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; pull &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; submodule update --init --recursive
alias.aliases config --get-regexp &lt;span class=&quot;token builtin class-name&quot;&gt;alias&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Learn More About Git Aliases&lt;/h2&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Basics-Git-Aliases&quot;&gt;Git Basics - Git Aliases&lt;/a&gt; chapter of Pro Git to learn more about Git aliases.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Git Bash]]></title><description><![CDATA[Git Bash Git Bash is a Bash emulator and terminal for Windows that includes common Unix utilities. It is packaged with Git for Windows…]]></description><link>https://www.jamestharpe.com/git-bash/</link><guid isPermaLink="false">https://www.jamestharpe.com/git-bash/</guid><pubDate>Mon, 16 Nov 2020 00:04:30 GMT</pubDate><content:encoded>&lt;h1&gt;Git Bash&lt;/h1&gt;
&lt;p&gt;Git Bash is a Bash emulator and terminal for Windows that includes common Unix utilities. It is packaged with &lt;a href=&quot;https://git-scm.com/download/win&quot;&gt;Git for Windows&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/tuxfight3r/60051ac67c5f0445efee&quot;&gt;Git Bash Shortcuts for Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Database as Code]]></title><link>https://www.jamestharpe.com/database-as-code/</link><guid isPermaLink="false">https://www.jamestharpe.com/database-as-code/</guid><pubDate>Sun, 15 Nov 2020 23:41:30 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[Docker]]></title><link>https://www.jamestharpe.com/docker/</link><guid isPermaLink="false">https://www.jamestharpe.com/docker/</guid><pubDate>Sun, 15 Nov 2020 23:41:30 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[Flyway]]></title><link>https://www.jamestharpe.com/flyway/</link><guid isPermaLink="false">https://www.jamestharpe.com/flyway/</guid><pubDate>Sun, 15 Nov 2020 23:41:30 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[Cloud Foundry]]></title><link>https://www.jamestharpe.com/cloud-foundry/</link><guid isPermaLink="false">https://www.jamestharpe.com/cloud-foundry/</guid><pubDate>Sun, 15 Nov 2020 23:39:30 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[Databases]]></title><link>https://www.jamestharpe.com/database/</link><guid isPermaLink="false">https://www.jamestharpe.com/database/</guid><pubDate>Sun, 15 Nov 2020 23:34:11 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[MySQL]]></title><link>https://www.jamestharpe.com/mysql/</link><guid isPermaLink="false">https://www.jamestharpe.com/mysql/</guid><pubDate>Sun, 15 Nov 2020 23:34:11 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[Amazon Web Services (AWS)]]></title><link>https://www.jamestharpe.com/aws/</link><guid isPermaLink="false">https://www.jamestharpe.com/aws/</guid><pubDate>Sun, 15 Nov 2020 23:22:30 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[Computer Languages]]></title><description><![CDATA[Computer Languages Computer Languages are languages used by humans to tell computers what to do. There are multiple types of computer…]]></description><link>https://www.jamestharpe.com/computer-language/</link><guid isPermaLink="false">https://www.jamestharpe.com/computer-language/</guid><pubDate>Sun, 15 Nov 2020 22:31:11 GMT</pubDate><content:encoded>&lt;h1&gt;Computer Languages&lt;/h1&gt;
&lt;p&gt;Computer Languages are languages used by humans to tell computers what to do. There are multiple types of computer languages, but for purposes of organization I don&apos;t currently distinguish between them.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Package Managers]]></title><description><![CDATA[Package Managers A package manager is a software tool that automates the installation, upgrading, and un-installation of software or…]]></description><link>https://www.jamestharpe.com/package-managers/</link><guid isPermaLink="false">https://www.jamestharpe.com/package-managers/</guid><pubDate>Sun, 15 Nov 2020 22:27:11 GMT</pubDate><content:encoded>&lt;h1&gt;Package Managers&lt;/h1&gt;
&lt;p&gt;A package manager is a software tool that automates the installation, upgrading, and un-installation of software or application dependencies.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Markdown]]></title><description><![CDATA[Markdown is a simple language for writing rich-text documents using plain text.]]></description><link>https://www.jamestharpe.com/markdown/</link><guid isPermaLink="false">https://www.jamestharpe.com/markdown/</guid><pubDate>Sun, 15 Nov 2020 22:18:11 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://www.markdownguide.org/&quot;&gt;Markdown&lt;/a&gt; is a simple language for writing rich-text documents using plain text.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Chocolatey (Windows Package Manager)]]></title><description><![CDATA[Chocolatey Chocolatey is a package manager for Windows, similar to Homebrew for Mac.]]></description><link>https://www.jamestharpe.com/chocolatey/</link><guid isPermaLink="false">https://www.jamestharpe.com/chocolatey/</guid><pubDate>Sun, 15 Nov 2020 21:20:11 GMT</pubDate><content:encoded>&lt;h1&gt;Chocolatey&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt; is a package manager for Windows, similar to &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; for Mac.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[PowerShell]]></title><description><![CDATA[PowerShell PowerShell is a cross-platform command-line shell and scripting language.]]></description><link>https://www.jamestharpe.com/powershell/</link><guid isPermaLink="false">https://www.jamestharpe.com/powershell/</guid><pubDate>Sun, 15 Nov 2020 21:20:11 GMT</pubDate><content:encoded>&lt;h1&gt;PowerShell&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/powershell/powershell&quot;&gt;PowerShell&lt;/a&gt; is a cross-platform command-line shell and scripting language.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[TypeScript]]></title><description><![CDATA[TypeScript TypeScript is an open-source language that builds on JavaScript to add static type definitions.]]></description><link>https://www.jamestharpe.com/typescript/</link><guid isPermaLink="false">https://www.jamestharpe.com/typescript/</guid><pubDate>Sun, 15 Nov 2020 21:20:11 GMT</pubDate><content:encoded>&lt;h1&gt;TypeScript&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; is an open-source language that builds on JavaScript to add static type definitions.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[TypeScript: Extend the Window (globalThis) Object]]></title><description><![CDATA[Example: Add a Property to the Window type in TypeScript Explanation Declaration files (files ending with ) are used to declare types for…]]></description><link>https://www.jamestharpe.com/typescript-extend-window/</link><guid isPermaLink="false">https://www.jamestharpe.com/typescript-extend-window/</guid><pubDate>Sun, 15 Nov 2020 18:37:11 GMT</pubDate><content:encoded>&lt;h1&gt;Example: Add a Property to the Window type in TypeScript&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// &amp;lt;any-name&gt;.d.ts&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;declare&lt;/span&gt; global &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Window&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		someProperty&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; SomeType&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Explanation&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// &amp;lt;any-name&gt;.d.ts&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/declaration-files/introduction.html&quot;&gt;Declaration files&lt;/a&gt; (files ending with &lt;code class=&quot;language-text&quot;&gt;.d.ts&lt;/code&gt;) are used to declare types for code unavailable to the TypeScript compiler.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;declare&lt;/span&gt; global &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Declaration files use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import&quot;&gt;ES Modules&lt;/a&gt; syntax. ES Modules require at least one export statement; therefore &lt;code class=&quot;language-text&quot;&gt;global&lt;/code&gt; is exported. Alternatively, &lt;code class=&quot;language-text&quot;&gt;{ }&lt;/code&gt; (nothing) could be explicitly exported to satisfy the compiler. This is only necessary if there are no other exports.&lt;/p&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;Window&lt;/code&gt; interface is global, therefore changes to that interface need to be within the &lt;code class=&quot;language-text&quot;&gt;global&lt;/code&gt; scope.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;declare&lt;/span&gt; global &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Window&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		someProperty&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; SomeType&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;Window&lt;/code&gt; interface is extended through &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/declaration-merging.html&quot;&gt;declaration merging&lt;/a&gt;.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Go (Programming Language)]]></title><description><![CDATA[Go Go is an open-source programming language with memory safety, structural typing, type safety, type inference, built-in package management…]]></description><link>https://www.jamestharpe.com/golang/</link><guid isPermaLink="false">https://www.jamestharpe.com/golang/</guid><pubDate>Wed, 19 Aug 2020 20:02:11 GMT</pubDate><content:encoded>&lt;h1&gt;Go&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Go&lt;/strong&gt; is an open-source programming language with memory safety, structural typing, type safety, type inference, built-in package management (&lt;code class=&quot;language-text&quot;&gt;go get&lt;/code&gt;), and built-in concurrency primitives. Programs compiled with go do not have external dependencies by default.&lt;/p&gt;
&lt;p&gt;In Go, a &lt;strong&gt;package&lt;/strong&gt; is a collection of source files in the same directory. Functions, types, variables, etc, in a source file are visible to &lt;em&gt;all&lt;/em&gt; other source files in the same package. Package members that start with an uppercase letter are exported by that package.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;module&lt;/strong&gt; is a collection of related packages. Modules are defined in &lt;code class=&quot;language-text&quot;&gt;go.mod&lt;/code&gt; at the repository root. A repository typically contains a single module, but may contain multiple modules.&lt;/p&gt;
&lt;p&gt;To initialize a new module, run &lt;code class=&quot;language-text&quot;&gt;go mod init&lt;/code&gt;. To build the module and copy the binary to the &lt;code class=&quot;language-text&quot;&gt;$GOPATH/bin&lt;/code&gt;, run &lt;code class=&quot;language-text&quot;&gt;go install&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://golang.org/&quot;&gt;Official Go website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[The Goal: A Business Graphic Novel by Eliyahu Goldratt]]></title><description><![CDATA[The Goal: A Business Graphic Novel The Goal: A Business Graphic Novel is an adaptation of the book The Goal: A Process of Ongoing…]]></description><link>https://www.jamestharpe.com/book-goal-business-graphic-novel/</link><guid isPermaLink="false">https://www.jamestharpe.com/book-goal-business-graphic-novel/</guid><pubDate>Sat, 06 Jun 2020 13:40:11 GMT</pubDate><content:encoded>&lt;h1&gt;The Goal: A Business Graphic Novel&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;The Goal: A Business Graphic Novel&lt;/strong&gt; is an adaptation of the book &lt;strong&gt;The Goal: A Process of Ongoing Improvement&lt;/strong&gt; by Dwight Jon Zimmerman and Dean Motter.&lt;/p&gt;
&lt;h2&gt;Key Lessons from The Goal&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The Goal is to make money&lt;/strong&gt; (this is a business book, after all). To remain competitive, businesses must continuously and systematically improve their operations. The theory of constraints provides a model to continuously identify and improve systems as they relate to The Goal.&lt;/p&gt;
&lt;p&gt;The theory of constraints defines a model of how cash flows through a system:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Throughput&lt;/strong&gt; is the rate at which a system generates money through sales.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Inventory&lt;/strong&gt; is all of the money a system has invested in purchasing things it intends to sell but hasn&apos;t sold; this includes anything from raw materials to finished products.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Operational expenses&lt;/strong&gt; are all of the money a system spends in order to convert &lt;em&gt;inventory&lt;/em&gt; to &lt;em&gt;throughput&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In short: Throughput is money in, inventory is money out, and operational expenses are money that is &quot;stuck&quot; in the system.&lt;/p&gt;
&lt;p&gt;The process of converting inventory to throughput is constrained by one or more bottlenecks. A &lt;strong&gt;bottleneck&lt;/strong&gt; is a resource with less capacity than the demand placed upon it. Bottlenecks aren&apos;t good or bad, they&apos;re reality.&lt;/p&gt;
&lt;p&gt;&quot;The Goal&quot; (to make money) therefore translates to &lt;em&gt;increasing throughput while reducing inventory and operational expenses simultaneously&lt;/em&gt;.  Numbers not based on the constraints of the system are meaningless; &lt;em&gt;producing&lt;/em&gt; work and &lt;em&gt;profiting&lt;/em&gt; from it are two very different things.&lt;/p&gt;
&lt;p&gt;A critical mistake many companies make is to optimize throughput, inventory, or operational expenses in isolation which can harm the system as a whole. For example, a reduction in operational expenses may look like a success &quot;on paper&quot; but if it leads to quality issues and an increase in returns, the system is not improved.&lt;/p&gt;
&lt;h3&gt;Continuous Improvement with the Theory of Constraints&lt;/h3&gt;
&lt;p&gt;Time lost on a bottleneck directly equates to &lt;em&gt;reduced throughput&lt;/em&gt; and includes defects produced both by the bottleneck and prior to the bottleneck because defective throughput will have to pass through the bottleneck again.&lt;/p&gt;
&lt;p&gt;Bottleneck cost (&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;c&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.43056em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;c&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;) is the system&apos;s total expenses (&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;$&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\$&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.80556em;vertical-align:-0.05556em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;$&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;), divided by the bottleneck&apos;s production hours (&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;h&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.69444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;h&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;), or &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;$&lt;/mi&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;/&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;c = \$/h&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.43056em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;h&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;. For example, if a system&apos;s total expenses are $1,000,000/year and a bottleneck is operational for 7,200 hours/year, the bottleneck cost is &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;$&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;mn&gt;000&lt;/mn&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;mn&gt;000&lt;/mn&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;/&lt;/mi&gt;&lt;mn&gt;7&lt;/mn&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;mn&gt;200&lt;/mn&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mtext&gt; &lt;/mtext&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;$&lt;/mi&gt;&lt;mn&gt;139&lt;/mn&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;/&lt;/mi&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\$1,000,000/7,200 hours = ~\$139/year&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace nobreak&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.03588em;&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;. Note that as utilization of the bottleneck decreases, the cost to the system increases.&lt;/p&gt;
&lt;h4&gt;Ways to Get the Most from a Bottleneck&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Reduce defects processed by the bottleneck&lt;/li&gt;
&lt;li&gt;Reduce idle time of the bottleneck (but not at the expense of maintenance!)&lt;/li&gt;
&lt;li&gt;Prioritize only what contributes to &lt;em&gt;throughput&lt;/em&gt;, not to &lt;em&gt;inventory&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Distribute or reduce the load through alternative processes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It&apos;s okay to slow down steps that proceed the bottleneck to reduce defects sent to the bottleneck or to &quot;get around&quot; the bottleneck, as long as those steps do not become slower than the bottleneck (thus becoming the bottleneck). &lt;/p&gt;
&lt;p&gt;When a bottleneck&apos;s predecessor exceeds throughput, inventory is created; inventory increases tend to increase operational expenses as well. Running a non-bottleneck at maximum capacity is therefore a waste. Only bottlenecks should be utilized to full capacity. To &quot;subordinate non-bottleneck resources to bottlenecks&quot; is to run non-bottleneck resources at the rate of throughput as constrained by the bottleneck.&lt;/p&gt;
&lt;h3&gt;Theory of Constraints: Focus Steps&lt;/h3&gt;
&lt;div class=&quot;mermaid&quot;&gt;graph TB
    Identify[1. Identify &lt;br/&gt;Constraints] --&gt; Decide[2. Decide how to &lt;br/&gt;fully utilize the &lt;br/&gt;constraints]
		Decide --&gt; Subordinate[3. Subordinate &lt;br/&gt;everything else to &lt;br/&gt;that decision]
		Subordinate --&gt; Elevate[4. Elevate the &lt;br/&gt;constraints]
		Elevate --&gt;|Step five: Go back &lt;br/&gt;to step one| Identify&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Learn 3D printing]]></title><description><![CDATA[Notes on 3D Printing Process to 3D Print a Design Create or download a 3D design, typically as an STL file. "Slice" the design with a slicer…]]></description><link>https://www.jamestharpe.com/3d-printing/</link><guid isPermaLink="false">https://www.jamestharpe.com/3d-printing/</guid><pubDate>Tue, 26 May 2020 13:13:11 GMT</pubDate><content:encoded>&lt;h1&gt;Notes on 3D Printing&lt;/h1&gt;
&lt;h2&gt;Process to 3D Print a Design&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Create or download a 3D design, typically as an STL file.&lt;/li&gt;
&lt;li&gt;&quot;Slice&quot; the design with a slicer to produce a g-code file.&lt;/li&gt;
&lt;li&gt;Load the g-code file to the printer&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Tips:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Closely monitor the print as it begins and check on it periodically&lt;/li&gt;
&lt;li&gt;Clean the printer bed between prints with a small amount of rubbing alcohol and a microfiber cloth&lt;/li&gt;
&lt;li&gt;A light dusting of cheap hairspray can improve adhesion, especially for glass beds&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;3D Printing Terminology&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;G-code file:&lt;/strong&gt; A file that contains the step-by-step instructions&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Raft:&lt;/strong&gt; A horizontal mesh printed before the first layer to improve bed adhesion or strengthen an otherwise weak base structure. Causes a rough finish on the bottom layer. Often used with ABS filament to prevent warping.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Slicer:&lt;/strong&gt; Software that converts a 3D model into layer-by-layer print instructions. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;STL file:&lt;/strong&gt; A &quot;stereolithography&quot; file that defines a set of 3-dimensional design in a layer-by-layer fashion.&lt;/li&gt;
&lt;li&gt;Each filament will specify temperatures and other conditions required for successful prints&lt;/li&gt;
&lt;li&gt;Clean the printer bed between uses with a small amount of alcohol and a microfiber cloth&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Online Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCVc6AHfGw9b2zOE_ZGfmsnw&quot;&gt;Make Anything YouTube Channel&lt;/a&gt; has a lot of fun experiments and projects, plus a great community of helpful enthusiasts.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.thingiverse.com/&quot;&gt;MakerBot Thingiverse&lt;/a&gt; has thousands of free, downloadable 3D designs.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ultimaker.com/software/ultimaker-cura&quot;&gt;Ultimaker Cura&lt;/a&gt; is a free slicer that works with most printers.&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[AWS Identity and Access Management (IAM)]]></title><description><![CDATA[AWS Identity and Access Management (IAM) IAM is a global service (no need to set a region) that completely manages all AWS Security "in the…]]></description><link>https://www.jamestharpe.com/aws-iam/</link><guid isPermaLink="false">https://www.jamestharpe.com/aws-iam/</guid><pubDate>Fri, 19 Apr 2019 19:55:30 GMT</pubDate><content:encoded>&lt;h1&gt;AWS Identity and Access Management (IAM)&lt;/h1&gt;
&lt;p&gt;IAM is a global service (no need to set a region) that completely manages all AWS Security &quot;in the cloud&quot; (as opposed to &quot;of the cloud&quot;).&lt;/p&gt;
&lt;p&gt;IAM Consists of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Users&lt;/strong&gt; are intended to represent an actual person. Users can be part of a Group or have policies attached directly.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Groups&lt;/strong&gt; are collections of users, typically by function (dev, dba, etc), with a set of policies attached&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Roles&lt;/strong&gt; are for internal usage within AWS (assigned to AWS objects, e.g. an EC2 instance, though users can assume roles as well)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Policies&lt;/strong&gt; are sets of access permissions to AWS resources&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;IAM Federation&lt;/strong&gt; allows a company to integrate its identity provider (e.g. Active Directory) with IAM to supply identity/authentication.&lt;/p&gt;
&lt;p&gt;IAM &lt;em&gt;does not&lt;/em&gt; include Security Groups. &lt;strong&gt;Security Groups&lt;/strong&gt; are part of EC2 and act as a firewall around your EC2 instances by defining the ports, protocols, and IP addresses that can be used to access the instance.&lt;/p&gt;
&lt;h2&gt;IAM Best Practices&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Never us root account&lt;/li&gt;
&lt;li&gt;Follow the Principle of Least Privilege &lt;/li&gt;
&lt;li&gt;One user per person - Don&apos;t share&lt;/li&gt;
&lt;li&gt;On role per application - don&apos;t reuse&lt;/li&gt;
&lt;li&gt;Never put credentials in code&lt;/li&gt;
&lt;li&gt;Never use root IAM credentials (create an admin user instead)&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Unit Testing]]></title><description><![CDATA[Unit Tests Unit tests are tests that run in isolation from other tests. Unit tests are typically written by developers to test their own…]]></description><link>https://www.jamestharpe.com/unit-testing/</link><guid isPermaLink="false">https://www.jamestharpe.com/unit-testing/</guid><pubDate>Fri, 15 Mar 2019 17:17:45 GMT</pubDate><content:encoded>&lt;h1&gt;Unit Tests&lt;/h1&gt;
&lt;p&gt;Unit tests are tests that run in isolation from other tests. Unit tests are typically written by developers to test their own code and expected to run frequently and quickly.&lt;/p&gt;
&lt;h2&gt;Semantics: The &quot;Unit&quot; in Unit Tests&lt;/h2&gt;
&lt;p&gt;The &quot;unit&quot; of isolation for a unit test &lt;em&gt;is the test its self&lt;/em&gt;. Some developers &lt;em&gt;wrongly&lt;/em&gt; consider the unit of isolation to be the system under test (the class, module, or function). This semantic difference of understanding can sometimes overwhelm otherwise productive discussions, especially when the difference is not explicitly stated. &lt;/p&gt;
&lt;h3&gt;Why is it Wrong to Consider the System Under Test the Unit of Isolation?&lt;/h3&gt;
&lt;p&gt;The test is a more practical unit of isolation because it does not encourage needless isolation of the system under test, and instead focuses the developer on the desired &lt;em&gt;behavior&lt;/em&gt; to be tested.&lt;/p&gt;
&lt;p&gt;Software&apos;s behavior, not code, is what gives it value. Code may be endlessly refactored and rewritten, but it is only valuable as long as the &lt;em&gt;behavior&lt;/em&gt; is correct. We therefore find more value in a definition that encourages us to test &lt;em&gt;behavior&lt;/em&gt; in isolation over one that encourages us to test code - which can change endlessly - in isolation.&lt;/p&gt;
&lt;h3&gt;Practical Conversations with Purists&lt;/h3&gt;
&lt;p&gt;When discussing unit tests, I occasionally run into a purist that insists that the system under test, not the test its self, is the unit of isolation. Rather than argue, I&apos;m happy to accept their definition if I can be allowed to introduce one of my own: Developer Test.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Developer Test&lt;/strong&gt;: An automated test written by a developer to test the behavior of their application.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This generally helps to focus on what&apos;s important without requiring a concession.&lt;/p&gt;
&lt;h2&gt;Unit Test Structure&lt;/h2&gt;
&lt;p&gt;Though not strictly required, it&apos;s generally best for unit tests to follow a three-step pattern that resembles a small finite state machine consisting of an initial state, a single action, then finally a desired state.&lt;/p&gt;
&lt;p&gt;This pattern usually goes by either of two mnemonics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Arrange, Act, Assert&lt;/li&gt;
&lt;li&gt;Given, When, Then&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In both cases we define an initial state, perform an action, and confirm the result. I personally prefer the declarative &quot;Given, When, Then&quot; over the imperative &quot;Arrange, Act, Assert&quot; because it more easily forms a sentence: &lt;em&gt;Given a bank balance of &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;100&lt;/mn&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;mi&gt;w&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mi&gt;w&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;w&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;100, when I withdraw&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8888799999999999em;vertical-align:-0.19444em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02691em;&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02691em;&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02691em;&quot;&gt;w&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;20, then the bank balance is $80&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;Effective Unit Tests&lt;/h2&gt;
&lt;p&gt;An effective unit test suite...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Is likely to catch a regression error&lt;/li&gt;
&lt;li&gt;Won&apos;t often produce false positives (including during a refactor)&lt;/li&gt;
&lt;li&gt;Saves more time than it requires to maintain&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Characteristics of Good Unit Tests&lt;/h3&gt;
&lt;p&gt;Good unit tests...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cover a single behavior, observable from the end user&apos;s perspective&lt;/li&gt;
&lt;li&gt;Are deterministic, predictable, and repeatable&lt;/li&gt;
&lt;li&gt;Verify &lt;em&gt;business&lt;/em&gt; requirements&lt;/li&gt;
&lt;li&gt;Are run frequently without disrupting workflow&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Tips to Write Effective Unit Tests&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Write the tests first&lt;/li&gt;
&lt;li&gt;Focus on the &lt;em&gt;behavior&lt;/em&gt; you want rather, not internals&lt;/li&gt;
&lt;li&gt;Use natural language to name tests&lt;/li&gt;
&lt;li&gt;Don&apos;t couple tests to implementation details unless absolutely necessary&lt;/li&gt;
&lt;li&gt;Don&apos;t mock dependencies unless there&apos;s an obvious benefit (e.g. speed, determinism)&lt;/li&gt;
&lt;li&gt;Don&apos;t rely on a test unless you&apos;ve seen if fail&lt;/li&gt;
&lt;li&gt;Don&apos;t bother to test trivial code (e.g. property getters/setters)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Ineffective Unit Test &quot;Smells&quot;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Failing tests are difficult to debug&lt;/li&gt;
&lt;li&gt;Tests fail randomly or unpredictably&lt;/li&gt;
&lt;li&gt;Changes in implementation require changes in tests (tightly coupled)&lt;/li&gt;
&lt;li&gt;Developers avoid running tests&lt;/li&gt;
&lt;li&gt;Test failures aren&apos;t a priority&lt;/li&gt;
&lt;li&gt;You must mock the internals of your domain model to write tests&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Additional Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.extremeprogramming.org/rules/unittests.html&quot;&gt;Extreme Programming: Unit Tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.martinfowler.com/bliki/UnitTest.html&quot;&gt;Unit Test by Martin Fowler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://martinfowler.com/bliki/TestPyramid.html&quot;&gt;The Test Pyramid by Martin Fowler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[DynamoDB & CloudFormation: Add a Local Secondary Index to Existing Table]]></title><description><![CDATA[DynamoDB Local Secondary Index A local secondary index essentially gives DynamoDB tables an additional sort key by which to query data. I…]]></description><link>https://www.jamestharpe.com/aws-dynamodb-local-secondary-index-existing-table-cloudformation/</link><guid isPermaLink="false">https://www.jamestharpe.com/aws-dynamodb-local-secondary-index-existing-table-cloudformation/</guid><pubDate>Sun, 27 Jan 2019 14:05:47 GMT</pubDate><content:encoded>&lt;h1&gt;DynamoDB Local Secondary Index&lt;/h1&gt;
&lt;p&gt;A &lt;a href=&quot;https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LSI.html&quot;&gt;local secondary index&lt;/a&gt; essentially gives DynamoDB tables an additional sort key by which to query data. I recently needed to add a local secondary index to an existing DynamoDB table through CloudFormation so that I could query objects by the &lt;code class=&quot;language-text&quot;&gt;modified&lt;/code&gt; column value without scanning. Unfortunately, this isn&apos;t as easy as simply adding the &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-lsi.html&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;LocalSecondaryIndexes&lt;/code&gt; element&lt;/a&gt; to the CloudFormation script.&lt;/p&gt;
&lt;p&gt;Adding a local secondary index requires replacing the table, which creates the challenge of preserving the table data during the upgrade.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Here&apos;s what I learned:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LocalSecondaryIndex CloudFormation YAML Syntax&lt;/li&gt;
&lt;li&gt;How to troubleshoot the error &lt;code class=&quot;language-text&quot;&gt;Property AttributeDefinitions is inconsistent with the KeySchema of the table and the secondary indexes&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;How to take DynamoDB table backups with the AWS CLI&lt;/li&gt;
&lt;li&gt;A work-around to prevent the error &lt;code class=&quot;language-text&quot;&gt;CloudFormation cannot update a stack when a custom-named resource requires replacing...&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Basic JSON parsing with &lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;jq&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Initial Table Schema: &lt;code class=&quot;language-text&quot;&gt;Jobs&lt;/code&gt; Table&lt;/h2&gt;
&lt;p&gt;The original schema for the &lt;code class=&quot;language-text&quot;&gt;Jobs&lt;/code&gt; table consisted of a generated &lt;code class=&quot;language-text&quot;&gt;jobId&lt;/code&gt; partition key and &lt;code class=&quot;language-text&quot;&gt;jobName&lt;/code&gt; sort key. The system is used for invoicing, so its important for users to quickly find a Job by its ID or name so they made a good choice fot they key schema.&lt;/p&gt;
&lt;p&gt;Here is the CloudFormation code that originally defined the &lt;code class=&quot;language-text&quot;&gt;Jobs&lt;/code&gt; table&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# app.cloudformation.yaml&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;JobsDynamoDBTable&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;token key atrule&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;AWS::DynamoDB::Table&apos;&lt;/span&gt;
	&lt;span class=&quot;token key atrule&quot;&gt;Properties&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;token key atrule&quot;&gt;TableName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Jobs
		&lt;span class=&quot;token key atrule&quot;&gt;AttributeDefinitions&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;
				&lt;span class=&quot;token key atrule&quot;&gt;AttributeName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; jobId
				&lt;span class=&quot;token key atrule&quot;&gt;AttributeType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; S
			&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;
				&lt;span class=&quot;token key atrule&quot;&gt;AttributeName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; name
				&lt;span class=&quot;token key atrule&quot;&gt;AttributeType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; S
		&lt;span class=&quot;token key atrule&quot;&gt;KeySchema&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;
				&lt;span class=&quot;token key atrule&quot;&gt;AttributeName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; jobId
				&lt;span class=&quot;token key atrule&quot;&gt;KeyType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; HASH
			&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;
				&lt;span class=&quot;token key atrule&quot;&gt;AttributeName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; name
				&lt;span class=&quot;token key atrule&quot;&gt;KeyType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; RANGE
		&lt;span class=&quot;token key atrule&quot;&gt;ProvisionedThroughput&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;token key atrule&quot;&gt;ReadCapacityUnits&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
			&lt;span class=&quot;token key atrule&quot;&gt;WriteCapacityUnits&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Recently, the client asked for some reporting to be added to the application that requires querying jobs by their last modified date. No problem, that&apos;s what local secondary indexes were built for.&lt;/p&gt;
&lt;h2&gt;Add the LocalSecondaryIndex to the CloudFormation Script&lt;/h2&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;LocalSecondaryIndexes&lt;/code&gt; element for DynamoDB in CloudFormation is straight-forward. Provide a descriptive key name, alternate key schema, and Projection (columns that should be available in the index).&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;LocalSecondaryIndexes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;IndexName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; jobId&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;modified&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;index
    &lt;span class=&quot;token key atrule&quot;&gt;KeySchema&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;AttributeName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; jobId
        &lt;span class=&quot;token key atrule&quot;&gt;KeyType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; HASH
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;AttributeName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; modified
        &lt;span class=&quot;token key atrule&quot;&gt;KeyType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; RANGE
    &lt;span class=&quot;token key atrule&quot;&gt;Projection&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;ProjectionType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ALL&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An attempt to deploy this change will result in an error:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;An error occurred: JobsDynamoDBTable - Property AttributeDefinitions is inconsistent with the KeySchema of the table and the secondary indexes.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Of course! The &lt;code class=&quot;language-text&quot;&gt;AttributeDefinitions&lt;/code&gt; must be updated to include the &lt;code class=&quot;language-text&quot;&gt;modified&lt;/code&gt; property. Once updated, the entire &lt;code class=&quot;language-text&quot;&gt;JobsDynamoDBTable&lt;/code&gt; CloudFormation resource element now looked like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# app.cloudformation.yaml&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;JobsDynamoDBTable&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;token key atrule&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;AWS::DynamoDB::Table&apos;&lt;/span&gt;
	&lt;span class=&quot;token key atrule&quot;&gt;Properties&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;token key atrule&quot;&gt;TableName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Jobs
		&lt;span class=&quot;token key atrule&quot;&gt;AttributeDefinitions&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;
				&lt;span class=&quot;token key atrule&quot;&gt;AttributeName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; jobId
				&lt;span class=&quot;token key atrule&quot;&gt;AttributeType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; S
			&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;
				&lt;span class=&quot;token key atrule&quot;&gt;AttributeName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; name
				&lt;span class=&quot;token key atrule&quot;&gt;AttributeType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; S
			&lt;span class=&quot;token comment&quot;&gt;# Required for LocalSecondaryIndex&lt;/span&gt;
			&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;
				&lt;span class=&quot;token key atrule&quot;&gt;AttributeName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; modified
				&lt;span class=&quot;token key atrule&quot;&gt;AttributeType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; N
		&lt;span class=&quot;token key atrule&quot;&gt;KeySchema&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;
				&lt;span class=&quot;token key atrule&quot;&gt;AttributeName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; jobId
				&lt;span class=&quot;token key atrule&quot;&gt;KeyType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; HASH
			&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;
				&lt;span class=&quot;token key atrule&quot;&gt;AttributeName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; name
				&lt;span class=&quot;token key atrule&quot;&gt;KeyType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; RANGE
		&lt;span class=&quot;token comment&quot;&gt;# Make modified available as a sort key&lt;/span&gt;
		&lt;span class=&quot;token key atrule&quot;&gt;LocalSecondaryIndexes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;
				&lt;span class=&quot;token key atrule&quot;&gt;IndexName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; jobId&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;modified&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;index
				&lt;span class=&quot;token key atrule&quot;&gt;KeySchema&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
					&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;
						&lt;span class=&quot;token key atrule&quot;&gt;AttributeName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; jobId
						&lt;span class=&quot;token key atrule&quot;&gt;KeyType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; HASH
					&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;
						&lt;span class=&quot;token key atrule&quot;&gt;AttributeName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; modified
						&lt;span class=&quot;token key atrule&quot;&gt;KeyType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; RANGE
				&lt;span class=&quot;token key atrule&quot;&gt;Projection&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
					&lt;span class=&quot;token key atrule&quot;&gt;ProjectionType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ALL &lt;span class=&quot;token comment&quot;&gt;# Make All columns available in index&lt;/span&gt;
		&lt;span class=&quot;token key atrule&quot;&gt;ProvisionedThroughput&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;token key atrule&quot;&gt;ReadCapacityUnits&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
			&lt;span class=&quot;token key atrule&quot;&gt;WriteCapacityUnits&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Though the CloudFormation template now seems complete, deploying fails:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;An error occurred: JobsDynamoDBTable - CloudFormation cannot update a stack when a custom-named resource requires replacing. Rename Jobs and update the stack again.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Replace the a DynamoDB Resource&lt;/h2&gt;
&lt;p&gt;CloudFormation refuses to add the index to the DynamoDB table, so it must be replaced with a new table. However, with application data in the table, it can&apos;t simply be deleted. The plan, then, is to create a new table called &lt;code class=&quot;language-text&quot;&gt;Jobs.v1&lt;/code&gt; with the index, then to move data from &lt;code class=&quot;language-text&quot;&gt;Jobs&lt;/code&gt; to &lt;code class=&quot;language-text&quot;&gt;Jobs.v1&lt;/code&gt; and finally (optionally) delete the original &lt;code class=&quot;language-text&quot;&gt;Jobs&lt;/code&gt; table.&lt;/p&gt;
&lt;h3&gt;Retain the Original Table&lt;/h3&gt;
&lt;p&gt;A rename of the table will result in the original &lt;code class=&quot;language-text&quot;&gt;Jobs&lt;/code&gt; table being deleted. To prevent this, add &lt;code class=&quot;language-text&quot;&gt;DeletionPolicy: Retain&lt;/code&gt; to table object in your CloudFormation script and deploy. For safety sake, make a backup as well. Backups can be created in the AWS Console or via the CLI.&lt;/p&gt;
&lt;h4&gt;Create a DynamoDB Backup with the AWS CLI&lt;/h4&gt;
&lt;p&gt;Here&apos;s an example of how to create a backup using the AWS CLI:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ aws dynamodb create-backup &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
  --region&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;YOUR_REGION_HERE &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
  --table-name Jobs &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
  --backup-name Jobs-&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;+%Y%m%d_%H%M%S&apos;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&quot;BackupDetails&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;BackupCreationDateTime&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1548578121.641&lt;/span&gt;,
    &lt;span class=&quot;token string&quot;&gt;&quot;BackupName&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Jobs-20190127_033734&quot;&lt;/span&gt;,
    &lt;span class=&quot;token string&quot;&gt;&quot;BackupStatus&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;CREATING&quot;&lt;/span&gt;,
    &lt;span class=&quot;token string&quot;&gt;&quot;BackupType&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;USER&quot;&lt;/span&gt;,
    &lt;span class=&quot;token string&quot;&gt;&quot;BackupSizeBytes&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;123456&lt;/span&gt;,
    &lt;span class=&quot;token string&quot;&gt;&quot;BackupArn&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;arn:aws:dynamodb:us-east-1:123456789012:table/Jobs/backup/01548578121641-f46bes63&quot;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It&apos;s important to let the backup finish before proceeding with further changes, but the &lt;code class=&quot;language-text&quot;&gt;aws dynamodb backup&lt;/code&gt; command returns almost instantly because the backup operation is asynchronous. &lt;/p&gt;
&lt;p&gt;Waiting on the backup to complete can be done with a simple script and a little help from the &lt;code class=&quot;language-text&quot;&gt;jq&lt;/code&gt; utility.&lt;/p&gt;
&lt;p&gt;First, parse out the ARN using &lt;code class=&quot;language-text&quot;&gt;jq&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token assign-left variable&quot;&gt;backup_arn&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;aws dynamodb create-backup &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
  --region&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;YOUR_REGION_HERE &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
  --table-name Jobs &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
  --backup-name Jobs-&lt;span class=&quot;token punctuation&quot;&gt;$(&lt;/span&gt;date &lt;span class=&quot;token string&quot;&gt;&apos;+%Y%m%d_%H%M%S&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; jq &lt;span class=&quot;token string&quot;&gt;&apos;.BackupDetails.BackupArn&apos;&lt;/span&gt; -r&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# -r for &quot;raw&quot; returns value w/ out quotes&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, loop until the backup is no longer in a &lt;code class=&quot;language-text&quot;&gt;CREATING&lt;/code&gt; state:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token assign-left variable&quot;&gt;backup_status&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;CREATING&quot;&lt;/span&gt;
$ &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$backup_status&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;CREATING&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;... Waiting for backup to complete, backup_status=&quot;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$backup_status&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;token assign-left variable&quot;&gt;backup_status&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;aws dynamodb describe-backup &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
    --backup-arn $backup_arn &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
    --region&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;YOUR_REGION_HERE &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; jq &lt;span class=&quot;token string&quot;&gt;&apos;.BackupDescription.BackupDetails.BackupStatus&apos;&lt;/span&gt; -r&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;sleep&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;done&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Backup complete&quot;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;. Waiting &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; backup to complete, &lt;span class=&quot;token assign-left variable&quot;&gt;backup_status&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;CREATING
&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;. Waiting &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; backup to complete, &lt;span class=&quot;token assign-left variable&quot;&gt;backup_status&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;CREATING
&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;. Waiting &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; backup to complete, &lt;span class=&quot;token assign-left variable&quot;&gt;backup_status&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;CREATING
Backup complete

$&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Rename the Table&lt;/h3&gt;
&lt;p&gt;With the &lt;code class=&quot;language-text&quot;&gt;Retain&lt;/code&gt; policy and backup in place it&apos;s safe to rename the Jobs table and deploy. The first time I did this, I had forgotten to deploy the &lt;code class=&quot;language-text&quot;&gt;DeletionPolicy: Retain&lt;/code&gt; change in my CloudFormation and deleted the original table, along with all the data. &lt;strong&gt;Take backups!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The entire table definition now looks like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# app.cloudformation.yaml&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;JobsDynamoDBTableV1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# Renamed&lt;/span&gt;
	&lt;span class=&quot;token key atrule&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;AWS::DynamoDB::Table&apos;&lt;/span&gt;
	&lt;span class=&quot;token comment&quot;&gt;# Retain the table when deleting from CF Stack!&lt;/span&gt;
	&lt;span class=&quot;token key atrule&quot;&gt;DeletionPolicy&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Retain
	&lt;span class=&quot;token key atrule&quot;&gt;Properties&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;token key atrule&quot;&gt;TableName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Jobs.v1 &lt;span class=&quot;token comment&quot;&gt;# Renamed&lt;/span&gt;
		&lt;span class=&quot;token key atrule&quot;&gt;AttributeDefinitions&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;
				&lt;span class=&quot;token key atrule&quot;&gt;AttributeName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; jobId
				&lt;span class=&quot;token key atrule&quot;&gt;AttributeType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; S
			&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;
				&lt;span class=&quot;token key atrule&quot;&gt;AttributeName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; name
				&lt;span class=&quot;token key atrule&quot;&gt;AttributeType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; S
			&lt;span class=&quot;token comment&quot;&gt;# Required for LocalSecondaryIndex&lt;/span&gt;
			&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;
				&lt;span class=&quot;token key atrule&quot;&gt;AttributeName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; modified
				&lt;span class=&quot;token key atrule&quot;&gt;AttributeType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; N
		&lt;span class=&quot;token key atrule&quot;&gt;KeySchema&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;
				&lt;span class=&quot;token key atrule&quot;&gt;AttributeName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; jobId
				&lt;span class=&quot;token key atrule&quot;&gt;KeyType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; HASH
			&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;
				&lt;span class=&quot;token key atrule&quot;&gt;AttributeName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; name
				&lt;span class=&quot;token key atrule&quot;&gt;KeyType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; RANGE
		&lt;span class=&quot;token comment&quot;&gt;# Make modified available as a sort key&lt;/span&gt;
		&lt;span class=&quot;token key atrule&quot;&gt;LocalSecondaryIndexes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;
				&lt;span class=&quot;token key atrule&quot;&gt;IndexName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; jobId&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;modified&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;index
				&lt;span class=&quot;token key atrule&quot;&gt;KeySchema&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
					&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;
						&lt;span class=&quot;token key atrule&quot;&gt;AttributeName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; jobId
						&lt;span class=&quot;token key atrule&quot;&gt;KeyType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; HASH
					&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;
						&lt;span class=&quot;token key atrule&quot;&gt;AttributeName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; modified
						&lt;span class=&quot;token key atrule&quot;&gt;KeyType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; RANGE
				&lt;span class=&quot;token key atrule&quot;&gt;Projection&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 
					&lt;span class=&quot;token key atrule&quot;&gt;ProjectionType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ALL
		&lt;span class=&quot;token key atrule&quot;&gt;ProvisionedThroughput&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;token key atrule&quot;&gt;ReadCapacityUnits&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
			&lt;span class=&quot;token key atrule&quot;&gt;WriteCapacityUnits&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before deploying, update references to the &lt;code class=&quot;language-text&quot;&gt;Jobs&lt;/code&gt; table and &lt;code class=&quot;language-text&quot;&gt;JobsDynamoDBTable&lt;/code&gt; resource to &lt;code class=&quot;language-text&quot;&gt;Jobs.v1&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;JobsDynamoDBTableV1&lt;/code&gt;, respectively throughout your application and CloudFormation script.&lt;/p&gt;
&lt;h2&gt;Deploy and Migrate&lt;/h2&gt;
&lt;p&gt;The deployment will consist of two steps: The deployment its self, then the migration of the Jobs DynamoDB table to the Jobs.v1 table.&lt;/p&gt;
&lt;p&gt;The deployment of the CloudFormation template is simple:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;aws cloudformation deploy --template-file app.cloudformation.yaml --stack-name app&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once completed, the migration from the &lt;code class=&quot;language-text&quot;&gt;Jobs&lt;/code&gt; table to &lt;code class=&quot;language-text&quot;&gt;Jobs.v1&lt;/code&gt; can begin.&lt;/p&gt;
&lt;h3&gt;Copy All Rows from one DynamoDB Table to Another via CLI&lt;/h3&gt;
&lt;p&gt;To copy all the rows from one DynamoDB table to another uses two primary commands with the AWS CLI: &lt;code class=&quot;language-text&quot;&gt;aws dynamodb scan&lt;/code&gt; to retrieve rows from the source table and &lt;code class=&quot;language-text&quot;&gt;aws dynamodb batch-write-item&lt;/code&gt; to write records to the destination.&lt;/p&gt;
&lt;h4&gt;Limitations of &lt;code class=&quot;language-text&quot;&gt;batch-write-item&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Complicating matters is that &lt;code class=&quot;language-text&quot;&gt;batch-write-item&lt;/code&gt; can perform a maximum of 25 operations per call. Since the source table contains more than 25 records, we&apos;ll have to loop through.&lt;/p&gt;
&lt;h4&gt;Paginating Reads, 25 at a Time&lt;/h4&gt;
&lt;p&gt;Our migration script will retrieve 25 items at a time, write them to a file, then use &lt;code class=&quot;language-text&quot;&gt;batch-write-item&lt;/code&gt; to copy them to the destination. To &lt;a href=&quot;https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-pagination.html&quot;&gt;paginate&lt;/a&gt; through the data, both the &lt;code class=&quot;language-text&quot;&gt;--page-size&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;--max-items&lt;/code&gt; commands must be set to 25:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;aws dynamodb scan --profile hvh --region&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;us-east-1 &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
  --table-name Jobs &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
  --page-size &lt;span class=&quot;token number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
  --max-items &lt;span class=&quot;token number&quot;&gt;25&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This call can be wrapped in a loop to page through the data and the variables needed parsed using &lt;code class=&quot;language-text&quot;&gt;jq&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# migrate.sh&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;set&lt;/span&gt; -e
&lt;span class=&quot;token assign-left variable&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# do .. while equivalent&lt;/span&gt;
  &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;  Scanning page &lt;span class=&quot;token variable&quot;&gt;$page&lt;/span&gt;, up to 25 records in Jobs table&quot;&lt;/span&gt;
  &lt;span class=&quot;token assign-left variable&quot;&gt;scan_result&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;aws dynamodb scan --profile hvh --region&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;us-east-1 &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
    --table-name Jobs &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
    --page-size &lt;span class=&quot;token number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
    --max-items &lt;span class=&quot;token number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
    $starting_token&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$scan_result&lt;/span&gt;&quot;&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;# Get pagination token:&lt;/span&gt;
  &lt;span class=&quot;token assign-left variable&quot;&gt;next_token&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$scan_result&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; jq &lt;span class=&quot;token string&quot;&gt;&apos;.NextToken&apos;&lt;/span&gt; -r&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;# Set starting_token for next iteration (blank on first iteration)&lt;/span&gt;
  &lt;span class=&quot;token assign-left variable&quot;&gt;starting_token&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;--starting-token &lt;span class=&quot;token variable&quot;&gt;$next_token&lt;/span&gt;&quot;&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;# Break loop, if no more pages&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$next_token&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;null&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;break&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;# Increment page count&lt;/span&gt;
  &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;((&lt;/span&gt;page&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Transforming DynamoDB Scan Results to &lt;code class=&quot;language-text&quot;&gt;PutRequest&lt;/code&gt; Elements&lt;/h4&gt;
&lt;p&gt;Each item returned from &lt;code class=&quot;language-text&quot;&gt;aws dynamodb scan&lt;/code&gt; must be transformed into a &lt;code class=&quot;language-text&quot;&gt;PutRequest&lt;/code&gt; element for compatibility with &lt;code class=&quot;language-text&quot;&gt;batch-write-item&lt;/code&gt;. Each set of 25 scan results can be written to a temporary file then passed to &lt;code class=&quot;language-text&quot;&gt;batch-write-item&lt;/code&gt; to perform the insert. The entire, finished script now looks like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# migrate.sh&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;set&lt;/span&gt; -e
&lt;span class=&quot;token assign-left variable&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Copying all rows from Jobs to Jobs.v1, 25 rows at a time&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# do .. while equivalent&lt;/span&gt;
    &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;  Scanning page &lt;span class=&quot;token variable&quot;&gt;$page&lt;/span&gt;, up to 25 records in Jobs table&quot;&lt;/span&gt;
    &lt;span class=&quot;token assign-left variable&quot;&gt;scan_result&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;aws dynamodb scan --profile hvh --region&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;us-east-1 &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
        --table-name Jobs &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
        --page-size &lt;span class=&quot;token number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
        --max-items &lt;span class=&quot;token number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
        $starting_token&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;# Transform the scan result to a PutRequest:&lt;/span&gt;
    &lt;span class=&quot;token assign-left variable&quot;&gt;put_req_json&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; $scan_result &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; jq &lt;span class=&quot;token string&quot;&gt;&apos;[.Items | .[] | { PutRequest: { Item: . } }]&apos;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# Get number of records:&lt;/span&gt;
    &lt;span class=&quot;token assign-left variable&quot;&gt;rec_count&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; $put_req_json &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; jq &lt;span class=&quot;token string&quot;&gt;&apos;length&apos;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# Get pagination token:&lt;/span&gt;
    &lt;span class=&quot;token assign-left variable&quot;&gt;next_token&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$scan_result&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; jq &lt;span class=&quot;token string&quot;&gt;&apos;.NextToken&apos;&lt;/span&gt; -r&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;# Set starting_token for next iteration (blank on first iteration)&lt;/span&gt;
    &lt;span class=&quot;token assign-left variable&quot;&gt;starting_token&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;--starting-token &lt;span class=&quot;token variable&quot;&gt;$next_token&lt;/span&gt;&quot;&lt;/span&gt;

    &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;  Writing &lt;span class=&quot;token variable&quot;&gt;$rec_count&lt;/span&gt; records to temporary file&quot;&lt;/span&gt;
    &lt;span class=&quot;token assign-left variable&quot;&gt;tmp_file_name&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Jobs.v1.&lt;span class=&quot;token variable&quot;&gt;$page&lt;/span&gt;.json&quot;&lt;/span&gt;
    &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;{
        &quot;Jobs.v1&quot;: &apos;&lt;/span&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;${put_req_json}&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;&apos;
    }&apos; &gt; &quot;&lt;/span&gt;Jobs.v1.&lt;span class=&quot;token variable&quot;&gt;$page&lt;/span&gt;.json&lt;span class=&quot;token string&quot;&gt;&quot;

    echo &quot;&lt;/span&gt;  Writing &lt;span class=&quot;token variable&quot;&gt;$rec_count&lt;/span&gt; to Jobs.v1&lt;span class=&quot;token string&quot;&gt;&quot;
    aws dynamodb batch-write-item \
        --region=YOUR_REGION_HERE \
        --request-items file://&quot;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$tmp_file_name&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot; \
    | sed &apos;s/^/  /&apos; # Indent output

    echo &quot;&lt;/span&gt;  Deleting temporary &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;
    rm &quot;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$tmp_file_name&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;

    # Break loop, if no more pages
    [[ &quot;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$next_token&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot; != &quot;&lt;/span&gt;null&lt;span class=&quot;token string&quot;&gt;&quot; ]] || break
    # Increment page count
    &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;((&lt;/span&gt;page&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;))&lt;/span&gt;&lt;/span&gt;
done

echo &quot;&lt;/span&gt;Copied all rows from Jobs to Jobs.v1&quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Clean Up: Delete the Original Table (optional)&lt;/h2&gt;
&lt;p&gt;The original &lt;code class=&quot;language-text&quot;&gt;Job&lt;/code&gt; table is no longer in use, and may be deleted safely at this point:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;aws dynamodb delete-table &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
  --region&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;YOUR_REGION_HERE &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;
  --table-name Jobs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&apos;s it! The original &lt;code class=&quot;language-text&quot;&gt;Jobs&lt;/code&gt; table has been migrated to &lt;code class=&quot;language-text&quot;&gt;Jobs.v1&lt;/code&gt; with a Local Secondary Index applied and the original table removed.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Database as Code: Flyway & MySQL on Cloud Foundry]]></title><description><![CDATA[Recipe: Database as Code with Flyway & MySQL on Cloud Foundry This recipe is illustrated in the PAL Tracker example project. 1. Provision…]]></description><link>https://www.jamestharpe.com/cloud-foundry-database-as-code-flyway/</link><guid isPermaLink="false">https://www.jamestharpe.com/cloud-foundry-database-as-code-flyway/</guid><pubDate>Tue, 15 Jan 2019 12:09:18 GMT</pubDate><content:encoded>&lt;h1&gt;Recipe: Database as Code with Flyway &amp;#x26; MySQL on Cloud Foundry&lt;/h1&gt;
&lt;p&gt;This recipe is illustrated in the &lt;a href=&quot;https://github.com/jamestharpe/pal-tracker&quot;&gt;PAL Tracker&lt;/a&gt; example project.&lt;/p&gt;
&lt;h2&gt;1. Provision and Bind MySQL in Cloud Foundry&lt;/h2&gt;
&lt;p&gt;Use &lt;code class=&quot;language-text&quot;&gt;cf marketplace&lt;/code&gt; to find the appropriate service and provisioning options for MySQL, then use &lt;code class=&quot;language-text&quot;&gt;cf create-service&lt;/code&gt; to provision the service:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ cf marketplace
Getting services from marketplace &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; org some-org / space develop as you@example.com&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
OK

&lt;span class=&quot;token function&quot;&gt;service&lt;/span&gt;               plans                  description
&lt;span class=&quot;token comment&quot;&gt;# ...&lt;/span&gt;
p-mysql               100mb, 1gb             A DBaaS
&lt;span class=&quot;token comment&quot;&gt;# ...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the example above, the &lt;code class=&quot;language-text&quot;&gt;p-mysql&lt;/code&gt; service is available. Provision it with &lt;code class=&quot;language-text&quot;&gt;cf create-service&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;cf create-service p-mysql 100mb pal-tracker-db&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;cf create-service&lt;/code&gt; call will return immediately, before the service is provisioned. To check the status use &lt;code class=&quot;language-text&quot;&gt;cf service&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ cf &lt;span class=&quot;token function&quot;&gt;service&lt;/span&gt; pal-tracker-db

Service instance: pal-tracker-db
Service: p-mysql
Plan: 100mb
Description: MySQL databases on demand
Documentation url:
Dashboard: https://p-mysql.example.com/manage/instances/abcd-ef12-3456

Last Operation
Status: create succeeded
Message:
Started: &lt;span class=&quot;token number&quot;&gt;2019&lt;/span&gt;-01-15T22:59:07Z
Updated: &lt;span class=&quot;token number&quot;&gt;2019&lt;/span&gt;-01-15T22:59:26Z&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once the service is ready, bind it to the &lt;strong&gt;pal-tracker&lt;/strong&gt; application:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;cf bind-service pal-tracker pal-tracker-db &lt;span class=&quot;token comment&quot;&gt;# Service info added to VCAP_SERVICES env var&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once the service is bound, the &lt;strong&gt;VCAP_SERVICES&lt;/strong&gt; environment variable will contain details about the service:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ cf &lt;span class=&quot;token function&quot;&gt;env&lt;/span&gt; my-app
Getting &lt;span class=&quot;token function&quot;&gt;env&lt;/span&gt; variables &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; app pal-tracker &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; org some-org / space some-space as
you&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
OK
System-Provided:

&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token string&quot;&gt;&quot;VCAP_SERVICES&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token string&quot;&gt;&quot;p.mysql&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;token string&quot;&gt;&quot;label&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;p.mysql&quot;&lt;/span&gt;,
			&lt;span class=&quot;token string&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;pal-tracker-db&quot;&lt;/span&gt;,
			&lt;span class=&quot;token string&quot;&gt;&quot;plan&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;db-small&quot;&lt;/span&gt;,
			&lt;span class=&quot;token string&quot;&gt;&quot;provider&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; null,
			&lt;span class=&quot;token string&quot;&gt;&quot;syslog_drain_url&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; null,
			&lt;span class=&quot;token string&quot;&gt;&quot;tags&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;mysql&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;,
			&lt;span class=&quot;token string&quot;&gt;&quot;credentials&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;token string&quot;&gt;&quot;hostname&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;10.0.0.20&quot;&lt;/span&gt;,
			&lt;span class=&quot;token string&quot;&gt;&quot;jdbcUrl&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;jdbc:mysql://10.0.0.20:3306/service_instance_db?user=fefcbe8360854a18a7994b870e7b0bf5&lt;span class=&quot;token entity&quot; title=&quot;\u0026&quot;&gt;\u0026&lt;/span&gt;password=z9z6eskdbs1rhtxt&quot;&lt;/span&gt;,
			&lt;span class=&quot;token string&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;service_instance_db&quot;&lt;/span&gt;,
			&lt;span class=&quot;token string&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;z9z6eskdbs1rhtxt&quot;&lt;/span&gt;,
			&lt;span class=&quot;token string&quot;&gt;&quot;port&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3306&lt;/span&gt;,
			&lt;span class=&quot;token string&quot;&gt;&quot;uri&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;mysql://fefcbe8360854a18a7994b870e7b0bf5:z9z6eskdbs1rhtxt@10.0.0.20:3306/service_instance_db?reconnect=true&quot;&lt;/span&gt;,
			&lt;span class=&quot;token string&quot;&gt;&quot;username&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;fefcbe8360854a18a7994b870e7b0bf5&quot;&lt;/span&gt;
			&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;,
			&lt;span class=&quot;token string&quot;&gt;&quot;volume_mounts&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;2. Add the Database &quot;as code&quot; to the Project&lt;/h2&gt;
&lt;p&gt;Create a &lt;strong&gt;databases/tracker&lt;/strong&gt; folder in the application root then create a file called &lt;strong&gt;create_databases.sql&lt;/strong&gt; there:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; -p database/tracker
&lt;span class=&quot;token function&quot;&gt;touch&lt;/span&gt; database/tracker/create_databases.sql&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Edit the &lt;strong&gt;create_databases.sql&lt;/strong&gt; file to create &lt;strong&gt;tracker_dev&lt;/strong&gt; and &lt;strong&gt;tracker_test&lt;/strong&gt; databases:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sql&quot;&gt;&lt;pre class=&quot;language-sql&quot;&gt;&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;-- Delete DBs if they exist&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DATABASE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;EXISTS&lt;/span&gt; tracker_dev&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DATABASE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;EXISTS&lt;/span&gt; tracker_test&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;-- Create the databases&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DATABASE&lt;/span&gt; tracker_dev&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DATABASE&lt;/span&gt; tracker_test&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;-- Add a user with full access to both DBs&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;USER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;tracker&apos;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;@&apos;localhost&apos;&lt;/span&gt;
  IDENTIFIED &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;PRIVILEGES&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;ON&lt;/span&gt; tracker_dev&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;tracker&apos;&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;@&apos;localhost&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;PRIVILEGES&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;ON&lt;/span&gt; tracker_test&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;tracker&apos;&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;@&apos;localhost&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Add the first Migration&lt;/h3&gt;
&lt;p&gt;Add a file called &lt;code class=&quot;language-text&quot;&gt;V1__initial_schema.sql&lt;/code&gt; to a folder called &lt;strong&gt;migrations&lt;/strong&gt; in the &lt;strong&gt;database/tracker&lt;/strong&gt; folder, then add a &lt;code class=&quot;language-text&quot;&gt;CREATE TABLE&lt;/code&gt; statement to store &lt;code class=&quot;language-text&quot;&gt;TimeEntry&lt;/code&gt; objects.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sql&quot;&gt;&lt;pre class=&quot;language-sql&quot;&gt;&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;TABLE&lt;/span&gt; time_entries &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
  id         &lt;span class=&quot;token keyword&quot;&gt;BIGINT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AUTO_INCREMENT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  project_id &lt;span class=&quot;token keyword&quot;&gt;BIGINT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;-- projectId on TimeEntry&lt;/span&gt;
  user_id    &lt;span class=&quot;token keyword&quot;&gt;BIGINT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;-- userId on TimeEntry&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;date&lt;/span&gt;       &lt;span class=&quot;token keyword&quot;&gt;DATE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  hours      &lt;span class=&quot;token keyword&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;ENGINE&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;innodb&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;CHARSET&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; utf8&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;3. Create and Migrate a Local MySQL Databases&lt;/h2&gt;
&lt;p&gt;To create the test and development databases, simply pass the &lt;strong&gt;create_databases.sql&lt;/strong&gt; file to MySQL on the command line:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;mysql -uroot &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; databases/tracker/create_databases.sql&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add the &lt;strong&gt;time_entries&lt;/strong&gt; table to both databases using the Flyway CLI:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;flyway -url&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;jdbc:mysql://localhost:3306/tracker_dev&quot;&lt;/span&gt; -locations&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;filesystem:databases/tracker clean migrate
flyway -url&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;jdbc:mysql://localhost:3306/tracker_test&quot;&lt;/span&gt; -locations&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;filesystem:databases/tracker clean migrate&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The databases can now be inspected with MySQL.&lt;/p&gt;
&lt;p&gt;Open MySQL on the CLI:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;mysql -u tracker&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Inspect the database:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sql&quot;&gt;&lt;pre class=&quot;language-sql&quot;&gt;&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;use&lt;/span&gt; tracker_dev&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;describe&lt;/span&gt; time_entries&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token comment&quot;&gt;------------+--------------+------+-----+---------+----------------+&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; Field      &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;Type&lt;/span&gt;         &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;Null&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;Default&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; Extra          &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token comment&quot;&gt;------------+--------------+------+-----+---------+----------------+&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; id         &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;bigint&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;NO&lt;/span&gt;   &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; PRI &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;NULL&lt;/span&gt;    &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;auto_increment&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; project_id &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;bigint&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; YES  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;NULL&lt;/span&gt;    &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;                &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; user_id    &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;bigint&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; YES  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;NULL&lt;/span&gt;    &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;                &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;date&lt;/span&gt;       &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;date&lt;/span&gt;         &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; YES  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;NULL&lt;/span&gt;    &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;                &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; hours      &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;      &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; YES  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;NULL&lt;/span&gt;    &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;                &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token comment&quot;&gt;------------+--------------+------+-----+---------+----------------+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Your local databases are ready to go!&lt;/p&gt;
&lt;h2&gt;4. Create and Migrate the Database on Cloud Foundry&lt;/h2&gt;
&lt;p&gt;The database provided by Cloud Foundry is behind a Firewall, so it&apos;s necessary to open an SSH tunnel. The following is a fully re-usable script for running the migration as part of a CI process:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token shebang important&quot;&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# Fail on error&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;set&lt;/span&gt; -e

&lt;span class=&quot;token comment&quot;&gt;# Get the GUID of the app - pass pal-tracker as first arg to script&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;app_guid&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;cf app $1 --guid&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;credentials&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;cf &lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; /v2/apps/$app_guid/env &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; jq &lt;span class=&quot;token string&quot;&gt;&apos;.system_env_json.VCAP_SERVICES | .[] | .[] | select(.instance_name==&quot;pal-tracker-db&quot;) | .credentials&apos;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# Get MySQL Connection info&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;ip_address&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; $credentials &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; jq -r &lt;span class=&quot;token string&quot;&gt;&apos;.hostname&apos;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;db_name&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; $credentials &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; jq -r &lt;span class=&quot;token string&quot;&gt;&apos;.name&apos;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;db_username&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; $credentials &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; jq -r &lt;span class=&quot;token string&quot;&gt;&apos;.username&apos;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;db_password&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; $credentials &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; jq -r &lt;span class=&quot;token string&quot;&gt;&apos;.password&apos;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# Open SSH tunnel&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Opening ssh tunnel to &lt;span class=&quot;token variable&quot;&gt;$ip_address&lt;/span&gt;&quot;&lt;/span&gt;
cf &lt;span class=&quot;token function&quot;&gt;ssh&lt;/span&gt; -N -L &lt;span class=&quot;token number&quot;&gt;63306&lt;/span&gt;:&lt;span class=&quot;token variable&quot;&gt;$ip_address&lt;/span&gt;:3306 pal-tracker &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;cf_ssh_pid&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$!&lt;/span&gt;

&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Waiting for tunnel&quot;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sleep&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# Run migrations&lt;/span&gt;
flyway-*/flyway -url&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;jdbc:mysql://127.0.0.1:63306/&lt;span class=&quot;token variable&quot;&gt;$db_name&lt;/span&gt;&quot;&lt;/span&gt; -locations&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;filesystem:&lt;span class=&quot;token variable&quot;&gt;$2&lt;/span&gt;/databases/tracker -user&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$db_username&lt;/span&gt; -password&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$db_password&lt;/span&gt; migrate

&lt;span class=&quot;token function&quot;&gt;kill&lt;/span&gt; -STOP &lt;span class=&quot;token variable&quot;&gt;$cf_ssh_pid&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run the script, pass the application name and root directory to the script:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;./scripts/migrate-databases.sh pal-tracker &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once the script has completed, the Cloud Foundry database is ready to go!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Spring MVC CRUD Operations]]></title><description><![CDATA[Recipe: Create, Retrieve, Update, and Delete with Spring MVC This recipe is based on the PAL Tracker example project. 1. Create the Model We…]]></description><link>https://www.jamestharpe.com/cloud-foundry-spring-mvc-crud-operations/</link><guid isPermaLink="false">https://www.jamestharpe.com/cloud-foundry-spring-mvc-crud-operations/</guid><pubDate>Tue, 15 Jan 2019 11:18:03 GMT</pubDate><content:encoded>&lt;h1&gt;Recipe: Create, Retrieve, Update, and Delete with Spring MVC&lt;/h1&gt;
&lt;p&gt;This recipe is based on the &lt;a href=&quot;https://github.com/jamestharpe/pal-tracker&quot;&gt;PAL Tracker&lt;/a&gt; example project.&lt;/p&gt;
&lt;h2&gt;1. Create the Model&lt;/h2&gt;
&lt;p&gt;We&apos;ll stick with the &lt;a href=&quot;https://github.com/jamestharpe/pal-tracker&quot;&gt;PAL Tracker&lt;/a&gt; example and create a simple &lt;code class=&quot;language-text&quot;&gt;TimeEntry&lt;/code&gt; class to be serialized for CRUD operations:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;io&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pivotal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;tracker&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;java&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;time&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;LocalDate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; projectId&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; userId&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; hours&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;LocalDate&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; projectId&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; userId&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;LocalDate&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; hours&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;projectId &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; projectId&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;userId &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; userId&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;date &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hours &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; hours&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; projectId&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; userId&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;LocalDate&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; hours&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;projectId &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; projectId&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;userId &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; userId&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;date &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hours &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; hours&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;setId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getProjectId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; projectId&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getUserId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; userId&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;LocalDate&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getDate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getHours&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; hours&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token comment&quot;&gt;// Required for equality comparisons&lt;/span&gt;
	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; o&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; o&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;o &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; o&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt; timeEntry &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; o&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; timeEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;projectId &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; timeEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;projectId&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userId &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; timeEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;userId&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;hours &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; timeEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hours&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; date &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;timeEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; timeEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;date &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token comment&quot;&gt;// Required for equality comparisons&lt;/span&gt;
	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;hashCode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id &lt;span class=&quot;token operator&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;31&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;projectId &lt;span class=&quot;token operator&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;projectId &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;31&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userId &lt;span class=&quot;token operator&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userId &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;31&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;date &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;hashCode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;31&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; hours&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;TimeEntry{&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
			&lt;span class=&quot;token string&quot;&gt;&quot;id=&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; id &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
			&lt;span class=&quot;token string&quot;&gt;&quot;, projectId=&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; projectId &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
			&lt;span class=&quot;token string&quot;&gt;&quot;, userId=&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; userId &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
			&lt;span class=&quot;token string&quot;&gt;&quot;, date=&apos;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; date &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;\&apos;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
			&lt;span class=&quot;token string&quot;&gt;&quot;, hours=&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; hours &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
			&lt;span class=&quot;token string&quot;&gt;&apos;}&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;2. Create an in-memory Repository&lt;/h2&gt;
&lt;p&gt;I&apos;ll cover using JDBC in my next article. For now, create an in-memory repository for time entries by implementing a &lt;code class=&quot;language-text&quot;&gt;TimeEntryRepository&lt;/code&gt; interface. Using an interface will make it easy to swap out later.&lt;/p&gt;
&lt;p&gt;First, create the &lt;code class=&quot;language-text&quot;&gt;TimeEntryRepository&lt;/code&gt; interface:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;io&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pivotal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;tracker&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;java&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;util&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntryRepository&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt; timeEntry&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt; timeEntry&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, implement it by storing &lt;code class=&quot;language-text&quot;&gt;TimeEntry&lt;/code&gt; objects in a &lt;code class=&quot;language-text&quot;&gt;HashMap&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;io&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pivotal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;tracker&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;java&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;util&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;java&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;util&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;java&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;util&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;InMemoryTimeEntryRepository&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntryRepository&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token comment&quot;&gt;// Store entries in a HashMap for onw&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; timeEntries &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; currentId &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1L&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt; timeEntry&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; id &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; currentId&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt; newTimeEntry &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
			id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
			timeEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getProjectId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
			timeEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getUserId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
			timeEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getDate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
			timeEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHours&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

		timeEntries&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; newTimeEntry&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; newTimeEntry&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; timeEntries&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;timeEntries&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt; timeEntry&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt; updatedEntry &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
			id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
			timeEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getProjectId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
			timeEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getUserId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
			timeEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getDate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
			timeEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHours&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

		timeEntries&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; updatedEntry&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; updatedEntry&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		timeEntries&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Wire up the &lt;code class=&quot;language-text&quot;&gt;TimeEntryRepository&lt;/code&gt; Bean&lt;/h2&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;@Bean&lt;/code&gt; annotation allows an application to provide an implementation of a class or interface at run-time. To supply a &lt;code class=&quot;language-text&quot;&gt;TimeEntryRepository&lt;/code&gt;, update the &lt;code class=&quot;language-text&quot;&gt;PalTrackerApplication&lt;/code&gt; class:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Bean&lt;/span&gt;
	&lt;span class=&quot;token class-name&quot;&gt;TimeEntryRepository&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;timeEntryRepository&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;InMemoryTimeEntryRepository&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since the &lt;code class=&quot;language-text&quot;&gt;TimeEntry&lt;/code&gt; class contains a &lt;code class=&quot;language-text&quot;&gt;LocalDate&lt;/code&gt;, we also need to supply an &lt;code class=&quot;language-text&quot;&gt;ObjectMapper&lt;/code&gt; which can properly serialize dates into &lt;code class=&quot;language-text&quot;&gt;LocalDate&lt;/code&gt; objects, so add another &lt;code class=&quot;language-text&quot;&gt;@Bean&lt;/code&gt; to supply a &lt;code class=&quot;language-text&quot;&gt;Jackson2ObjectMapperBuilder&lt;/code&gt; instance:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Bean&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ObjectMapper&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;jsonObjectMapper&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Jackson2ObjectMapperBuilder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;serializationInclusion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;JsonInclude&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Include&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;NON_NULL&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Don’t include null values&lt;/span&gt;
			&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;featuresToDisable&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;SerializationFeature&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;WRITE_DATES_AS_TIMESTAMPS&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//ISODate&lt;/span&gt;
			&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;modules&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;JavaTimeModule&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For this to build, the Jackson dependency must be added to the &lt;code class=&quot;language-text&quot;&gt;dependencies&lt;/code&gt; closure in &lt;strong&gt;build.gradle&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;groovy&quot;&gt;&lt;pre class=&quot;language-groovy&quot;&gt;&lt;code class=&quot;language-groovy&quot;&gt;&lt;span class=&quot;token function&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string gstring&quot;&gt;&quot;com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.7&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;3. Create a Controller for CRUD Operations&lt;/h2&gt;
&lt;p&gt;The controller is a simple Java class with the appropriate annotations: &lt;code class=&quot;language-text&quot;&gt;@PostMapping&lt;/code&gt; for POST requests that will handle Create operation, &lt;code class=&quot;language-text&quot;&gt;@GetMapping&lt;/code&gt; for GET requests to handle Retrieve operations, &lt;code class=&quot;language-text&quot;&gt;@PutMapping&lt;/code&gt; for PUT requests that will handle Update operations, and &lt;code class=&quot;language-text&quot;&gt;@DeleteMapping&lt;/code&gt; for DELETE requests to handle Delete operations.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;io&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pivotal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;tracker&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;http&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;http&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;web&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bind&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;annotation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;java&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;util&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token annotation punctuation&quot;&gt;@RestController&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// Sets the &quot;root&quot; for all TimeEntryController end-points&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/time-entries&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntryController&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntryRepository&lt;/span&gt; timeEntriesRepo&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntryController&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;TimeEntryRepository&lt;/span&gt; timeEntriesRepo&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;timeEntriesRepo &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; timeEntriesRepo&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token comment&quot;&gt;// Create&lt;/span&gt;
	&lt;span class=&quot;token annotation punctuation&quot;&gt;@PostMapping&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@RequestBody&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt; timeEntry&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt; createdTimeEntry &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; timeEntriesRepo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;timeEntry&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;token comment&quot;&gt;// Returning a ResponseEntity allows us to control the resulting HTTP status code&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;createdTimeEntry&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;CREATED&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token comment&quot;&gt;// Retrieve a single record&lt;/span&gt;
	&lt;span class=&quot;token annotation punctuation&quot;&gt;@GetMapping&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;{id}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@PathVariable&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt; timeEntry &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; timeEntriesRepo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;timeEntry &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;timeEntry&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;OK&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;NOT_FOUND&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token comment&quot;&gt;// Retrieve all records&lt;/span&gt;
	&lt;span class=&quot;token annotation punctuation&quot;&gt;@GetMapping&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;timeEntriesRepo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;OK&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token comment&quot;&gt;// Update&lt;/span&gt;
	&lt;span class=&quot;token annotation punctuation&quot;&gt;@PutMapping&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;{id}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@PathVariable&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token annotation punctuation&quot;&gt;@RequestBody&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt; timeEntry&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt; updatedTimeEntry &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; timeEntriesRepo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; timeEntry&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;updatedTimeEntry &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;updatedTimeEntry&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;OK&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;NOT_FOUND&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token comment&quot;&gt;// Delete&lt;/span&gt;
	&lt;span class=&quot;token annotation punctuation&quot;&gt;@DeleteMapping&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;{id}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@PathVariable&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		timeEntriesRepo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;NO_CONTENT&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Returning a &lt;code class=&quot;language-text&quot;&gt;ResponseEntity&lt;/code&gt; allows us to control the resulting HTTP status code.&lt;/p&gt;
&lt;h2&gt;4. Test and Deploy the Changes&lt;/h2&gt;
&lt;p&gt;Use PostMan, curl, or unit tests to test the end-points. Here&apos;s a sample set of end-to-end tests for the TimeEntryController:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;test&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pivotal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;trackerapi&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;com&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;jayway&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;jsonpath&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;DocumentContext&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;io&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pivotal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;tracker&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;PalTrackerApplication&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;io&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pivotal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;tracker&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;junit&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;junit&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;runner&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;RunWith&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;beans&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;factory&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;annotation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Autowired&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;boot&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;test&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;context&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;SpringBootTest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;boot&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;test&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;web&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;client&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;TestRestTemplate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;http&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpEntity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;http&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;http&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;http&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;test&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;context&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;junit4&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;SpringRunner&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;java&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;time&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;LocalDate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;java&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;util&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;com&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;jayway&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;jsonpath&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;JsonPath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parse&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;assertj&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;core&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;api&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Assertions&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;assertThat&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;boot&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;test&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;context&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;SpringBootTest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;WebEnvironment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;RANDOM_PORT&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// Wire up the Spring application&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@RunWith&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;SpringRunner&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@SpringBootTest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;classes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PalTrackerApplication&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; webEnvironment &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; RANDOM_PORT&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntryApiTest&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;token comment&quot;&gt;// Use to call the TimeEntryController end-points&lt;/span&gt;
	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Autowired&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TestRestTemplate&lt;/span&gt; restTemplate&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;token comment&quot;&gt;// Sample/test data&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; projectId &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;123L&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; userId &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;456L&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt; timeEntry &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;projectId&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; userId&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;LocalDate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;2017-01-08&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Test&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;testCreate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; createResponse &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; restTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;postForEntity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/time-entries&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; timeEntry&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;createResponse&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getStatusCode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;CREATED&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;token comment&quot;&gt;// com.jayway.jsonpath.JsonPath.parse makes it easy to read JSON&lt;/span&gt;
		&lt;span class=&quot;token class-name&quot;&gt;DocumentContext&lt;/span&gt; createJson &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;createResponse&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBody&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;createJson&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;$.id&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isGreaterThan&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;createJson&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;$.projectId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;projectId&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;createJson&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;$.userId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userId&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;createJson&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;$.date&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;2017-01-08&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;createJson&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;$.hours&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Test&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;testList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; id &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createTimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; listResponse &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; restTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getForEntity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/time-entries&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;listResponse&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getStatusCode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;OK&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;token class-name&quot;&gt;DocumentContext&lt;/span&gt; listJson &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;listResponse&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBody&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;token class-name&quot;&gt;Collection&lt;/span&gt; timeEntries &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; listJson&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;$[*]&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;timeEntries&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; readId &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; listJson&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;$[0].id&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;readId&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Test&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;testRead&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; id &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createTimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; readResponse &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;restTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getForEntity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/time-entries/&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;readResponse&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getStatusCode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;OK&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token class-name&quot;&gt;DocumentContext&lt;/span&gt; readJson &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;readResponse&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBody&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;readJson&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;$.id&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;readJson&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;$.projectId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;projectId&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;readJson&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;$.userId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userId&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;readJson&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;$.date&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;2017-01-08&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;readJson&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;$.hours&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Test&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;testUpdate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; id &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createTimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; projectId &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2L&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; userId &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3L&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt; updatedTimeEntry &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;projectId&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; userId&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;LocalDate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;2017-01-09&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; updateResponse &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; restTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;exchange&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/time-entries/&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;PUT&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;updatedTimeEntry&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;updateResponse&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getStatusCode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;OK&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;token class-name&quot;&gt;DocumentContext&lt;/span&gt; updateJson &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;updateResponse&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBody&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;updateJson&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;$.id&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;updateJson&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;$.projectId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;projectId&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;updateJson&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;$.userId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userId&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;updateJson&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;$.date&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;2017-01-09&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;updateJson&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;$.hours&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Test&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;testDelete&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; id &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createTimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;


		&lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; deleteResponse &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; restTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;exchange&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/time-entries/&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DELETE&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;


		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;deleteResponse&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getStatusCode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;NO_CONTENT&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; deletedReadResponse &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;restTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getForEntity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/time-entries/&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;deletedReadResponse&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getStatusCode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;NOT_FOUND&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createTimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token class-name&quot;&gt;HttpEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; entity &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;timeEntry&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; response &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; restTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;exchange&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/time-entries&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;POST&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; entity&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getStatusCode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;CREATED&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBody&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that basic CRUD operations are complete, they can be deployed to Cloud Foundry:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;./gradlew build &lt;span class=&quot;token comment&quot;&gt;# build the JAR&lt;/span&gt;
cf push -p build/libs/pal-tracker.jar &lt;span class=&quot;token comment&quot;&gt;# deploy to CF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Cloud Foundry Spring Boot Environment Basics]]></title><description><![CDATA[Recipe: Configure Spring Boot on Cloud Foundry This recipe is illustrated in the PAL Tracker example project. 1. Inject Environment…]]></description><link>https://www.jamestharpe.com/cloud-foundry-spring-boot-environment/</link><guid isPermaLink="false">https://www.jamestharpe.com/cloud-foundry-spring-boot-environment/</guid><pubDate>Tue, 15 Jan 2019 01:25:15 GMT</pubDate><content:encoded>&lt;h1&gt;Recipe: Configure Spring Boot on Cloud Foundry&lt;/h1&gt;
&lt;p&gt;This recipe is illustrated in the &lt;a href=&quot;https://github.com/jamestharpe/pal-tracker&quot;&gt;PAL Tracker&lt;/a&gt; example project.&lt;/p&gt;
&lt;h2&gt;1. Inject Environment Variables into a Controller&lt;/h2&gt;
&lt;p&gt;Update the &lt;code class=&quot;language-text&quot;&gt;WelcomeController&lt;/code&gt; so that the &lt;code class=&quot;language-text&quot;&gt;sayHello()&lt;/code&gt; method returns a &lt;code class=&quot;language-text&quot;&gt;message&lt;/code&gt; field set by the constructor. Use the &lt;code class=&quot;language-text&quot;&gt;@Value&lt;/code&gt; annotation to inject the value from the environment:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;io&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pivotal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;tracker&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;beans&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;factory&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;annotation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;web&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bind&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;annotation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;GetMapping&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;web&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bind&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;annotation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;RestController&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token annotation punctuation&quot;&gt;@RestController&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;WelcomeController&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;WelcomeController&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// Injects the WELCOME_MESSAGE environment variable&lt;/span&gt;
        &lt;span class=&quot;token annotation punctuation&quot;&gt;@Value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;${welcome.message}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; message
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;message &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token annotation punctuation&quot;&gt;@GetMapping&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Running the app now will result in a failure: &lt;code class=&quot;language-text&quot;&gt;Could not resolve placeholder &amp;#39;welcome.message&amp;#39; in value &amp;quot;${welcome.message}&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To resolve this, update the &lt;strong&gt;build.gradle&lt;/strong&gt; to set the &lt;code class=&quot;language-text&quot;&gt;WELCOME_MESSAGE&lt;/code&gt; environment variable in the &lt;code class=&quot;language-text&quot;&gt;bootRun&lt;/code&gt; configuration:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;groovy&quot;&gt;&lt;pre class=&quot;language-groovy&quot;&gt;&lt;code class=&quot;language-groovy&quot;&gt;bootRun&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
     &lt;span class=&quot;token string gstring&quot;&gt;&quot;WELCOME_MESSAGE&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string gstring&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;2. Built-in Cloud Foundry Environment Variables&lt;/h2&gt;
&lt;p&gt;Cloud Foundry comes with several &lt;a href=&quot;https://docs.run.pivotal.io/devguide/deploy-apps/environment-variable.html&quot;&gt;built-in environment variables&lt;/a&gt; accessible to your application. To show this, let&apos;s create a new controller called &lt;code class=&quot;language-text&quot;&gt;EnvController&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;io&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pivotal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;tracker&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;beans&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;factory&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;annotation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;web&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bind&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;annotation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;GetMapping&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;web&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bind&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;annotation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;RestController&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;java&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;util&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;java&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;util&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token annotation punctuation&quot;&gt;@RestController&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;EnvController&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; port&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; memoryLimit&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; cfInstanceIndex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; cfInstanceAddress&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;EnvController&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
		&lt;span class=&quot;token comment&quot;&gt;// Injects the PORT environment variable, defaults to NOT SET&lt;/span&gt;
		&lt;span class=&quot;token annotation punctuation&quot;&gt;@Value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;${port:NOT SET}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; port&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;token comment&quot;&gt;// Injects the MEMORY_LIMIT environment variable, defaults to NOT SET&lt;/span&gt;
		&lt;span class=&quot;token annotation punctuation&quot;&gt;@Value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;${memory.limit:NOT SET}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; memoryLimit&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;token comment&quot;&gt;// Injects the CF_INSTANCE_INDEX environment variable, defaults to NOT SET&lt;/span&gt;
		&lt;span class=&quot;token annotation punctuation&quot;&gt;@Value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;${cf.instance.index:NOT SET}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; cfInstanceIndex&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;token comment&quot;&gt;// Injects the CF_INSTANCE_ADDR environment variable, defaults to NOT SET&lt;/span&gt;
		&lt;span class=&quot;token annotation punctuation&quot;&gt;@Value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;${cf.instance.addr:NOT SET}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; cfInstanceAddress
	&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;port &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; port&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;memoryLimit &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; memoryLimit&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;cfInstanceIndex &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; cfInstanceIndex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;cfInstanceAddress &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; cfInstanceAddress&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token comment&quot;&gt;// Maps GET requests to /env&lt;/span&gt;
	&lt;span class=&quot;token annotation punctuation&quot;&gt;@GetMapping&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/env&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getEnv&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token class-name&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;PORT&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; port&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;MEMORY_LIMIT&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; memoryLimit&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;CF_INSTANCE_INDEX&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; cfInstanceIndex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;CF_INSTANCE_ADDR&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; cfInstanceAddress&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run the app and visit the &lt;code class=&quot;language-text&quot;&gt;/env&lt;/code&gt; end-point to see the output in your local environment:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token property&quot;&gt;&quot;PORT&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;NOT SET&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;token property&quot;&gt;&quot;CF_INSTANCE_ADDR&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;NOT SET&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;token property&quot;&gt;&quot;CF_INSTANCE_INDEX&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;NOT SET&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;token property&quot;&gt;&quot;MEMORY_LIMIT&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;NOT SET&quot;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Set Environment Variables in Cloud Foundry&lt;/h3&gt;
&lt;p&gt;Deploy the app to see what happens in production:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;cf push -p build/libs/pal-tracker.jar&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The app will crash because the &lt;code class=&quot;language-text&quot;&gt;WELCOME_MESSAGE&lt;/code&gt; environment variable isn&apos;t set. The environment variable can be set using &lt;code class=&quot;language-text&quot;&gt;cf set-env&lt;/code&gt; then restaging:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;cf set-env pal-tracker WELCOME_MESSAGE hi
cf restage pal-tracker &lt;span class=&quot;token comment&quot;&gt;# no need to re-push&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now when you check the Cloud Foundry endpoint, it will have the actual values:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;PORT&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;80&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;CF_INSTANCE_ADDR&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;1.2.3.4:80&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;CF_INSTANCE_INDEX&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;MEMORY_LIMIT&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;1GB&quot;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;3. Scale your Cloud Foundry App&lt;/h2&gt;
&lt;p&gt;Scaling can be done horizontally, vertically, or both using the &lt;code class=&quot;language-text&quot;&gt;cf scale&lt;/code&gt; command:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Scale to 3 instances, 2GB storage, 1024M memory and force a restart&lt;/span&gt;
cf scale APP -i &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt; -k 2G -m 1024M -f&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check on the process by running &lt;code class=&quot;language-text&quot;&gt;cf app pal-tracker&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;4. Use a Manifest File&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://docs.cloudfoundry.org/devguide/deploy-apps/manifest.html&quot;&gt;manifest.yml&lt;/a&gt; specified an application&apos;s environment defaults, so they only need to be managed with the CLI if they need to be overridden. Rather than setting the &lt;code class=&quot;language-text&quot;&gt;WELCOME_MESSAGE&lt;/code&gt; value using &lt;code class=&quot;language-text&quot;&gt;cf set-env&lt;/code&gt;, the value can be specified in the &lt;strong&gt;manifest.yml&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;applications&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pal&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;tracker
  &lt;span class=&quot;token key atrule&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; build/libs/pal&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;tracker.jar
  &lt;span class=&quot;token key atrule&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;WELCOME_MESSAGE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Hello from the Manifest&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run &lt;code class=&quot;language-text&quot;&gt;cf push&lt;/code&gt; again to see the updated &lt;code class=&quot;language-text&quot;&gt;WELCOME_MESSAGE&lt;/code&gt; value in the CF environment.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Pivotal Cloud Foundry (PCF) with Spring Boot Basics]]></title><description><![CDATA[Recipe: PCF Cloud Native App This recipe is based on the PAL Tracker example project. 1. Create the PCF Developer Environment Developing…]]></description><link>https://www.jamestharpe.com/cloud-foundry-spring-boot/</link><guid isPermaLink="false">https://www.jamestharpe.com/cloud-foundry-spring-boot/</guid><pubDate>Mon, 14 Jan 2019 22:06:34 GMT</pubDate><content:encoded>&lt;h1&gt;Recipe: PCF Cloud Native App&lt;/h1&gt;
&lt;p&gt;This recipe is based on the &lt;a href=&quot;https://github.com/jamestharpe/pal-tracker&quot;&gt;PAL Tracker&lt;/a&gt; example project.&lt;/p&gt;
&lt;h2&gt;1. Create the PCF Developer Environment&lt;/h2&gt;
&lt;p&gt;Developing Spring apps for PAL &quot;the Pivotal way&quot; requires &lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt;, Java 8 or above, &lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;IntelliJ&lt;/a&gt;, the &lt;a href=&quot;https://github.com/cloudfoundry/cli/releases&quot;&gt;Cloud Foundry CLI&lt;/a&gt;, &lt;a href=&quot;https://gradle.org/&quot;&gt;Gradle&lt;/a&gt;, &lt;a href=&quot;https://www.mysql.com/downloads/&quot;&gt;MySQL&lt;/a&gt;, and &lt;a href=&quot;https://flywaydb.org/&quot;&gt;Flyway&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once the tools are installed, log in to Cloud Foundry (CF):&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;cf login -a &lt;span class=&quot;token variable&quot;&gt;${CF_API_ENDPOINT}&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# ... follow the prompts ...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From there, the CLI can be used to explore the Cloud Foundry environment. Here are a few useful commands:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;cf target &lt;span class=&quot;token comment&quot;&gt;# View the targeted organization or space&lt;/span&gt;
cf apps &lt;span class=&quot;token comment&quot;&gt;# List applications in the target CF space&lt;/span&gt;
cf services &lt;span class=&quot;token comment&quot;&gt;# List services in the target CF space&lt;/span&gt;
cf marketplace &lt;span class=&quot;token comment&quot;&gt;# List services that can added to the target CF space&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Additional information: &lt;a href=&quot;https://prerequisites.pal.pivotal.io/&quot;&gt;Platform Acceleration Lab&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;2. Create a Spring Boot Application&lt;/h2&gt;
&lt;p&gt;Start with Gradle:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;gradle wrapper
&lt;span class=&quot;token function&quot;&gt;touch&lt;/span&gt; build.gradle&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Open the project in IntelliJ using &lt;strong&gt;File &gt; Open&lt;/strong&gt; rather than the import feature.&lt;/p&gt;
&lt;p&gt;In IntelliJ, update the &lt;strong&gt;build.gradle&lt;/strong&gt; file to use the Java plug-in, reference the Maven Central repository, and apply the latest &lt;a href=&quot;https://docs.spring.io/spring-boot/docs/2.1.2.RELEASE/gradle-plugin/reference/html/&quot;&gt;Spring Boot Gradle plug-in&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;groovy&quot;&gt;&lt;pre class=&quot;language-groovy&quot;&gt;&lt;code class=&quot;language-groovy&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Gradle Configuration&lt;/span&gt;

buildscript &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	ext &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token comment&quot;&gt;// Set Spring Boot version as variable&lt;/span&gt;
		springBootVersion &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string gstring&quot;&gt;&quot;2.0.6.RELEASE&quot;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	repositories &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token comment&quot;&gt;// Use Maven Central to get required packages&lt;/span&gt;
		&lt;span class=&quot;token function&quot;&gt;mavenCentral&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	dependencies &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token comment&quot;&gt;// Add specified version of Spring Boot to class path&lt;/span&gt;
		classpath &lt;span class=&quot;token string gstring&quot;&gt;&quot;org.springframework.boot:spring-boot-gradle-plugin:&lt;span class=&quot;token expression&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;$&lt;/span&gt;springBootVersion&lt;/span&gt;&quot;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// PAL Tracker Configuration&lt;/span&gt;

plugins &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token comment&quot;&gt;// It&apos;s a Java Project!&lt;/span&gt;
	id &lt;span class=&quot;token string gstring&quot;&gt;&quot;java&quot;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// Apply the Spring Framework plug-in&lt;/span&gt;
apply plugin&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;org.springframework.boot&apos;&lt;/span&gt;

repositories &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token comment&quot;&gt;// Use Maven Central to get required packages&lt;/span&gt;
	&lt;span class=&quot;token function&quot;&gt;mavenCentral&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

dependencies &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token comment&quot;&gt;// Add specified version of Spring Boot to class path&lt;/span&gt;
	&lt;span class=&quot;token function&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string gstring&quot;&gt;&quot;org.springframework.boot:spring-boot-starter-web:&lt;span class=&quot;token expression&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;$&lt;/span&gt;springBootVersion&lt;/span&gt;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, create a file &lt;strong&gt;settings.gradle&lt;/strong&gt; to set the name of the Gradle project. This determines the name of the JAR file when the application is built:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;groovy&quot;&gt;&lt;pre class=&quot;language-groovy&quot;&gt;&lt;code class=&quot;language-groovy&quot;&gt;rootProject&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string gstring&quot;&gt;&quot;pal-tracker&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Gradle Project Structure&lt;/h3&gt;
&lt;p&gt;Create a minimal &lt;a href=&quot;https://maven.apache.org/guides/introduction/introduction-to-the-standard-directory-layout.html&quot;&gt;standard Maven directory layout&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; -p src/main/java&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use IntelliJ to create a new package called &lt;code class=&quot;language-text&quot;&gt;io.pivotal.pal.tracker&lt;/code&gt;. This might require setting &apos;src/main/java` as the &quot;Sources Root&quot; first:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../img/intellij-sources-root.png&quot; alt=&quot;Set IntelliJ sources root&quot;&gt;&lt;/p&gt;
&lt;p&gt;With the basic project structure established, we can create a class for our application called &lt;code class=&quot;language-text&quot;&gt;PalTrackerApplication&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;io&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pivotal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;tracker&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;boot&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;SpringApplication&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;boot&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;autoconfigure&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;SpringBootApplication&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// Tell Spring Boot that this is our main entry point&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@SpringBootApplication&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PalTrackerApplication&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// Start the app&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;SpringApplication&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;PalTrackerApplication&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// Later: Register beans with @Bean&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;@SpringBootApplication&lt;/code&gt; annotation tells Spring Boot that this class contains the main entrypoint of the application. The call to &lt;code class=&quot;language-text&quot;&gt;SpringApplication.run(...)&lt;/code&gt; is boiler-plate to tell Spring to scan for the necessary components that will be &lt;a href=&quot;https://martinfowler.com/articles/injection.html&quot;&gt;injected&lt;/a&gt; into the controllers and other classes that make up the application.&lt;/p&gt;
&lt;p&gt;It&apos;s now possible to run the application, though you&apos;ll receive the generic Spring Boot Whitelabel Error Page.&lt;/p&gt;
&lt;p&gt;To make running the application, and later tests, easier you can delegate these actions to Gradle in IntelliJ under &lt;strong&gt;File &gt; Settings &gt; Build, Execution, Deployment &gt; Gradle &gt; Runner&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../img/intellij-delegate-build-run-gradle.png&quot; alt=&quot;Delegate build run and test actions to Gradle in IntelliJ&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Create a REST Controller&lt;/h3&gt;
&lt;p&gt;With the basic project structure in place, we can create a simple REST controller by generating a new Java class and annotating it:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;io&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pivotal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;tracker&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;web&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bind&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;annotation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;GetMapping&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;web&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bind&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;annotation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;RestController&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// Tells spring that this controller provides REST end-points&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@RestController&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;WelcomeController&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// Maps &quot;GET&quot; requests to the application root&lt;/span&gt;
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@GetMapping&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the application is run and launched in the browser, the &quot;hello&quot; string is returned.&lt;/p&gt;
&lt;h2&gt;3. Push to Cloud Foundry&lt;/h2&gt;
&lt;p&gt;Build and deploy the application to Cloud Foundry:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;./gradlew build &lt;span class=&quot;token comment&quot;&gt;# build the JAR&lt;/span&gt;
cf push -p build/libs/pal-tracker.jar &lt;span class=&quot;token comment&quot;&gt;# deploy to CF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Get the application status:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;cf app pal-tracker &lt;span class=&quot;token comment&quot;&gt;# Get application status&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Get recent log output from the app:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;cf logs --recent&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The output of &lt;code class=&quot;language-text&quot;&gt;cf push&lt;/code&gt; will include a URL. Opening the URL in a web browser should bring up the application.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Docker: Fix Invalid Bind Mount Spec in Git Bash]]></title><description><![CDATA[Error response from daemon: invalid bind mount spec The call to  using Git Bash on Windows was recently frustrating me when I tried to…]]></description><link>https://www.jamestharpe.com/docker-fix-invalid-bind-mount-spec-gitbash/</link><guid isPermaLink="false">https://www.jamestharpe.com/docker-fix-invalid-bind-mount-spec-gitbash/</guid><pubDate>Tue, 07 Nov 2017 18:44:06 GMT</pubDate><content:encoded>&lt;h1&gt;Error response from daemon: invalid bind mount spec&lt;/h1&gt;
&lt;p&gt;The call to &lt;code class=&quot;language-text&quot;&gt;docker run&lt;/code&gt; using Git Bash on Windows was recently frustrating me when I tried to specify a volume using &lt;code class=&quot;language-text&quot;&gt;-v&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ docker run -it -v /c/Users/james/Code/my-application:/app james/test-container &lt;span class=&quot;token function&quot;&gt;sh&lt;/span&gt;
C:&lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;Program Files&lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;Docker&lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;Docker&lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;Resources&lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;bin&lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;docker.exe: Error response from daemon: invalid &lt;span class=&quot;token builtin class-name&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;mount&lt;/span&gt; spec &lt;span class=&quot;token string&quot;&gt;&quot;/C/Users/james/Code/my-application;C:&lt;span class=&quot;token entity&quot; title=&quot;\\&quot;&gt;\\&lt;/span&gt;Program Files&lt;span class=&quot;token entity&quot; title=&quot;\\&quot;&gt;\\&lt;/span&gt;Git&lt;span class=&quot;token entity&quot; title=&quot;\\&quot;&gt;\\&lt;/span&gt;app&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; invalid volume specification: &lt;span class=&quot;token string&quot;&gt;&apos;/C/Users/james/Code/my-app;C:\Program Files\Git&lt;span class=&quot;token entity&quot; title=&quot;\a&quot;&gt;\a&lt;/span&gt;pp&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; invalid &lt;span class=&quot;token function&quot;&gt;mount&lt;/span&gt; config &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;bind&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; invalid &lt;span class=&quot;token function&quot;&gt;mount&lt;/span&gt; path: &lt;span class=&quot;token string&quot;&gt;&apos;\Program Files\Git&lt;span class=&quot;token entity&quot; title=&quot;\a&quot;&gt;\a&lt;/span&gt;pp&apos;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;mount&lt;/span&gt; path must be absolute.
See &lt;span class=&quot;token string&quot;&gt;&apos;C:\Program Files\Docker\Docker\Resources&lt;span class=&quot;token entity&quot; title=&quot;\b&quot;&gt;\b&lt;/span&gt;in\docker.exe run --help&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I tried multiple formats for the path, but ultimately discovered that it is necessary to prefix the path with an extra slash (&lt;code class=&quot;language-text&quot;&gt;/&lt;/code&gt;), like so:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ docker run -it -v //c/Users/james/Code/my-application:/app james/test-container &lt;span class=&quot;token function&quot;&gt;sh&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is necessary when using &lt;code class=&quot;language-text&quot;&gt;pwd&lt;/code&gt; as well, for example:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ docker run -it -v /&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;:/app james/test-container &lt;span class=&quot;token function&quot;&gt;sh&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The syntax to mount a docker volume to the current parent directory turned out to be quite interesting as well: &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ docker run -it -v /&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;/&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;:/app james/test-container &lt;span class=&quot;token function&quot;&gt;sh&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Markdown Code Comments]]></title><description><![CDATA[How to Comment a Markdown File Markdown doesn't include specific syntax for comments, but there is a workaround using the reference style…]]></description><link>https://www.jamestharpe.com/markdown-comments/</link><guid isPermaLink="false">https://www.jamestharpe.com/markdown-comments/</guid><pubDate>Thu, 26 Oct 2017 22:17:11 GMT</pubDate><content:encoded>&lt;h1&gt;How to Comment a Markdown File&lt;/h1&gt;
&lt;p&gt;Markdown doesn&apos;t include specific syntax for comments, but there is a workaround using the &lt;a href=&quot;https://daringfireball.net/projects/markdown/syntax#link&quot;&gt;reference style links&lt;/a&gt; syntax. Using this syntax, the &lt;strong&gt;comments will not be output to the resulting HTML&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;Here are a few examples:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;markdown&quot;&gt;&lt;pre class=&quot;language-markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;[]: # (This is a comment)
[]: # &quot;And this is a comment&quot;
[]: # &apos;Also this is a comment&apos;
&lt;span class=&quot;token url-reference url&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; # &lt;span class=&quot;token string&quot;&gt;(Yet another comment)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token url-reference url&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;comment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; # &lt;span class=&quot;token string&quot;&gt;(Still another comment)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Each of these lines works the same way:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;[...]:&lt;/code&gt; identifies a reference link (that won&apos;t be used in the article)&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;#&lt;/code&gt; defines the destination, in this case &lt;code class=&quot;language-text&quot;&gt;#&lt;/code&gt; is the shortest valid value for a URL&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;(...)&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;&amp;quot;...&amp;quot;&lt;/code&gt;, and &lt;code class=&quot;language-text&quot;&gt;&amp;#39;...&amp;#39;&lt;/code&gt;define the reference title, which we repurpose to make a comment&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While this is the best approach that I&apos;m aware of, it doesn&apos;t allow multi-line comments and each comment must appear on it&apos;s own line.&lt;/p&gt;
&lt;p&gt;I personally prefer to use &lt;code class=&quot;language-text&quot;&gt;[//]: #&lt;/code&gt; since, as a software developer, I tend to associate &lt;code class=&quot;language-text&quot;&gt;//&lt;/code&gt; with comment syntax.&lt;/p&gt;
&lt;h2&gt;Adding HTML Comments in Markdown&lt;/h2&gt;
&lt;p&gt;If you&apos;d like for your comments to show up in the HTML output, a simple modified HTML comment syntax will work:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;markdown&quot;&gt;&lt;pre class=&quot;language-markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!--- This is an HTML comment in Markdown --&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unlike a &quot;normal&quot; HTML comment which opens with &lt;code class=&quot;language-text&quot;&gt;&amp;lt;!--&lt;/code&gt; (two dashes), an HTML comment in Markdown opens with &lt;code class=&quot;language-text&quot;&gt;&amp;lt;!---&lt;/code&gt; (three dashes). Some Markdown parsers support two-dash HTML comments, but the three-dash version is more universally compatible.&lt;/p&gt;
&lt;!--- This is an HTML comment in Markdown --&gt;</content:encoded></item><item><title><![CDATA[Include Files Outside Docker Build Context]]></title><description><![CDATA["Forbidden path outside the build context" I was recently attempting to Dockerize a Node project, so I added a  folder to the project and…]]></description><link>https://www.jamestharpe.com/docker-include-files-outside-build-context/</link><guid isPermaLink="false">https://www.jamestharpe.com/docker-include-files-outside-build-context/</guid><pubDate>Thu, 26 Oct 2017 21:33:25 GMT</pubDate><content:encoded>&lt;h1&gt;&quot;Forbidden path outside the build context&quot;&lt;/h1&gt;
&lt;p&gt;I was recently attempting to Dockerize a Node project, so I added a &lt;code class=&quot;language-text&quot;&gt;docker&lt;/code&gt; folder to the project and created a simple &lt;code class=&quot;language-text&quot;&gt;Dockerfile&lt;/code&gt; to get started:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;dockerfile&quot;&gt;&lt;pre class=&quot;language-dockerfile&quot;&gt;&lt;code class=&quot;language-dockerfile&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt;  node&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;alpine
&lt;span class=&quot;token keyword&quot;&gt;WORKDIR&lt;/span&gt; /app
&lt;span class=&quot;token keyword&quot;&gt;COPY&lt;/span&gt; ../ ./
&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; npm install
&lt;span class=&quot;token keyword&quot;&gt;EXPOSE&lt;/span&gt; 80
&lt;span class=&quot;token keyword&quot;&gt;ENTRYPOINT&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;npm&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;start&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, when I tried to build the image, I got the following output:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ docker build -t node-app &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;
Sending build context to Docker daemon  &lt;span class=&quot;token number&quot;&gt;53&lt;/span&gt;.76kB
Step &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;/6 &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; FROM node:alpine
 ---&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; 04a3ba95f191
Step &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;/6 &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; WORKDIR /app
 ---&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; 85fff9a66b84
Removing intermediate container e2c838595c90
Step &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;/6 &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; COPY &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;/ ./
COPY failed: Forbidden path outside the build context: &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;/ &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note the error: &lt;strong&gt;COPY failed: Forbidden path outside the build context: ../ ()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;According to Docker&apos;s &lt;a href=&quot;https://docs.docker.com/engine/reference/builder/#copy&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;COPY&lt;/code&gt; documentation&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;COPY&lt;/code&gt; obeys the following rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code class=&quot;language-text&quot;&gt;&amp;lt;src&amp;gt;&lt;/code&gt; path must be inside the context of the build; you cannot &lt;code class=&quot;language-text&quot;&gt;COPY ../something /something&lt;/code&gt;, because the first step of a &lt;code class=&quot;language-text&quot;&gt;docker build&lt;/code&gt; is to send the context directory (and subdirectories) to the docker daemon.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;It turns out that &lt;strong&gt;you cannot include files outside Docker&apos;s build context&lt;/strong&gt;. However, you &lt;em&gt;can&lt;/em&gt; copy files from the Dockerfile&apos;s parent directory.&lt;/p&gt;
&lt;h2&gt;How to &lt;code class=&quot;language-text&quot;&gt;COPY&lt;/code&gt; Files from the Dockerfile Parent Directory&lt;/h2&gt;
&lt;p&gt;I tried several combinations of command line arguments to include the parent directory in the context, and finally landed on the solution: start from the parent directory, and pass the Dockerfile as an argument.&lt;/p&gt;
&lt;p&gt;To do this, first update the &lt;code class=&quot;language-text&quot;&gt;COPY&lt;/code&gt; command to use the current (&lt;code class=&quot;language-text&quot;&gt;./&lt;/code&gt;) directory:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;dockerfile&quot;&gt;&lt;pre class=&quot;language-dockerfile&quot;&gt;&lt;code class=&quot;language-dockerfile&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt;  node&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;alpine
&lt;span class=&quot;token keyword&quot;&gt;WORKDIR&lt;/span&gt; /app
&lt;span class=&quot;token keyword&quot;&gt;COPY&lt;/span&gt; ./ ./
&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; npm install
&lt;span class=&quot;token keyword&quot;&gt;EXPOSE&lt;/span&gt; 80
&lt;span class=&quot;token keyword&quot;&gt;ENTRYPOINT&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;npm&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;start&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, &lt;code class=&quot;language-text&quot;&gt;cd ..&lt;/code&gt; into the parent directory and run &lt;code class=&quot;language-text&quot;&gt;docker build&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;~/Code/node-app/docker
$ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;

~/Code/node-app
$ docker build -t node-app -f docker/Dockerfile &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;
Sending build context to Docker daemon  &lt;span class=&quot;token number&quot;&gt;263&lt;/span&gt;.7MB
&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
Successfully built d296bf765369
Successfully tagged node-app:latest&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Success!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Automatically Build a Developer Environment on Windows]]></title><description><![CDATA[Automate Your Development Environment Setup Starting from a fresh OS installation, manually installing and configuring a full development…]]></description><link>https://www.jamestharpe.com/automated-developer-environment/</link><guid isPermaLink="false">https://www.jamestharpe.com/automated-developer-environment/</guid><pubDate>Mon, 18 Sep 2017 15:42:46 GMT</pubDate><content:encoded>&lt;h1&gt;Automate Your Development Environment Setup&lt;/h1&gt;
&lt;p&gt;Starting from a fresh OS installation, manually installing and configuring a full development environment can take several days. Even then, it&apos;s easy to forget some bit of configuration or forget to install some critical software. Automation makes it easy to save a ton of time and minimize disruption.&lt;/p&gt;
&lt;p&gt;Most of the software I write is developed on Windows, so I decided to write the script using PowerShell and &lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt;. MacOS users can follow a similar pattern using &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Overview of the Automation Process&lt;/h2&gt;
&lt;p&gt;The goal of the script is to start from a base OS installation and finish with a complete development environment. To write the script, it&apos;s easiest to use a write-test-tweak approach:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Write a command in the PowerShell ISE (running elevated)&lt;/li&gt;
&lt;li&gt;Copy-paste the command from the script into the shell panel and execute it&lt;/li&gt;
&lt;li&gt;Tweak the command if needed&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Once your script is completed, you can easily maintain it by following the same process every time you install a new tool or adjust a setting. I prefer to store my script in OneDrive for easy access from a base Windows installation (which includes OneDrive), but I also check it in to GitHub to share with the world.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: If your development environment is already setup manually, installing software via Chocolatey can sometimes cause conflicts. It&apos;s best to uninstall any applications you&apos;ll be managing with Chocolatey, then reinstall with Chocolatey (or just start from scratch).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Basic Script Structure&lt;/h2&gt;
&lt;p&gt;I&apos;ve broken &lt;a href=&quot;https://github.com/jamestharpe/windows-development-environment/blob/main/env-windows.ps1&quot;&gt;my script&lt;/a&gt; into four sections:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Utility methods&lt;/li&gt;
&lt;li&gt;Chocolatey install&lt;/li&gt;
&lt;li&gt;Configure Windows settings&lt;/li&gt;
&lt;li&gt;Install and configure tools&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Utility Method: Refresh the PATH environment variable in PowerShell&lt;/h2&gt;
&lt;p&gt;Many of the tools you&apos;ll instal will have dependencies, which need to be available via the Windows PATH environment variable for the script to succeed. PowerShell does not automatically pick up changes to the PATH. To do that, this simple utility function will help:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;powershell&quot;&gt;&lt;pre class=&quot;language-powershell&quot;&gt;&lt;code class=&quot;language-powershell&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; RefreshEnvPath
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token variable&quot;&gt;$env&lt;/span&gt;:Path = &lt;span class=&quot;token namespace&quot;&gt;[System.Environment]&lt;/span&gt;::GetEnvironmentVariable&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Path&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Machine&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; `
        &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;[System.Environment]&lt;/span&gt;::GetEnvironmentVariable&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Path&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;User&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This method simply re-reads the Machine and User &lt;code class=&quot;language-text&quot;&gt;Path&lt;/code&gt; environment variables, concatenates them, and stores them in the variable PowerShell uses to read the PATH.&lt;/p&gt;
&lt;h2&gt;Script to Install Chocolatey&lt;/h2&gt;
&lt;p&gt;The next addition to the script is to install Chocolatey (choco, for short):&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;powershell&quot;&gt;&lt;pre class=&quot;language-powershell&quot;&gt;&lt;code class=&quot;language-powershell&quot;&gt;&lt;span class=&quot;token function&quot;&gt;iex&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;New-Object&lt;/span&gt; System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Net&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;WebClient&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DownloadString&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;https://chocolatey.org/install.ps1&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
RefreshEnvPath&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note the call to &lt;code class=&quot;language-text&quot;&gt;RefreshEnvPath&lt;/code&gt;: That ensures the &lt;code class=&quot;language-text&quot;&gt;choco&lt;/code&gt; command will run without having to start a new PowerShell window.&lt;/p&gt;
&lt;h2&gt;Script to Configure Windows Settings&lt;/h2&gt;
&lt;p&gt;The Windows Explorer default settings don&apos;t work well for most developers. The following script will show file extensions and hidden files:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;powershell&quot;&gt;&lt;pre class=&quot;language-powershell&quot;&gt;&lt;code class=&quot;language-powershell&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Navigate registry&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;Push-Location&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;Set-Location&lt;/span&gt; HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced

&lt;span class=&quot;token comment&quot;&gt;# Show file extensions&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;Set-ItemProperty&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; HideFileExt &lt;span class=&quot;token string&quot;&gt;&quot;0&quot;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# Show hidden files&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;Set-ItemProperty&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; Hidden &lt;span class=&quot;token string&quot;&gt;&quot;1&quot;&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;Pop-Location&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# Force Windows Explorer restart so settings take effect&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;Stop-Process&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;processName: Explorer &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;force&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Script to Install Developer Tools&lt;/h2&gt;
&lt;p&gt;With Chocolaty installed, to install development tools requires a simple call to &lt;code class=&quot;language-text&quot;&gt;choco install [tool name] --yes&lt;/code&gt;. The &lt;code class=&quot;language-text&quot;&gt;--yes&lt;/code&gt; flag is required so that the script doesn&apos;t prompt you to approve each installation before proceeding. For example, to install Visual Studio Code, simply run:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;powershell&quot;&gt;&lt;pre class=&quot;language-powershell&quot;&gt;&lt;code class=&quot;language-powershell&quot;&gt;choco install vscode &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;yes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When installing a tool that needs to be configured or is a prerequisite of another tool, remember to call &lt;code class=&quot;language-text&quot;&gt;RefreshEnvPath&lt;/code&gt; before proceeding, or your script will error out.&lt;/p&gt;
&lt;h3&gt;Script to Customize VS Code&lt;/h3&gt;
&lt;p&gt;Vanilla Visual Studio Code isn&apos;t very interesting, so let&apos;s customize it by installing some common plug-ins. Here&apos;s what I install by default:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;powershell&quot;&gt;&lt;pre class=&quot;language-powershell&quot;&gt;&lt;code class=&quot;language-powershell&quot;&gt;RefreshEnvPath

&lt;span class=&quot;token comment&quot;&gt;# Pretty icons&lt;/span&gt;
code &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;install-extension&lt;/span&gt; robertohuertasm&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;vscode&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;icons

&lt;span class=&quot;token comment&quot;&gt;# PowerShell&lt;/span&gt;
code &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;install-extension&lt;/span&gt; ms&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;vscode&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;PowerShell

&lt;span class=&quot;token comment&quot;&gt;# HTML, CSS, JS&lt;/span&gt;
code &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;install-extension&lt;/span&gt; Zignd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;html&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;css&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;completion
code &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;install-extension&lt;/span&gt; lonefy&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;vscode&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;JS&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;CSS&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;HTML&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;formatter
code &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;install-extension&lt;/span&gt; robinbentley&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sass&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;indented
code &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;install-extension&lt;/span&gt; dbaeumer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;vscode&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;eslint
code &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;install-extension&lt;/span&gt; steoates&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;autoimport

&lt;span class=&quot;token comment&quot;&gt;# TypeScript&lt;/span&gt;
code &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;install-extension&lt;/span&gt; eg2&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;tslint
code &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;install-extension&lt;/span&gt; johnpapa&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Angular2

&lt;span class=&quot;token comment&quot;&gt;# Docker&lt;/span&gt;
code &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;install-extension&lt;/span&gt; PeterJausovec&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;vscode&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;docker&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The commands to install VS Code extensions from PowerShell are slightly different compared to what you would put directly into the VS Code command pallet. To know what value to pass into the &lt;code class=&quot;language-text&quot;&gt;--install-extension&lt;/code&gt; command, you can grab the fully qualified extension name from the Visual Studio Marketplace URL, like so:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../img/vs-code-extension-fully-qualified-name_600x357.png&quot; alt=&quot;Fully qualified VS code extension name example&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Advanced Options&lt;/h2&gt;
&lt;p&gt;I recently configured a similar script for a large development team. Though the team uses a lot of required tools, they also have a lot options that boil down to personal preference. For example, some of the developers prefer IntelliJ while others prefer Eclipse.&lt;/p&gt;
&lt;p&gt;This can be easily handled by accepting arguments and choosing wise defaults. As an example, let&apos;s install both by default but allow the user to specify the IDE as a command-line argument. Start by using &lt;code class=&quot;language-text&quot;&gt;params&lt;/code&gt; at the top of the script:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;powershell&quot;&gt;&lt;pre class=&quot;language-powershell&quot;&gt;&lt;code class=&quot;language-powershell&quot;&gt;params&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token namespace&quot;&gt;[string[]]&lt;/span&gt;
    &lt;span class=&quot;token variable&quot;&gt;$ide&lt;/span&gt;=@&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;intellij&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;eclipse&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Later on, we can read the argument:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;powershell&quot;&gt;&lt;pre class=&quot;language-powershell&quot;&gt;&lt;code class=&quot;language-powershell&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$ide&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-contains&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;intellij&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    choco install intellijidea&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;ultimate &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;yes
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$ide&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-contains&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;eclipse&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    choco install eclipse &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;yes
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, the script can be called with the &lt;code class=&quot;language-text&quot;&gt;-ide&lt;/code&gt; argument. Here&apos;s an example to install only Eclipse:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;powershell&quot;&gt;&lt;pre class=&quot;language-powershell&quot;&gt;&lt;code class=&quot;language-powershell&quot;&gt;env&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;windows&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ps1 &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;ide eclipse&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;A Full Example&lt;/h2&gt;
&lt;p&gt;You can view &lt;a href=&quot;https://github.com/jamestharpe/windows-development-environment/blob/main/env-windows.ps1&quot;&gt;the script&lt;/a&gt; I use personally on &lt;a href=&quot;https://github.com/jamestharpe/&quot;&gt;my GitHub page&lt;/a&gt; (MIT License). Contributions welcome!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Useful Docker Commands]]></title><description><![CDATA[Useful Docker Shell Command and "Shortcuts" Start/Stop All Docker Containers This example starts then stops all containers: Remove All…]]></description><link>https://www.jamestharpe.com/docker-commands/</link><guid isPermaLink="false">https://www.jamestharpe.com/docker-commands/</guid><pubDate>Mon, 04 Sep 2017 10:24:27 GMT</pubDate><content:encoded>&lt;h1&gt;Useful Docker Shell Command and &quot;Shortcuts&quot;&lt;/h1&gt;
&lt;h2&gt;Start/Stop All Docker Containers&lt;/h2&gt;
&lt;p&gt;This example starts then stops all containers:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ docker start &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;docker &lt;span class=&quot;token function&quot;&gt;ps&lt;/span&gt; -aq&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
a12b34c5d678
b23c46d6e789
c34d57e7f790

$ docker stop &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;docker &lt;span class=&quot;token function&quot;&gt;ps&lt;/span&gt; -q&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
a12b34c5d678
b23c46d6e789
c34d57e7f790&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Remove All Docker Images&lt;/h2&gt;
&lt;p&gt;This example removes all Docker images:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ docker rmi &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;docker image &lt;span class=&quot;token function&quot;&gt;ls&lt;/span&gt; -q&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
Deleted: sha256:4314bd051463a3bbd0debc5f4c94455582187a969b710e99bd425ad0b01d6e75
Deleted: sha256:b51d913d9cc8529e31119787300e3858fb8e275b0fd763c3fc1e8346dc25bb2a
Deleted: sha256:46510f51a25eeb15c9bdf3a1cc52561d88e35f3d59809260da1b1f6499babcb4
Deleted: sha256:4b962de5545cfdec0724c35d5711060b1620bd22ec2d9cc4ed5589fd7beb178a&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: This will fail on images with running containers&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Remove all Docker Containers&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ docker &lt;span class=&quot;token function&quot;&gt;rm&lt;/span&gt; -f &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;docker &lt;span class=&quot;token function&quot;&gt;ps&lt;/span&gt; -aq&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
a12b34c5d678
b23c46d6e789
c34d57e7f790&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Stop All Running Containers&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;docker stop &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;docker &lt;span class=&quot;token function&quot;&gt;ps&lt;/span&gt; -aq&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Remove all Stopped Containers&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;docker &lt;span class=&quot;token function&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;docker &lt;span class=&quot;token function&quot;&gt;ps&lt;/span&gt; -aq&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Remove all Docker Networks&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ docker network &lt;span class=&quot;token function&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;docker network &lt;span class=&quot;token function&quot;&gt;ls&lt;/span&gt; -q&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
4f0ae26eba78
3a0bd36fab79
3f1ad27eaa88&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Remove all Docker Volumes&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ docker volume &lt;span class=&quot;token function&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;docker volume &lt;span class=&quot;token function&quot;&gt;ls&lt;/span&gt; -q&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
MyVolume1
MyVolume2
MyVolume3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Ohm's Law]]></title><description><![CDATA[Ohm's Law Ohm's Law describes the relationship between current (), voltage (), and resistance ():  Given tha values for any two variables…]]></description><link>https://www.jamestharpe.com/ohms-law/</link><guid isPermaLink="false">https://www.jamestharpe.com/ohms-law/</guid><pubDate>Tue, 28 Mar 2017 21:42:46 GMT</pubDate><content:encoded>&lt;h1&gt;Ohm&apos;s Law&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Ohm&apos;s Law&lt;/strong&gt; describes the relationship between current (&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;I&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;), voltage (&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;V&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.22222em;&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;), and resistance (&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;R&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.00773em;&quot;&gt;R&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;):&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;/&lt;/mi&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;I = V/R&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.22222em;&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.00773em;&quot;&gt;R&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Given tha values for any two variables, we solve for the third, so that:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;V = IR&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.22222em;&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.00773em;&quot;&gt;R&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;And:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;/&lt;/mi&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;R = V/I&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.00773em;&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.22222em;&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;Resistance is how much the flow of electricity is impeded, measured in ohms (&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;Ω&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;Ω&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;Ω&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;).&lt;/p&gt;
&lt;h2&gt;Video: Circuits and Ohm&apos;s Law&lt;/h2&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/F_vLWkkOETI&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;</content:encoded></item></channel></rss>